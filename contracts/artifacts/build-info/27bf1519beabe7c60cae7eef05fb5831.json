{
	"id": "27bf1519beabe7c60cae7eef05fb5831",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"contracts/NFTMinter.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract NFTMinter is ERC721, Ownable {\r\n    uint256 public currentTokenId;\r\n\r\n    struct NFT {\r\n        string name;\r\n        string metadata;\r\n        uint256 price;\r\n        address creator;\r\n    }\r\n\r\n    mapping(uint256 => NFT) public nfts;\r\n\r\n    address public liquidityWallet;\r\n    address public treasuryWallet;\r\n\r\n    constructor(address _liquidityWallet, address _treasuryWallet) ERC721(\"MyNFT\", \"MNFT\") {\r\n        liquidityWallet = _liquidityWallet;\r\n        treasuryWallet = _treasuryWallet;\r\n    }\r\n\r\n    function mintNFT(string memory _name, string memory _metadata, uint256 _price) external {\r\n        currentTokenId++;\r\n        uint256 tokenId = currentTokenId;\r\n\r\n        _mint(msg.sender, tokenId);\r\n\r\n        nfts[tokenId] = NFT({\r\n            name: _name,\r\n            metadata: _metadata,\r\n            price: _price,\r\n            creator: msg.sender\r\n        });\r\n\r\n        uint256 royaltyFee = (_price * 10) / 100; // 10% royalty fee\r\n        uint256 treasuryFee = (royaltyFee * 6) / 10; // 60% of royalty fee to treasury wallet\r\n        uint256 liquidityFee = (royaltyFee * 4) / 10; // 40% of royalty fee to liquidity wallet\r\n\r\n        // Transfer royalty fee to wallets\r\n        payable(treasuryWallet).transfer(treasuryFee);\r\n        payable(liquidityWallet).transfer(liquidityFee);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17005  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2848:2873   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2836:2838   */\n      0x20\n        /* \"#utility.yul\":2821:2839   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2702:2879   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5345:5366   */\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x21\n        /* \"#utility.yul\":5382:5400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5375:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5475   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5421:5439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5414:5476   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5492:5510   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5485:5516   */\n      mstore\n        /* \"#utility.yul\":5533:5552   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_98\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5765:5767   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5747:5768   */\n      mstore\n        /* \"#utility.yul\":5804:5806   */\n      0x3d\n        /* \"#utility.yul\":5784:5802   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5777:5807   */\n      mstore\n        /* \"#utility.yul\":5843:5877   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":5823:5841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5816:5878   */\n      mstore\n        /* \"#utility.yul\":5914:5945   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":5894:5912   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5887:5946   */\n      mstore\n        /* \"#utility.yul\":5963:5982   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_93\n        /* \"#utility.yul\":5563:5988   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4804:4811  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4789  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4763:4862  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4883:4887  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4889:4891  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4893:4900  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4882  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5094:5098  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5100:5102  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5104:5111  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5093  safeTransferFrom */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6962:6964   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6944:6965   */\n      mstore\n        /* \"#utility.yul\":7001:7003   */\n      0x29\n        /* \"#utility.yul\":6981:6999   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6974:7004   */\n      mstore\n        /* \"#utility.yul\":7040:7074   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7020:7038   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7013:7075   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":7091:7109   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7084:7123   */\n      mstore\n        /* \"#utility.yul\":7140:7159   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_93\n        /* \"#utility.yul\":6760:7165   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_123:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5359  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5337  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5311:5410  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5434:5438  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5440:5442  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5444:5451  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5453:5457  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5433  _safeTransfer */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13240:13373  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7185:7189  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13240:13373  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12661  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12675  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12713  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12690:12736  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7497:7501  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7526  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7544:7551  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7543  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7552  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7581:7586  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7577  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7622  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_166\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7622  isApprovedForAll(owner, spender) */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7657  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7650:7657  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7638:7645  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7637  getApproved */\n      tag_31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7657  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7562:7658  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11257:12460  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11381:11385  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11369:11376  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11368  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11346:11427  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11445:11461  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8279:8281   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8261:8282   */\n      mstore\n        /* \"#utility.yul\":8318:8320   */\n      0x24\n        /* \"#utility.yul\":8298:8316   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8291:8321   */\n      mstore\n        /* \"#utility.yul\":8357:8391   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":8337:8355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8330:8392   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8408:8426   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8401:8435   */\n      mstore\n        /* \"#utility.yul\":8452:8471   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_93\n        /* \"#utility.yul\":8077:8477   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11682:11686  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11670:11677  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11669  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11647:11728  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11812  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11790:11821  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12274  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12285  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12312  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12317  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11790:11821  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12317  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12344  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12358  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11813:11820  tokenId */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12999:13007  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:12995  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8684:8686   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8666:8687   */\n      mstore\n        /* \"#utility.yul\":8723:8725   */\n      0x19\n        /* \"#utility.yul\":8703:8721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8696:8726   */\n      mstore\n        /* \"#utility.yul\":8762:8789   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":8742:8760   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8735:8790   */\n      mstore\n        /* \"#utility.yul\":8807:8825   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_93\n        /* \"#utility.yul\":8482:8831   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13065  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13082  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13093  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6326:6593  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6448:6452  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6454:6456  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6458:6465  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6447  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6507:6511  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6515  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6517:6524  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6526:6530  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6506  _checkOnERC721Received */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6476:6586  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_200\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_202\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_204:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_205:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14074:14078  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14107  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14165  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_220\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14180:14184  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14186:14193  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14195:14199  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_223\n      swap2\n      dup2\n      add\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      0x01\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_225\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_230\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_229)\n    tag_230:\n      0x60\n      swap2\n      pop\n    tag_229:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14373  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14380  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14384:14385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14385  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14409:14469  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14636:14642  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14630:14643  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14621:14627  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14617:14619  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14613:14628  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14606:14644  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_225:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14250:14301  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14243:14301  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_167)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n    tag_218:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14735:14739  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_237\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_78\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_257:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_265:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_148\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_257\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_258:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_269:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_269)\n    tag_271:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_259:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_273\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_258\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_27:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_148\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_259\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_30:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_277:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_260:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_280:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_36:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_282:\n        /* \"#utility.yul\":2087:2116   */\n      tag_283\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_260\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2178:2506   */\n    tag_40:\n        /* \"#utility.yul\":2255:2261   */\n      0x00\n        /* \"#utility.yul\":2263:2269   */\n      dup1\n        /* \"#utility.yul\":2271:2277   */\n      0x00\n        /* \"#utility.yul\":2324:2326   */\n      0x60\n        /* \"#utility.yul\":2312:2321   */\n      dup5\n        /* \"#utility.yul\":2303:2310   */\n      dup7\n        /* \"#utility.yul\":2299:2322   */\n      sub\n        /* \"#utility.yul\":2295:2327   */\n      slt\n        /* \"#utility.yul\":2292:2344   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2337:2338   */\n      dup1\n        /* \"#utility.yul\":2330:2342   */\n      revert\n        /* \"#utility.yul\":2292:2344   */\n    tag_285:\n        /* \"#utility.yul\":2363:2392   */\n      tag_286\n        /* \"#utility.yul\":2382:2391   */\n      dup5\n        /* \"#utility.yul\":2363:2392   */\n      tag_260\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2353:2392   */\n      swap3\n      pop\n        /* \"#utility.yul\":2411:2449   */\n      tag_287\n        /* \"#utility.yul\":2445:2447   */\n      0x20\n        /* \"#utility.yul\":2434:2443   */\n      dup6\n        /* \"#utility.yul\":2430:2448   */\n      add\n        /* \"#utility.yul\":2411:2449   */\n      tag_260\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2401:2449   */\n      swap2\n      pop\n        /* \"#utility.yul\":2496:2498   */\n      0x40\n        /* \"#utility.yul\":2485:2494   */\n      dup5\n        /* \"#utility.yul\":2481:2499   */\n      add\n        /* \"#utility.yul\":2468:2500   */\n      calldataload\n        /* \"#utility.yul\":2458:2500   */\n      swap1\n      pop\n        /* \"#utility.yul\":2178:2506   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2511:2697   */\n    tag_51:\n        /* \"#utility.yul\":2570:2576   */\n      0x00\n        /* \"#utility.yul\":2623:2625   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup3\n        /* \"#utility.yul\":2602:2609   */\n      dup5\n        /* \"#utility.yul\":2598:2621   */\n      sub\n        /* \"#utility.yul\":2594:2626   */\n      slt\n        /* \"#utility.yul\":2591:2643   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2639:2640   */\n      0x00\n        /* \"#utility.yul\":2636:2637   */\n      dup1\n        /* \"#utility.yul\":2629:2641   */\n      revert\n        /* \"#utility.yul\":2591:2643   */\n    tag_289:\n        /* \"#utility.yul\":2662:2691   */\n      tag_148\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2662:2691   */\n      tag_260\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_60:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_293:\n        /* \"#utility.yul\":3049:3078   */\n      tag_294\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_260\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_295:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_203:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_64:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_298:\n        /* \"#utility.yul\":3580:3609   */\n      tag_299\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_260\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_300\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_260\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_301:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_302:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_304\n      tag_203\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_306\n      tag_203\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_307:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_72:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_309:\n        /* \"#utility.yul\":4679:4708   */\n      tag_310\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_260\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_311\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_260\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_82:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_313:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_314:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6402   */\n    tag_111:\n        /* \"#utility.yul\":6195:6197   */\n      0x20\n        /* \"#utility.yul\":6177:6198   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6234:6236   */\n      0x2d\n        /* \"#utility.yul\":6214:6232   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6207:6237   */\n      mstore\n        /* \"#utility.yul\":6273:6307   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6268:6270   */\n      0x40\n        /* \"#utility.yul\":6253:6271   */\n      dup3\n      add\n        /* \"#utility.yul\":6246:6308   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6339:6341   */\n      0x60\n        /* \"#utility.yul\":6324:6342   */\n      dup3\n      add\n        /* \"#utility.yul\":6317:6360   */\n      mstore\n        /* \"#utility.yul\":6392:6395   */\n      0x80\n        /* \"#utility.yul\":6377:6396   */\n      add\n      swap1\n        /* \"#utility.yul\":5993:6402   */\n      jump\t// out\n        /* \"#utility.yul\":7170:7666   */\n    tag_152:\n        /* \"#utility.yul\":7349:7352   */\n      0x00\n        /* \"#utility.yul\":7387:7393   */\n      dup4\n        /* \"#utility.yul\":7381:7394   */\n      mload\n        /* \"#utility.yul\":7403:7469   */\n      tag_321\n        /* \"#utility.yul\":7462:7468   */\n      dup2\n        /* \"#utility.yul\":7457:7460   */\n      dup5\n        /* \"#utility.yul\":7450:7454   */\n      0x20\n        /* \"#utility.yul\":7442:7448   */\n      dup9\n        /* \"#utility.yul\":7438:7455   */\n      add\n        /* \"#utility.yul\":7403:7469   */\n      tag_258\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":7532:7545   */\n      dup4\n      mload\n        /* \"#utility.yul\":7491:7507   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":7554:7624   */\n      tag_322\n        /* \"#utility.yul\":7532:7545   */\n      dup2\n        /* \"#utility.yul\":7491:7507   */\n      dup4\n        /* \"#utility.yul\":7601:7605   */\n      0x20\n        /* \"#utility.yul\":7589:7606   */\n      dup9\n      add\n        /* \"#utility.yul\":7554:7624   */\n      tag_258\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":7640:7660   */\n      add\n      swap5\n        /* \"#utility.yul\":7170:7666   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:8072   */\n    tag_173:\n        /* \"#utility.yul\":7873:7875   */\n      0x20\n        /* \"#utility.yul\":7855:7876   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7912:7914   */\n      0x25\n        /* \"#utility.yul\":7892:7910   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7885:7915   */\n      mstore\n        /* \"#utility.yul\":7951:7985   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":7946:7948   */\n      0x40\n        /* \"#utility.yul\":7931:7949   */\n      dup3\n      add\n        /* \"#utility.yul\":7924:7986   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":8017:8019   */\n      0x60\n        /* \"#utility.yul\":8002:8020   */\n      dup3\n      add\n        /* \"#utility.yul\":7995:8030   */\n      mstore\n        /* \"#utility.yul\":8062:8065   */\n      0x80\n        /* \"#utility.yul\":8047:8066   */\n      add\n      swap1\n        /* \"#utility.yul\":7671:8072   */\n      jump\t// out\n        /* \"#utility.yul\":8836:9250   */\n    tag_196:\n        /* \"#utility.yul\":9038:9040   */\n      0x20\n        /* \"#utility.yul\":9020:9041   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9077:9079   */\n      0x32\n        /* \"#utility.yul\":9057:9075   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9050:9080   */\n      mstore\n        /* \"#utility.yul\":9116:9150   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":9111:9113   */\n      0x40\n        /* \"#utility.yul\":9096:9114   */\n      dup3\n      add\n        /* \"#utility.yul\":9089:9151   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9182:9184   */\n      0x60\n        /* \"#utility.yul\":9167:9185   */\n      dup3\n      add\n        /* \"#utility.yul\":9160:9208   */\n      mstore\n        /* \"#utility.yul\":9240:9243   */\n      0x80\n        /* \"#utility.yul\":9225:9244   */\n      add\n      swap1\n        /* \"#utility.yul\":8836:9250   */\n      jump\t// out\n        /* \"#utility.yul\":9387:9876   */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9656:9671   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":9638:9672   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9708:9723   */\n      dup5\n      and\n        /* \"#utility.yul\":9703:9705   */\n      0x20\n        /* \"#utility.yul\":9688:9706   */\n      dup3\n      add\n        /* \"#utility.yul\":9681:9724   */\n      mstore\n        /* \"#utility.yul\":9755:9757   */\n      0x40\n        /* \"#utility.yul\":9740:9758   */\n      dup2\n      add\n        /* \"#utility.yul\":9733:9767   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9803:9806   */\n      0x80\n        /* \"#utility.yul\":9798:9800   */\n      0x60\n        /* \"#utility.yul\":9783:9801   */\n      dup3\n      add\n        /* \"#utility.yul\":9776:9807   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9581:9585   */\n      0x00\n      swap1\n        /* \"#utility.yul\":9824:9870   */\n      tag_329\n      swap1\n        /* \"#utility.yul\":9850:9869   */\n      dup4\n      add\n        /* \"#utility.yul\":9842:9848   */\n      dup5\n        /* \"#utility.yul\":9824:9870   */\n      tag_259\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9816:9870   */\n      swap7\n        /* \"#utility.yul\":9387:9876   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9881:10130   */\n    tag_224:\n        /* \"#utility.yul\":9950:9956   */\n      0x00\n        /* \"#utility.yul\":10003:10005   */\n      0x20\n        /* \"#utility.yul\":9991:10000   */\n      dup3\n        /* \"#utility.yul\":9982:9989   */\n      dup5\n        /* \"#utility.yul\":9978:10001   */\n      sub\n        /* \"#utility.yul\":9974:10006   */\n      slt\n        /* \"#utility.yul\":9971:10023   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":10019:10020   */\n      0x00\n        /* \"#utility.yul\":10016:10017   */\n      dup1\n        /* \"#utility.yul\":10009:10021   */\n      revert\n        /* \"#utility.yul\":9971:10023   */\n    tag_331:\n        /* \"#utility.yul\":10051:10060   */\n      dup2\n        /* \"#utility.yul\":10045:10061   */\n      mload\n        /* \"#utility.yul\":10070:10100   */\n      tag_148\n        /* \"#utility.yul\":10094:10099   */\n      dup2\n        /* \"#utility.yul\":10070:10100   */\n      tag_257\n      jump\t// in\n\n    auxdata: 0xa264697066735822122082ecd85d7735dad800cc8bfaf0a89fb35031eb6721891249ba7c92c406a6184e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_175": {
									"entryPoint": null,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:13"
															},
															"nodeType": "YulIf",
															"src": "220:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:13"
															},
															"nodeType": "YulIf",
															"src": "353:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:13"
															},
															"nodeType": "YulIf",
															"src": "536:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:13"
															},
															"nodeType": "YulIf",
															"src": "698:53:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:13"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:13"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:13"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:13",
																"statements": []
															},
															"src": "779:133:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:13",
														"type": ""
													}
												],
												"src": "146:840:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:13"
															},
															"nodeType": "YulIf",
															"src": "1119:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:13"
															},
															"nodeType": "YulIf",
															"src": "1256:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:13"
															},
															"nodeType": "YulIf",
															"src": "1429:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:13",
														"type": ""
													}
												],
												"src": "991:562:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:13"
															},
															"nodeType": "YulIf",
															"src": "1701:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:13"
															},
															"nodeType": "YulIf",
															"src": "1771:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:13",
														"type": ""
													}
												],
												"src": "1558:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:13",
														"type": ""
													}
												],
												"src": "1943:121:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:13"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:13"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:13"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:13",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:13"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:13"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:13"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:13",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:13"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:13"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:13"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:13"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:13"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:13"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:13"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:13"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:13",
																			"statements": []
																		},
																		"src": "2516:82:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:13"
															},
															"nodeType": "YulIf",
															"src": "2160:448:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:13",
														"type": ""
													}
												],
												"src": "2069:545:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:13",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:13"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:13"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:13",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:13",
														"type": ""
													}
												],
												"src": "2619:166:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:13"
															},
															"nodeType": "YulIf",
															"src": "2929:56:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:13"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:13"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:13",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:13"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:13"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:13"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:13"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:13",
																					"statements": []
																				},
																				"src": "3376:236:13"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:13",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:13",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:13"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:13"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:13"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:13",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:13"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:13"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:13",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:13"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:13"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:13"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:13"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:13"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:13"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:13"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:13",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:13"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:13"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:13"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:13"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:13",
														"type": ""
													}
												],
												"src": "2790:1352:13"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620013e7380380620013e783398101604081905262000034916200011f565b600062000042838262000218565b50600162000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6110f380620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610c7f565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610cec565b61012461011f366004610cff565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610d34565b610333565b005b61014f61015f366004610d5e565b61044d565b61014f610172366004610d5e565b61047e565b610124610185366004610cff565b610499565b61019d610198366004610d9a565b6104f9565b6040519081526020016100f3565b61010461057f565b61014f6101c1366004610db5565b61058e565b61014f6101d4366004610e07565b61059d565b6101046101e7366004610cff565b6105d5565b6100e76101fa366004610ee3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610f16565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610f16565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b600061031782610649565b506000908152600460205260409020546001600160a01b031690565b600061033e82610499565b9050806001600160a01b0316836001600160a01b0316036103b05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103cc57506103cc81336101fa565b61043e5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103a7565b61044883836106ab565b505050565b6104573382610719565b6104735760405162461bcd60e51b81526004016103a790610f50565b610448838383610798565b6104488383836040518060200160405280600081525061059d565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a7565b60006001600160a01b0382166105635760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103a7565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610f16565b6105993383836108fc565b5050565b6105a73383610719565b6105c35760405162461bcd60e51b81526004016103a790610f50565b6105cf848484846109ca565b50505050565b60606105e082610649565b60006105f760408051602081019091526000815290565b905060008151116106175760405180602001604052806000815250610642565b80610621846109fd565b604051602001610632929190610f9d565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166106a85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a7565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106e082610499565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061072583610499565b9050806001600160a01b0316846001600160a01b0316148061076c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107905750836001600160a01b03166107858461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166107ab82610499565b6001600160a01b0316146107d15760405162461bcd60e51b81526004016103a790610fcc565b6001600160a01b0382166108335760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a7565b826001600160a01b031661084682610499565b6001600160a01b03161461086c5760405162461bcd60e51b81526004016103a790610fcc565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03160361095d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a7565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6109d5848484610798565b6109e184848484610a90565b6105cf5760405162461bcd60e51b81526004016103a790611011565b60606000610a0a83610b91565b600101905060008167ffffffffffffffff811115610a2a57610a2a610df1565b6040519080825280601f01601f191660200182016040528015610a54576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a5e57509392505050565b60006001600160a01b0384163b15610b8657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ad4903390899088908890600401611063565b6020604051808303816000875af1925050508015610b0f575060408051601f3d908101601f19168201909252610b0c918101906110a0565b60015b610b6c573d808015610b3d576040519150601f19603f3d011682016040523d82523d6000602084013e610b42565b606091505b508051600003610b645760405162461bcd60e51b81526004016103a790611011565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610790565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610bd05772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610bfc576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c1a57662386f26fc10000830492506010015b6305f5e1008310610c32576305f5e100830492506008015b6127108310610c4657612710830492506004015b60648310610c58576064830492506002015b600a83106102745760010192915050565b6001600160e01b0319811681146106a857600080fd5b600060208284031215610c9157600080fd5b813561064281610c69565b60005b83811015610cb7578181015183820152602001610c9f565b50506000910152565b60008151808452610cd8816020860160208601610c9c565b601f01601f19169290920160200192915050565b6020815260006106426020830184610cc0565b600060208284031215610d1157600080fd5b5035919050565b80356001600160a01b0381168114610d2f57600080fd5b919050565b60008060408385031215610d4757600080fd5b610d5083610d18565b946020939093013593505050565b600080600060608486031215610d7357600080fd5b610d7c84610d18565b9250610d8a60208501610d18565b9150604084013590509250925092565b600060208284031215610dac57600080fd5b61064282610d18565b60008060408385031215610dc857600080fd5b610dd183610d18565b915060208301358015158114610de657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610e1d57600080fd5b610e2685610d18565b9350610e3460208601610d18565b925060408501359150606085013567ffffffffffffffff80821115610e5857600080fd5b818701915087601f830112610e6c57600080fd5b813581811115610e7e57610e7e610df1565b604051601f8201601f19908116603f01168101908382118183101715610ea657610ea6610df1565b816040528281528a6020848701011115610ebf57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610ef657600080fd5b610eff83610d18565b9150610f0d60208401610d18565b90509250929050565b600181811c90821680610f2a57607f821691505b602082108103610f4a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351610faf818460208801610c9c565b835190830190610fc3818360208801610c9c565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061109690830184610cc0565b9695505050505050565b6000602082840312156110b257600080fd5b815161064281610c6956fea264697066735822122082ecd85d7735dad800cc8bfaf0a89fb35031eb6721891249ba7c92c406a6184e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13E7 CODESIZE SUB DUP1 PUSH3 0x13E7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x0 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x10F3 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x649 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH2 0x3CC DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x457 CALLER DUP3 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x599 CALLER DUP4 DUP4 PUSH2 0x8FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A7 CALLER DUP4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x5CF DUP5 DUP5 DUP5 DUP5 PUSH2 0x9CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E0 DUP3 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x642 JUMP JUMPDEST DUP1 PUSH2 0x621 DUP5 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E0 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x790 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x785 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AB DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x846 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9D5 DUP5 DUP5 DUP5 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x9E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA0A DUP4 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA54 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA5E JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAD4 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB0F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB0C SWAP2 DUP2 ADD SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB6C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x790 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xBD0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xBFC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC1A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC32 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC46 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC58 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC9F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xCD8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x642 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD50 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8A PUSH1 0x20 DUP6 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x642 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE26 DUP6 PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH2 0xE34 PUSH1 0x20 DUP7 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7E PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA6 PUSH2 0xDF1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFF DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0D PUSH1 0x20 DUP5 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF2A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1096 SWAP1 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xEC 0xD8 0x5D PUSH24 0x35DAD800CC8BFAF0A89FB35031EB6721891249BA7C92C406 0xA6 XOR 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "628:16377:1:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:5;:13;1464:5;1456;:13;:::i;:::-;-1:-1:-1;1479:7:1;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;628:16377;;14:127:13;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:13;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:13;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:13:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:13;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:13;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:13;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:13;;;3992:26;3943:89;-1:-1:-1;;2747:1:13;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:13;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:13;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:13;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:13:o;:::-;628:16377:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1023": {
									"entryPoint": null,
									"id": 1023,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_889": {
									"entryPoint": 1707,
									"id": 889,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_326": {
									"entryPoint": null,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1010": {
									"entryPoint": null,
									"id": 1010,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_997": {
									"entryPoint": 2704,
									"id": 997,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_558": {
									"entryPoint": null,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_592": {
									"entryPoint": 1817,
									"id": 592,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1542": {
									"entryPoint": null,
									"id": 1542,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_540": {
									"entryPoint": null,
									"id": 540,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_935": {
									"entryPoint": 1609,
									"id": 935,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_527": {
									"entryPoint": 2506,
									"id": 527,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_921": {
									"entryPoint": 2300,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_865": {
									"entryPoint": 1944,
									"id": 865,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_369": {
									"entryPoint": 819,
									"id": 369,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_230": {
									"entryPoint": 1273,
									"id": 230,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_387": {
									"entryPoint": 780,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_422": {
									"entryPoint": null,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1218": {
									"entryPoint": null,
									"id": 1218,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2520": {
									"entryPoint": 2961,
									"id": 2520,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_268": {
									"entryPoint": 634,
									"id": 268,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_258": {
									"entryPoint": 1177,
									"id": 258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_468": {
									"entryPoint": 1150,
									"id": 468,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_498": {
									"entryPoint": 1437,
									"id": 498,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_404": {
									"entryPoint": 1422,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1804": {
									"entryPoint": null,
									"id": 1804,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_206": {
									"entryPoint": 552,
									"id": 206,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_278": {
									"entryPoint": 1407,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1611": {
									"entryPoint": 2557,
									"id": 1611,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_317": {
									"entryPoint": 1493,
									"id": 317,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_449": {
									"entryPoint": 1101,
									"id": 449,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4195,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3228,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3569,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10132:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:13"
															},
															"nodeType": "YulIf",
															"src": "68:71:13"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:13",
														"type": ""
													}
												],
												"src": "14:131:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:13"
															},
															"nodeType": "YulIf",
															"src": "229:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:13",
														"type": ""
													}
												],
												"src": "150:245:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:13",
														"type": ""
													}
												],
												"src": "400:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:13",
																"statements": []
															},
															"src": "687:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:13",
														"type": ""
													}
												],
												"src": "592:250:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:13",
														"type": ""
													}
												],
												"src": "847:271:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:13",
														"type": ""
													}
												],
												"src": "1123:220:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:13"
															},
															"nodeType": "YulIf",
															"src": "1428:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:13",
														"type": ""
													}
												],
												"src": "1348:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:13",
														"type": ""
													}
												],
												"src": "1533:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:13"
															},
															"nodeType": "YulIf",
															"src": "1838:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:13",
														"type": ""
													}
												],
												"src": "1741:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:13"
															},
															"nodeType": "YulIf",
															"src": "2016:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:13",
														"type": ""
													}
												],
												"src": "1919:254:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2282:224:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2328:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2340:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2330:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2330:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2330:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2303:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2324:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:32:13"
															},
															"nodeType": "YulIf",
															"src": "2292:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2353:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2363:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2401:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2445:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2430:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2411:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2458:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2485:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2496:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2468:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2232:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2243:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2255:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2263:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2271:6:13",
														"type": ""
													}
												],
												"src": "2178:328:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2581:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2627:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2629:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2629:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2629:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2602:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2598:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2623:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2594:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:32:13"
															},
															"nodeType": "YulIf",
															"src": "2591:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2652:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2547:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2558:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2570:6:13",
														"type": ""
													}
												],
												"src": "2511:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2803:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2813:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2825:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2836:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2821:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2813:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2855:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2866:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2848:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2772:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2783:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2794:4:13",
														"type": ""
													}
												],
												"src": "2702:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3014:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:32:13"
															},
															"nodeType": "YulIf",
															"src": "2978:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3039:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3185:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:40:13"
															},
															"nodeType": "YulIf",
															"src": "3141:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3220:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2926:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2937:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2949:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2957:6:13",
														"type": ""
													}
												],
												"src": "2884:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3268:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3498:1008:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3545:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:33:13"
															},
															"nodeType": "YulIf",
															"src": "3508:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3570:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3675:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3791:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3836:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:14:13"
															},
															"nodeType": "YulIf",
															"src": "3818:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3941:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:35:13"
															},
															"nodeType": "YulIf",
															"src": "3902:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:16:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4015:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:10:13"
															},
															"nodeType": "YulIf",
															"src": "4001:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:7:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:13"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4234:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:46:13"
															},
															"nodeType": "YulIf",
															"src": "4184:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:13"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4360:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:13"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:33:13"
															},
															"nodeType": "YulIf",
															"src": "4323:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:13"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:13"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:16:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4494:6:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3440:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3451:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3463:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3471:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3479:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3487:6:13",
														"type": ""
													}
												],
												"src": "3368:1138:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4598:173:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4644:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:32:13"
															},
															"nodeType": "YulIf",
															"src": "4608:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4717:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4556:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4567:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4579:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4587:6:13",
														"type": ""
													}
												],
												"src": "4511:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4841:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4898:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4949:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4951:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:26:13"
															},
															"nodeType": "YulIf",
															"src": "4919:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5039:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:38:13"
															},
															"nodeType": "YulIf",
															"src": "4989:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4811:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4820:6:13",
														"type": ""
													}
												],
												"src": "4776:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:223:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5375:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5375:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:13"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5441:34:13",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:13"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5512:3:13",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5485:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5525:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5537:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5533:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5312:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:13",
														"type": ""
													}
												],
												"src": "5161:397:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5737:251:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5747:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5799:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5804:2:13",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5777:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5827:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5838:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5823:18:13"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5843:34:13",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5816:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5816:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5898:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5909:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5894:18:13"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5914:31:13",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5887:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5887:59:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5887:59:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5955:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5967:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5978:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5955:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5714:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5728:4:13",
														"type": ""
													}
												],
												"src": "5563:425:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6167:235:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6177:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6218:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6229:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6214:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:13",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6207:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6268:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6253:18:13"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6273:34:13",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6246:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6246:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:13"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6344:15:13",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6317:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6317:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6369:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6392:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6377:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6144:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6158:4:13",
														"type": ""
													}
												],
												"src": "5993:409:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6581:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6591:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6632:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6643:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6628:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6648:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6621:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6621:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6671:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6682:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6667:18:13"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6687:26:13",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6660:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6723:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6723:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6558:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6572:4:13",
														"type": ""
													}
												],
												"src": "6407:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6934:231:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6951:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6944:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6985:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6996:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6981:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6981:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7001:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6974:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7024:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7035:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7020:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7020:18:13"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7040:34:13",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7013:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7013:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:13"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7111:11:13",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:39:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7132:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7144:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7155:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7140:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7140:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7132:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6911:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6925:4:13",
														"type": ""
													}
												],
												"src": "6760:405:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7357:309:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7367:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7381:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7381:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7371:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7442:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7450:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:17:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7457:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7462:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7403:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7403:66:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7478:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7495:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7500:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7491:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7491:16:13"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "7482:5:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7516:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7538:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7532:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7532:13:13"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "7520:8:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7593:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7601:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7589:17:13"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "7608:5:13"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "7615:8:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7554:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7554:70:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7554:70:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7633:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "7644:5:13"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "7651:8:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:20:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7633:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7325:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7330:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7338:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7349:3:13",
														"type": ""
													}
												],
												"src": "7170:496:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7845:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7862:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7873:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7855:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7855:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7896:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7907:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7912:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7885:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7935:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7946:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7931:18:13"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7951:34:13",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7924:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8006:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8017:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8002:18:13"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8022:7:13",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7995:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7995:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8039:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8062:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8039:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7822:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7836:4:13",
														"type": ""
													}
												],
												"src": "7671:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8251:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8268:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8261:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8302:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8313:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8298:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8318:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8291:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8341:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8352:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8337:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8337:18:13"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8357:34:13",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8330:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8330:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8330:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8412:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8423:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8408:18:13"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8428:6:13",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8401:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8401:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8444:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8456:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8467:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8452:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8444:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8228:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8242:4:13",
														"type": ""
													}
												],
												"src": "8077:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8656:175:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8673:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8684:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8666:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8666:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8703:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8703:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8723:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8696:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8696:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8696:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8746:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8757:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8742:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8742:18:13"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8762:27:13",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8735:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8735:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8735:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8799:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8811:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8822:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8633:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8647:4:13",
														"type": ""
													}
												],
												"src": "8482:349:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9010:240:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9027:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9038:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9020:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9020:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9061:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9072:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:13",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9050:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9050:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9100:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9111:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9096:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9096:18:13"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9116:34:13",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9089:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9089:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9182:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9167:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9167:18:13"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9187:20:13",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9160:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9217:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9240:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9225:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9225:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9217:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8987:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9001:4:13",
														"type": ""
													}
												],
												"src": "8836:414:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9287:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9304:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9311:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9316:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9307:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9297:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9297:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9344:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9347:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9337:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9337:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9368:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9371:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9361:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9361:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9361:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9255:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9590:286:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9600:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9623:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9614:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9614:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9627:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9610:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9610:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9604:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9645:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9660:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9668:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9656:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9656:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9638:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9638:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9638:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9692:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9703:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9688:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9688:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9712:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9720:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9708:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9708:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9681:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9681:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9681:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9744:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9755:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9740:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9740:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9760:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9733:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9733:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9787:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9798:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9783:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9783:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9803:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9776:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9776:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9776:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9816:54:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9842:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9854:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9865:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9850:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9850:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "9824:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9824:46:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9816:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9535:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9546:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9554:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9562:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9570:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9581:4:13",
														"type": ""
													}
												],
												"src": "9387:489:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9961:169:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10007:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10016:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10019:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10009:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10009:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10009:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9982:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9991:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9978:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9978:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10003:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9974:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9974:32:13"
															},
															"nodeType": "YulIf",
															"src": "9971:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10032:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10051:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10045:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10045:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10036:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10094:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "10070:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10070:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10070:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10109:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10119:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10109:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9927:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9938:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9950:6:13",
														"type": ""
													}
												],
												"src": "9881:249:13"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x649 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH2 0x3CC DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x457 CALLER DUP3 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x599 CALLER DUP4 DUP4 PUSH2 0x8FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A7 CALLER DUP4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x5CF DUP5 DUP5 DUP5 DUP5 PUSH2 0x9CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E0 DUP3 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x642 JUMP JUMPDEST DUP1 PUSH2 0x621 DUP5 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E0 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x790 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x785 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AB DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x846 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9D5 DUP5 DUP5 DUP5 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x9E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA0A DUP4 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA54 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA5E JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAD4 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB0F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB0C SWAP2 DUP2 ADD SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB6C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x790 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xBD0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xBFC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC1A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC32 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC46 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC58 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC9F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xCD8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x642 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD50 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8A PUSH1 0x20 DUP6 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x642 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE26 DUP6 PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH2 0xE34 PUSH1 0x20 DUP7 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7E PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA6 PUSH2 0xDF1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFF DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0D PUSH1 0x20 DUP5 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF2A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1096 SWAP1 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xEC 0xD8 0x5D PUSH24 0x35DAD800CC8BFAF0A89FB35031EB6721891249BA7C92C406 0xA6 XOR 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "628:16377:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:13;;558:22;540:41;;528:2;513:18;1570:300:1;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:13;;;1679:51;;1667:2;1652:18;3935:167:1;1533:203:13;3468:406:1;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:13;;;2836:2;2821:18;1929:204:1;2702:177:13;2633:102:1;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:1;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1827:36:1;1688:175;1570:300;-1:-1:-1;;1570:300:1:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:1;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:1;:2;-1:-1:-1;;;;;3605:11:1;;3597:57;;;;-1:-1:-1;;;3597:57:1;;5363:2:13;3597:57:1;;;5345:21:13;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:13;;;5485:31;5533:19;;3597:57:1;;;;;;;;;719:10:6;-1:-1:-1;;;;;3686:21:1;;;;:62;;-1:-1:-1;3711:37:1;3728:5;719:10:6;4388:162:1;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:1;;5765:2:13;3665:170:1;;;5747:21:13;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:1;5563:425:13;3665:170:1;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;719:10:6;4804:7:1;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:1;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:1;;2324:56;;;;-1:-1:-1;;;2324:56:1;;6609:2:13;2324:56:1;;;6591:21:13;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:13;;;6660:54;6731:18;;2324:56:1;6407:348:13;1929:204:1;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:73;;;;-1:-1:-1;;;2020:73:1;;6962:2:13;2020:73:1;;;6944:21:13;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:13;;;7084:39;7140:19;;2020:73:1;6760:405:13;2020:73:1;-1:-1:-1;;;;;;2110:16:1;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:6;4296:8:1;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:6;5352:7:1;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:1;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:1;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:1:o;13240:133::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:1;13313:53;;;;-1:-1:-1;;;13313:53:1;;6609:2:13;13313:53:1;;;6591:21:13;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:13;;;6660:54;6731:18;;13313:53:1;6407:348:13;13313:53:1;13240:133;:::o;12572:171::-;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:1;-1:-1:-1;;;;;12646:29:1;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:1;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:1;:7;-1:-1:-1;;;;;7570:16:1;;:52;;;-1:-1:-1;;;;;;4508:25:1;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7590:32;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:1;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:1;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:1:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:1;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:1;;11346:81;;;;-1:-1:-1;;;11346:81:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:1;;11437:65;;;;-1:-1:-1;;;11437:65:1;;8279:2:13;11437:65:1;;;8261:21:13;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:13;;;8401:34;8452:19;;11437:65:1;8077:400:13;11437:65:1;11682:4;-1:-1:-1;;;;;11655:31:1;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:1;;11647:81;;;;-1:-1:-1;;;11647:81:1;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:1;;;;;;-1:-1:-1;;;;;12265:15:1;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:1;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;12879:277::-;12999:8;-1:-1:-1;;;;;12990:17:1;:5;-1:-1:-1;;;;;12990:17:1;;12982:55;;;;-1:-1:-1;;;12982:55:1;;8684:2:13;12982:55:1;;;8666:21:13;8723:2;8703:18;;;8696:30;8762:27;8742:18;;;8735:55;8807:18;;12982:55:1;8482:349:13;12982:55:1;-1:-1:-1;;;;;13047:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:1;;;;;;;;;;13108:41;;540::13;;;13108::1;;513:18:13;13108:41:1;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:1;;;;;;;:::i;447:696:7:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:7;-1:-1:-1;604:41:7;-1:-1:-1;765:28:7;;;781:2;765:28;820:280;-1:-1:-1;;851:5:7;-1:-1:-1;;;985:2:7;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:7;820:280;1064:21;-1:-1:-1;1120:6:7;447:696;-1:-1:-1;;;447:696:7:o;13925:831:1:-;14074:4;-1:-1:-1;;;;;14094:13:1;;1702:19:5;:23;14090:660:1;;14129:71;;-1:-1:-1;;;14129:71:1;;-1:-1:-1;;;;;14129:36:1;;;;;:71;;719:10:6;;14180:4:1;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:1;;;;;;;;-1:-1:-1;;14129:71:1;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:1;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:1;-1:-1:-1;;;14250:51:1;;-1:-1:-1;14243:58:1;;14090:660;-1:-1:-1;14735:4:1;13925:831;;;;;;:::o;10139:916:10:-;10192:7;;-1:-1:-1;;;10267:17:10;;10263:103;;-1:-1:-1;;;10304:17:10;;;-1:-1:-1;10349:2:10;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:10;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:10;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:10;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:10;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:10;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:10:o;14:131:13:-;-1:-1:-1;;;;;;88:32:13;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:13;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:13;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:13:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:13;;1348:180;-1:-1:-1;1348:180:13:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:13;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:13:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:13;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:13;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:13:o;7671:401::-;7873:2;7855:21;;;7912:2;7892:18;;;7885:30;7951:34;7946:2;7931:18;;7924:62;-1:-1:-1;;;8017:2:13;8002:18;;7995:35;8062:3;8047:19;;7671:401::o;8836:414::-;9038:2;9020:21;;;9077:2;9057:18;;;9050:30;9116:34;9111:2;9096:18;;9089:62;-1:-1:-1;;;9182:2:13;9167:18;;9160:48;9240:3;9225:19;;8836:414::o;9387:489::-;-1:-1:-1;;;;;9656:15:13;;;9638:34;;9708:15;;9703:2;9688:18;;9681:43;9755:2;9740:18;;9733:34;;;9803:3;9798:2;9783:18;;9776:31;;;9581:4;;9824:46;;9850:19;;9842:6;9824:46;:::i;:::-;9816:54;9387:489;-1:-1:-1;;;;;;9387:489:13:o;9881:249::-;9950:6;10003:2;9991:9;9982:7;9978:23;9974:32;9971:52;;;10019:1;10016;10009:12;9971:52;10051:9;10045:16;10070:30;10094:5;10070:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "867800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4769",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2561",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 13,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 13,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17005,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122082ecd85d7735dad800cc8bfaf0a89fb35031eb6721891249ba7c92c406a6184e64736f6c63430008120033",
									".code": [
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 17005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2838,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2702,
											"end": 2879,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5441,
											"end": 5475,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5414,
											"end": 5476,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5516,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5768,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 13,
											"value": "3D"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 5877,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5816,
											"end": 5878,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5945,
											"name": "PUSH",
											"source": 13,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5887,
											"end": 5946,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5563,
											"end": 5988,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4804,
											"end": 4811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4771,
											"end": 4812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4763,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 4891,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4873,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5077,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6965,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7003,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6974,
											"end": 7004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7074,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7013,
											"end": 7075,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7084,
											"end": 7123,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6760,
											"end": 7165,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5352,
											"end": 5359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5319,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5311,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5434,
											"end": 5438,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5442,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5420,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13240,
											"end": 13373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 12699,
											"end": 12722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12572,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7497,
											"end": 7501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7529,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7638,
											"end": 7645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7626,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7658,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7404,
											"end": 7665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 11369,
											"end": 11376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 11354,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 11346,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8261,
											"end": 8282,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8318,
											"end": 8320,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8291,
											"end": 8321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8357,
											"end": 8391,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8330,
											"end": 8392,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 8435,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8077,
											"end": 8477,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11682,
											"end": 11686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 11670,
											"end": 11677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 11655,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 11647,
											"end": 11728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11812,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12274,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12344,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12999,
											"end": 13007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12990,
											"end": 12995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8684,
											"end": 8686,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8666,
											"end": 8687,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8723,
											"end": 8725,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8696,
											"end": 8726,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8735,
											"end": 8790,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8482,
											"end": 8831,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6448,
											"end": 6452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6438,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6517,
											"end": 6524,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6530,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6484,
											"end": 6531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6476,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 851,
											"end": 856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 974,
											"end": 988,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14186,
											"end": 14193,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14186,
											"end": 14193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14367,
											"end": 14373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14367,
											"end": 14380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14384,
											"end": 14385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14367,
											"end": 14385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 14409,
											"end": 14469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14636,
											"end": 14642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14630,
											"end": 14643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14621,
											"end": 14627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14617,
											"end": 14619,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14613,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14606,
											"end": 14644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14735,
											"end": 14739,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2322,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2295,
											"end": 2327,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 2363,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 2445,
											"end": 2447,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 2411,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2468,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2625,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 2662,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 13,
											"value": "2D"
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6207,
											"end": 6237,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6268,
											"end": 6270,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6246,
											"end": 6308,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6317,
											"end": 6360,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6392,
											"end": 6395,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7387,
											"end": 7393,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7381,
											"end": 7394,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 7462,
											"end": 7468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7438,
											"end": 7455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 7403,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 7554,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7170,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7873,
											"end": 7875,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7885,
											"end": 7915,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7951,
											"end": 7985,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7924,
											"end": 7986,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8017,
											"end": 8019,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7995,
											"end": 8030,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8062,
											"end": 8065,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9077,
											"end": 9079,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9050,
											"end": 9080,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9116,
											"end": 9150,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 9111,
											"end": 9113,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9151,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9182,
											"end": 9184,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9160,
											"end": 9208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9240,
											"end": 9243,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 9250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9387,
											"end": 9876,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 9387,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9656,
											"end": 9671,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9656,
											"end": 9671,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9656,
											"end": 9671,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9638,
											"end": 9672,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9638,
											"end": 9672,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 9723,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 9723,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 9724,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9755,
											"end": 9757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9733,
											"end": 9767,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9733,
											"end": 9767,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9733,
											"end": 9767,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9803,
											"end": 9806,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9798,
											"end": 9800,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9776,
											"end": 9807,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9776,
											"end": 9807,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9776,
											"end": 9807,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9585,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9585,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9850,
											"end": 9869,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9850,
											"end": 9869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9842,
											"end": 9848,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 9824,
											"end": 9870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9816,
											"end": 9870,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 9387,
											"end": 9876,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9387,
											"end": 9876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9881,
											"end": 10130,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 9881,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10003,
											"end": 10005,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9991,
											"end": 10000,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 9989,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9978,
											"end": 10001,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9974,
											"end": 10006,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10019,
											"end": 10020,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10017,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10009,
											"end": 10021,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10051,
											"end": 10060,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10045,
											"end": 10061,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10070,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10070,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 10070,
											"end": 10100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTMinter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 144,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 148,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 152,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xDA DUP4 SWAP13 PUSH18 0xDE4998B97BB5D687B69290308A06D6755FF9 0xD7 0xD 0x1E PUSH11 0x9A3A0190DC64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xDA DUP4 SWAP13 PUSH18 0xDE4998B97BB5D687B69290308A06D6755FF9 0xD7 0xD 0x1E PUSH11 0x9A3A0190DC64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208dda839c71de4998b97bb5d687b69290308a06d6755ff9d70d1e6a9a3a0190dc64736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTMinter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP4 EXP CALLVALUE DUP10 0xB1 DUP7 0xCB 0x22 PUSH2 0x2417 MSTORE8 NUMBER 0xA7 DUP6 0x29 0xBC 0xC2 0xD2 0xE5 JUMPDEST SWAP6 0xE7 PUSH17 0xB81F1D26F6039764736F6C634300081200 CALLER ",
							"sourceMap": "220:2559:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP4 EXP CALLVALUE DUP10 0xB1 DUP7 0xCB 0x22 PUSH2 0x2417 MSTORE8 NUMBER 0xA7 DUP6 0x29 0xBC 0xC2 0xD2 0xE5 JUMPDEST SWAP6 0xE7 PUSH17 0xB81F1D26F6039764736F6C634300081200 CALLER ",
							"sourceMap": "220:2559:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122033930a3489b186cb226124175343a78529bcc2d2e55b95e770b81f1d26f6039764736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTMinter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH31 0x6F093317EB262BEF746ACF1BC4B738CB2FAEFB2B0378951461CB8198D76473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "202:12582:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH31 0x6F093317EB262BEF746ACF1BC4B738CB2FAEFB2B0378951461CB8198D76473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "202:12582:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTMinter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xE0 0xD7 0xCA 0xF8 0xB5 CALLDATASIZE PUSH15 0xD2E6EA208CB596A40B3CCD2C7E9FC PUSH2 0xD4D 0xE6 XOR JUMP STATICCALL PUSH7 0xA64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "215:1047:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xE0 0xD7 0xCA 0xF8 0xB5 CALLDATASIZE PUSH15 0xD2E6EA208CB596A40B3CCD2C7E9FC PUSH2 0xD4D 0xE6 XOR JUMP STATICCALL PUSH7 0xA64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "215:1047:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0e0d7caf8b5366e0d2e6ea208cb596a40b3ccd2c7e9fc610d4de61856fa660a64736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTMinter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTMinter.sol": {
				"NFTMinter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_liquidityWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasuryWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_metadata",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "mintNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nfts",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "metadata",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMinter.sol\":175:1492  contract NFTMinter is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTMinter.sol\":502:685  constructor(address _liquidityWallet, address _treasuryWallet) ERC721(\"MyNFT\", \"MNFT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xda, 0x135e539195)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe2, 0x13539195)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/NFTMinter.sol\":600:615  liquidityWallet */\n  0x09\n    /* \"contracts/NFTMinter.sol\":600:634  liquidityWallet = _liquidityWallet */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/NFTMinter.sol\":645:659  treasuryWallet */\n  0x0a\n    /* \"contracts/NFTMinter.sol\":645:677  treasuryWallet = _treasuryWallet */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/NFTMinter.sol\":175:1492  contract NFTMinter is ERC721, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x06\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_20:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_28:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_30:\n    /* \"#utility.yul\":375:415   */\n  tag_31\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_20\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_32\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_20\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:621   */\ntag_21:\n    /* \"#utility.yul\":555:565   */\n  0x4e487b71\n    /* \"#utility.yul\":550:553   */\n  0xe0\n    /* \"#utility.yul\":546:566   */\n  shl\n    /* \"#utility.yul\":543:544   */\n  0x00\n    /* \"#utility.yul\":536:567   */\n  mstore\n    /* \"#utility.yul\":586:590   */\n  0x41\n    /* \"#utility.yul\":583:584   */\n  0x04\n    /* \"#utility.yul\":576:591   */\n  mstore\n    /* \"#utility.yul\":610:614   */\n  0x24\n    /* \"#utility.yul\":607:608   */\n  0x00\n    /* \"#utility.yul\":600:615   */\n  revert\n    /* \"#utility.yul\":626:1006   */\ntag_22:\n    /* \"#utility.yul\":705:706   */\n  0x01\n    /* \"#utility.yul\":701:713   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":748:760   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":769:830   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":823:827   */\n  0x7f\n    /* \"#utility.yul\":815:821   */\n  dup3\n    /* \"#utility.yul\":811:828   */\n  and\n    /* \"#utility.yul\":801:828   */\n  swap2\n  pop\n    /* \"#utility.yul\":769:830   */\ntag_35:\n    /* \"#utility.yul\":876:878   */\n  0x20\n    /* \"#utility.yul\":868:874   */\n  dup3\n    /* \"#utility.yul\":865:879   */\n  lt\n    /* \"#utility.yul\":845:863   */\n  dup2\n    /* \"#utility.yul\":842:880   */\n  sub\n    /* \"#utility.yul\":839:1000   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":922:932   */\n  0x4e487b71\n    /* \"#utility.yul\":917:920   */\n  0xe0\n    /* \"#utility.yul\":913:933   */\n  shl\n    /* \"#utility.yul\":910:911   */\n  0x00\n    /* \"#utility.yul\":903:934   */\n  mstore\n    /* \"#utility.yul\":957:961   */\n  0x22\n    /* \"#utility.yul\":954:955   */\n  0x04\n    /* \"#utility.yul\":947:962   */\n  mstore\n    /* \"#utility.yul\":985:989   */\n  0x24\n    /* \"#utility.yul\":982:983   */\n  0x00\n    /* \"#utility.yul\":975:990   */\n  revert\n    /* \"#utility.yul\":839:1000   */\ntag_36:\n  pop\n    /* \"#utility.yul\":626:1006   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1137:1682   */\ntag_24:\n    /* \"#utility.yul\":1239:1241   */\n  0x1f\n    /* \"#utility.yul\":1234:1237   */\n  dup3\n    /* \"#utility.yul\":1231:1242   */\n  gt\n    /* \"#utility.yul\":1228:1676   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1275:1276   */\n  0x00\n    /* \"#utility.yul\":1300:1305   */\n  dup2\n    /* \"#utility.yul\":1296:1298   */\n  dup2\n    /* \"#utility.yul\":1289:1306   */\n  mstore\n    /* \"#utility.yul\":1345:1349   */\n  0x20\n    /* \"#utility.yul\":1341:1343   */\n  dup2\n    /* \"#utility.yul\":1331:1350   */\n  keccak256\n    /* \"#utility.yul\":1415:1417   */\n  0x1f\n    /* \"#utility.yul\":1403:1413   */\n  dup6\n    /* \"#utility.yul\":1399:1418   */\n  add\n    /* \"#utility.yul\":1396:1397   */\n  0x05\n    /* \"#utility.yul\":1392:1419   */\n  shr\n    /* \"#utility.yul\":1386:1390   */\n  dup2\n    /* \"#utility.yul\":1382:1420   */\n  add\n    /* \"#utility.yul\":1451:1455   */\n  0x20\n    /* \"#utility.yul\":1439:1449   */\n  dup7\n    /* \"#utility.yul\":1436:1456   */\n  lt\n    /* \"#utility.yul\":1433:1480   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":1474:1478   */\n  dup1\n    /* \"#utility.yul\":1433:1480   */\ntag_40:\n    /* \"#utility.yul\":1529:1531   */\n  0x1f\n    /* \"#utility.yul\":1524:1527   */\n  dup6\n    /* \"#utility.yul\":1520:1532   */\n  add\n    /* \"#utility.yul\":1517:1518   */\n  0x05\n    /* \"#utility.yul\":1513:1533   */\n  shr\n    /* \"#utility.yul\":1507:1511   */\n  dup3\n    /* \"#utility.yul\":1503:1534   */\n  add\n    /* \"#utility.yul\":1493:1534   */\n  swap2\n  pop\n    /* \"#utility.yul\":1584:1666   */\ntag_41:\n    /* \"#utility.yul\":1602:1604   */\n  dup2\n    /* \"#utility.yul\":1595:1600   */\n  dup2\n    /* \"#utility.yul\":1592:1605   */\n  lt\n    /* \"#utility.yul\":1584:1666   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1647:1664   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1628:1629   */\n  0x01\n    /* \"#utility.yul\":1617:1630   */\n  add\n    /* \"#utility.yul\":1584:1666   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":1588:1591   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1228:1676   */\ntag_39:\n    /* \"#utility.yul\":1137:1682   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1858:3210   */\ntag_9:\n    /* \"#utility.yul\":1978:1988   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2000:2030   */\n  dup2\n  gt\n    /* \"#utility.yul\":1997:2053   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2033:2051   */\n  tag_47\n  tag_21\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2062:2159   */\n  tag_48\n    /* \"#utility.yul\":2152:2158   */\n  dup2\n    /* \"#utility.yul\":2112:2150   */\n  tag_49\n    /* \"#utility.yul\":2144:2148   */\n  dup5\n    /* \"#utility.yul\":2138:2149   */\n  sload\n    /* \"#utility.yul\":2112:2150   */\n  tag_22\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":2106:2110   */\n  dup5\n    /* \"#utility.yul\":2062:2159   */\n  tag_24\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2214:2218   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2278:2280   */\n  0x1f\n    /* \"#utility.yul\":2267:2281   */\n  dup4\n  gt\n    /* \"#utility.yul\":2295:2296   */\n  0x01\n    /* \"#utility.yul\":2290:2953   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2997:2998   */\n  0x00\n    /* \"#utility.yul\":3014:3020   */\n  dup5\n    /* \"#utility.yul\":3011:3100   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3066:3085   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3060:3086   */\n  mload\n    /* \"#utility.yul\":3011:3100   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":1815:1816   */\n  0x03\n    /* \"#utility.yul\":1811:1822   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1807:1831   */\n  shr\n    /* \"#utility.yul\":1803:1832   */\n  not\n    /* \"#utility.yul\":1793:1833   */\n  and\n    /* \"#utility.yul\":1839:1840   */\n  0x01\n    /* \"#utility.yul\":1835:1846   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1790:1847   */\n  or\n    /* \"#utility.yul\":3113:3194   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2260:3204   */\n  jump(tag_43)\n    /* \"#utility.yul\":2290:2953   */\ntag_51:\n    /* \"#utility.yul\":1084:1085   */\n  0x00\n    /* \"#utility.yul\":1077:1091   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1121:1125   */\n  0x20\n    /* \"#utility.yul\":1108:1126   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2326:2346   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2444:2680   */\ntag_55:\n    /* \"#utility.yul\":2458:2465   */\n  dup3\n    /* \"#utility.yul\":2455:2456   */\n  dup2\n    /* \"#utility.yul\":2452:2466   */\n  lt\n    /* \"#utility.yul\":2444:2680   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2547:2566   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2541:2567   */\n  mload\n    /* \"#utility.yul\":2526:2568   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2639:2666   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2607:2608   */\n  0x01\n    /* \"#utility.yul\":2595:2609   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2474:2493   */\n  dup5\n  add\n    /* \"#utility.yul\":2444:2680   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":2448:2451   */\n  pop\n    /* \"#utility.yul\":2708:2714   */\n  dup6\n    /* \"#utility.yul\":2699:2706   */\n  dup3\n    /* \"#utility.yul\":2696:2715   */\n  lt\n    /* \"#utility.yul\":2693:2894   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2769:2788   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2763:2789   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2852:2853   */\n  0x03\n    /* \"#utility.yul\":2848:2862   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2864:2867   */\n  0xf8\n    /* \"#utility.yul\":2844:2868   */\n  and\n    /* \"#utility.yul\":2840:2877   */\n  shr\n    /* \"#utility.yul\":2836:2878   */\n  not\n    /* \"#utility.yul\":2821:2879   */\n  and\n    /* \"#utility.yul\":2806:2880   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2693:2894   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2940:2941   */\n  0x01\n    /* \"#utility.yul\":2924:2938   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2920:2942   */\n  add\n    /* \"#utility.yul\":2907:2943   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1858:3210   */\n  jump\t// out\ntag_26:\n    /* \"contracts/NFTMinter.sol\":175:1492  contract NFTMinter is ERC721, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMinter.sol\":175:1492  contract NFTMinter is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64b30907\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd4698016\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x64b30907\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x23b872dd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x265aa621\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4626402b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x9a9b7b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTMinter.sol\":220:249  uint256 public currentTokenId */\n    tag_3:\n      tag_27\n      sload(0x07)\n      dup2\n      jump\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/NFTMinter.sol\":220:249  uint256 public currentTokenId */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":747:761   */\n      swap1\n      iszero\n        /* \"#utility.yul\":740:762   */\n      iszero\n        /* \"#utility.yul\":722:763   */\n      dup2\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":695:713   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_29\n        /* \"#utility.yul\":582:769   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_6:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1879:1911   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1861:1912   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1849:1851   */\n      0x20\n        /* \"#utility.yul\":1834:1852   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_29\n        /* \"#utility.yul\":1715:1918   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_7:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_8:\n      tag_47\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n        /* \"contracts/NFTMinter.sol\":383:418  mapping(uint256 => NFT) public nfts */\n    tag_9:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_29\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_10:\n      tag_47\n      tag_61\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"contracts/NFTMinter.sol\":464:493  address public treasuryWallet */\n    tag_11:\n      sload(0x0a)\n      tag_41\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_12:\n      tag_41\n      tag_67\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"contracts/NFTMinter.sol\":693:1489  function mintNFT(string memory _name, string memory _metadata, uint256 _price) external {... */\n    tag_13:\n      tag_47\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_27\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_47\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_41)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_37\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_18:\n      tag_47\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_19:\n      tag_47\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_20:\n      tag_37\n      tag_96\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"contracts/NFTMinter.sol\":427:457  address public liquidityWallet */\n    tag_21:\n      sload(0x09)\n      tag_41\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_22:\n      tag_31\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_47\n      tag_108\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_111\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_113\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_117\n      jump\t// in\n    tag_118:\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_120\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_119)\n    tag_120:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_123:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6930:6932   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6912:6933   */\n      mstore\n        /* \"#utility.yul\":6969:6971   */\n      0x21\n        /* \"#utility.yul\":6949:6967   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6942:6972   */\n      mstore\n        /* \"#utility.yul\":7008:7042   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":6988:7006   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6981:7043   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":7059:7077   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7052:7083   */\n      mstore\n        /* \"#utility.yul\":7100:7119   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_133\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_105\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7332:7334   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7314:7335   */\n      mstore\n        /* \"#utility.yul\":7371:7373   */\n      0x3d\n        /* \"#utility.yul\":7351:7369   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7344:7374   */\n      mstore\n        /* \"#utility.yul\":7410:7444   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":7390:7408   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7383:7445   */\n      mstore\n        /* \"#utility.yul\":7481:7512   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":7461:7479   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7454:7513   */\n      mstore\n        /* \"#utility.yul\":7530:7549   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_128\n        /* \"#utility.yul\":7130:7555   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4908  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_141\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4804:4811  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4789  _isApprovedOrOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4771:4812  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4763:4862  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_146\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4883:4887  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4889:4891  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4893:4900  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4882  _transfer */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4901  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"contracts/NFTMinter.sol\":383:418  mapping(uint256 => NFT) public nfts */\n    tag_57:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      dup2\n      swap1\n      tag_149\n      swap1\n      tag_117\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_117\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_117\n      jump\t// in\n    tag_154:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_117\n      jump\t// in\n    tag_155:\n      dup1\n      iszero\n      tag_156\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_157\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_156)\n    tag_157:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_158:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_158\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4974:5123  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5094:5098  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5100:5102  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5104:5111  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5093  safeTransferFrom */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5077:5116  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8176:8178   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8158:8179   */\n      mstore\n        /* \"#utility.yul\":8215:8217   */\n      0x18\n        /* \"#utility.yul\":8195:8213   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8188:8218   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":8234:8252   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8227:8281   */\n      mstore\n        /* \"#utility.yul\":8298:8316   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_128\n        /* \"#utility.yul\":7974:8322   */\n      jump\n        /* \"contracts/NFTMinter.sol\":693:1489  function mintNFT(string memory _name, string memory _metadata, uint256 _price) external {... */\n    tag_73:\n        /* \"contracts/NFTMinter.sol\":792:806  currentTokenId */\n      0x07\n        /* \"contracts/NFTMinter.sol\":792:808  currentTokenId++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/NFTMinter.sol\":792:806  currentTokenId */\n      0x00\n        /* \"contracts/NFTMinter.sol\":792:808  currentTokenId++ */\n      tag_168\n      dup4\n      tag_169\n      jump\t// in\n    tag_168:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTMinter.sol\":837:851  currentTokenId */\n      sload(0x07)\n        /* \"contracts/NFTMinter.sol\":864:890  _mint(msg.sender, tokenId) */\n      tag_170\n        /* \"contracts/NFTMinter.sol\":870:880  msg.sender */\n      caller\n        /* \"contracts/NFTMinter.sol\":837:851  currentTokenId */\n      dup3\n        /* \"contracts/NFTMinter.sol\":864:869  _mint */\n      tag_171\n        /* \"contracts/NFTMinter.sol\":864:890  _mint(msg.sender, tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/NFTMinter.sol\":919:1057  NFT({... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      dup6\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      dup2\n      dup4\n      add\n      dup6\n      swap1\n      mstore\n        /* \"contracts/NFTMinter.sol\":1035:1045  msg.sender */\n      caller\n        /* \"contracts/NFTMinter.sol\":919:1057  NFT({... */\n      0x60\n      dup4\n      add\n      mstore\n      0x00\n        /* \"contracts/NFTMinter.sol\":903:916  nfts[tokenId] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/NFTMinter.sol\":903:907  nfts */\n      0x08\n        /* \"contracts/NFTMinter.sol\":903:916  nfts[tokenId] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/NFTMinter.sol\":903:1057  nfts[tokenId] = NFT({... */\n      dup2\n      mload\n        /* \"contracts/NFTMinter.sol\":903:916  nfts[tokenId] */\n      dup2\n      swap1\n        /* \"contracts/NFTMinter.sol\":903:1057  nfts[tokenId] = NFT({... */\n      tag_172\n      swap1\n        /* \"contracts/NFTMinter.sol\":903:916  nfts[tokenId] */\n      dup3\n        /* \"contracts/NFTMinter.sol\":903:1057  nfts[tokenId] = NFT({... */\n      tag_173\n      jump\t// in\n    tag_172:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      swap1\n      tag_174\n      swap1\n      dup3\n      tag_173\n      jump\t// in\n    tag_174:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      swap1\n      swap2\n      add\n      mload\n      0x03\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x00\n        /* \"contracts/NFTMinter.sol\":1107:1110  100 */\n      0x64\n        /* \"contracts/NFTMinter.sol\":1092:1103  _price * 10 */\n      tag_175\n        /* \"contracts/NFTMinter.sol\":1092:1098  _price */\n      dup5\n        /* \"contracts/NFTMinter.sol\":1101:1103  10 */\n      0x0a\n        /* \"contracts/NFTMinter.sol\":1092:1103  _price * 10 */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"contracts/NFTMinter.sol\":1091:1110  (_price * 10) / 100 */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/NFTMinter.sol\":1070:1110  uint256 royaltyFee = (_price * 10) / 100 */\n      swap1\n      pop\n        /* \"contracts/NFTMinter.sol\":1140:1159  uint256 treasuryFee */\n      0x00\n        /* \"contracts/NFTMinter.sol\":1181:1183  10 */\n      0x0a\n        /* \"contracts/NFTMinter.sol\":1163:1177  royaltyFee * 6 */\n      tag_179\n        /* \"contracts/NFTMinter.sol\":1070:1110  uint256 royaltyFee = (_price * 10) / 100 */\n      dup4\n        /* \"contracts/NFTMinter.sol\":1176:1177  6 */\n      0x06\n        /* \"contracts/NFTMinter.sol\":1163:1177  royaltyFee * 6 */\n      tag_176\n      jump\t// in\n    tag_179:\n        /* \"contracts/NFTMinter.sol\":1162:1183  (royaltyFee * 6) / 10 */\n      tag_180\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_180:\n        /* \"contracts/NFTMinter.sol\":1140:1183  uint256 treasuryFee = (royaltyFee * 6) / 10 */\n      swap1\n      pop\n        /* \"contracts/NFTMinter.sol\":1235:1255  uint256 liquidityFee */\n      0x00\n        /* \"contracts/NFTMinter.sol\":1277:1279  10 */\n      0x0a\n        /* \"contracts/NFTMinter.sol\":1259:1273  royaltyFee * 4 */\n      tag_181\n        /* \"contracts/NFTMinter.sol\":1259:1269  royaltyFee */\n      dup5\n        /* \"contracts/NFTMinter.sol\":1272:1273  4 */\n      0x04\n        /* \"contracts/NFTMinter.sol\":1259:1273  royaltyFee * 4 */\n      tag_176\n      jump\t// in\n    tag_181:\n        /* \"contracts/NFTMinter.sol\":1258:1279  (royaltyFee * 4) / 10 */\n      tag_182\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_182:\n        /* \"contracts/NFTMinter.sol\":1386:1400  treasuryWallet */\n      sload(0x0a)\n        /* \"contracts/NFTMinter.sol\":1378:1423  payable(treasuryWallet).transfer(treasuryFee) */\n      mload(0x40)\n        /* \"contracts/NFTMinter.sol\":1235:1279  uint256 liquidityFee = (royaltyFee * 4) / 10 */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTMinter.sol\":1386:1400  treasuryWallet */\n      and\n      swap1\n        /* \"contracts/NFTMinter.sol\":1378:1423  payable(treasuryWallet).transfer(treasuryFee) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/NFTMinter.sol\":1411:1422  treasuryFee */\n      dup5\n      swap1\n        /* \"contracts/NFTMinter.sol\":1386:1400  treasuryWallet */\n      0x00\n        /* \"contracts/NFTMinter.sol\":1378:1423  payable(treasuryWallet).transfer(treasuryFee) */\n      dup2\n        /* \"contracts/NFTMinter.sol\":1386:1400  treasuryWallet */\n      dup2\n        /* \"contracts/NFTMinter.sol\":1378:1423  payable(treasuryWallet).transfer(treasuryFee) */\n      dup2\n        /* \"contracts/NFTMinter.sol\":1411:1422  treasuryFee */\n      dup6\n        /* \"contracts/NFTMinter.sol\":1386:1400  treasuryWallet */\n      dup9\n        /* \"contracts/NFTMinter.sol\":1378:1423  payable(treasuryWallet).transfer(treasuryFee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n        /* \"contracts/NFTMinter.sol\":1442:1457  liquidityWallet */\n      sload(0x09)\n        /* \"contracts/NFTMinter.sol\":1434:1481  payable(liquidityWallet).transfer(liquidityFee) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTMinter.sol\":1442:1457  liquidityWallet */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/NFTMinter.sol\":1434:1481  payable(liquidityWallet).transfer(liquidityFee) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/NFTMinter.sol\":1468:1480  liquidityFee */\n      dup4\n      swap1\n        /* \"contracts/NFTMinter.sol\":1442:1457  liquidityWallet */\n      0x00\n        /* \"contracts/NFTMinter.sol\":1434:1481  payable(liquidityWallet).transfer(liquidityFee) */\n      dup2\n        /* \"contracts/NFTMinter.sol\":1442:1457  liquidityWallet */\n      dup2\n        /* \"contracts/NFTMinter.sol\":1434:1481  payable(liquidityWallet).transfer(liquidityFee) */\n      dup2\n        /* \"contracts/NFTMinter.sol\":1468:1480  liquidityFee */\n      dup6\n        /* \"contracts/NFTMinter.sol\":1442:1457  liquidityWallet */\n      dup9\n        /* \"contracts/NFTMinter.sol\":1434:1481  payable(liquidityWallet).transfer(liquidityFee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n        /* \"contracts/NFTMinter.sol\":781:1489  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMinter.sol\":693:1489  function mintNFT(string memory _name, string memory _metadata, uint256 _price) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11532:11534   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11514:11535   */\n      mstore\n        /* \"#utility.yul\":11571:11573   */\n      0x29\n        /* \"#utility.yul\":11551:11569   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11544:11574   */\n      mstore\n        /* \"#utility.yul\":11610:11644   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":11590:11608   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11583:11645   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":11661:11679   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11654:11693   */\n      mstore\n        /* \"#utility.yul\":11710:11729   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_128\n        /* \"#utility.yul\":11330:11735   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_188:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_209\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5352:5359  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5337  _isApprovedOrOwner */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5319:5360  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5311:5410  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_146\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5434:5438  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5440:5442  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5444:5451  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5453:5457  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5433  _safeTransfer */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5420:5458  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5189:5465  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_219\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_220)\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_223\n      swap3\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12443:12445   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12425:12446   */\n      mstore\n        /* \"#utility.yul\":12482:12484   */\n      0x26\n        /* \"#utility.yul\":12462:12480   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12455:12485   */\n      mstore\n        /* \"#utility.yul\":12521:12555   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12501:12519   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12494:12556   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":12572:12590   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12565:12601   */\n      mstore\n        /* \"#utility.yul\":12618:12637   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_128\n        /* \"#utility.yul\":12241:12643   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13240:13373  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7185:7189  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8176:8178   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8158:8179   */\n      mstore\n        /* \"#utility.yul\":8215:8217   */\n      0x18\n        /* \"#utility.yul\":8195:8213   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8188:8218   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":8234:8252   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8227:8281   */\n      mstore\n        /* \"#utility.yul\":8298:8316   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13313:13366  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_128\n        /* \"#utility.yul\":7974:8322   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12661  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12675  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12670  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12713  ERC721.ownerOf */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12699:12722  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12690:12736  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12743  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7497:7501  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7526  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7544:7551  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7543  ERC721.ownerOf */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7529:7552  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7513:7552  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7581:7586  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7577  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7586  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7622  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_245\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7622  isApprovedForAll(owner, spender) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7607:7612  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7614:7621  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7606  isApprovedForAll */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7590:7622  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7657  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_246\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7650:7657  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7638:7645  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7637  getApproved */\n      tag_44\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7646  getApproved(tokenId) */\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7657  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7570:7657  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7562:7658  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7665  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11257:12460  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11381:11385  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11369:11376  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11368  ERC721.ownerOf */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11377  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11354:11385  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11346:11427  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_252\n      jump\t// in\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11445:11461  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13256:13258   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13238:13259   */\n      mstore\n        /* \"#utility.yul\":13295:13297   */\n      0x24\n        /* \"#utility.yul\":13275:13293   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13268:13298   */\n      mstore\n        /* \"#utility.yul\":13334:13368   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":13314:13332   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13307:13369   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":13385:13403   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13378:13412   */\n      mstore\n        /* \"#utility.yul\":13429:13448   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_128\n        /* \"#utility.yul\":13054:13454   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11437:11502  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11682:11686  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11670:11677  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11669  ERC721.ownerOf */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11678  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11655:11686  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11647:11728  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_252\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11812  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11797:11821  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11790:11821  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12274  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12280  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12265:12285  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12312  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12317  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11790:11821  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12299:12317  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12344  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12353  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12337:12358  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11813:11820  tokenId */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12374:12401  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8925:9845  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9004:9020  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8996:9057  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13661:13663   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8996:9057  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13643:13664   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13680:13698   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13673:13703   */\n      mstore\n        /* \"#utility.yul\":13739:13773   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":13719:13737   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13712:13774   */\n      mstore\n        /* \"#utility.yul\":13791:13809   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8996:9057  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_128\n        /* \"#utility.yul\":13459:13815   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8996:9057  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7185:7189  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7239  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9067:9125  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14022:14024   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9067:9125  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14004:14025   */\n      mstore\n        /* \"#utility.yul\":14061:14063   */\n      0x1c\n        /* \"#utility.yul\":14041:14059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14034:14064   */\n      mstore\n        /* \"#utility.yul\":14100:14130   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":14080:14098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14073:14131   */\n      mstore\n        /* \"#utility.yul\":14148:14166   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9067:9125  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_128\n        /* \"#utility.yul\":13820:14172   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9067:9125  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7185:7189  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6801  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6794:6810  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7239  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9271:9329  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14022:14024   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9271:9329  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14004:14025   */\n      mstore\n        /* \"#utility.yul\":14061:14063   */\n      0x1c\n        /* \"#utility.yul\":14041:14059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14034:14064   */\n      mstore\n        /* \"#utility.yul\":14100:14130   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":14080:14098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14073:14131   */\n      mstore\n        /* \"#utility.yul\":14148:14166   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9271:9329  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_128\n        /* \"#utility.yul\":13820:14172   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9271:9329  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9684  _balances[to] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9680  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9684  _balances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9689  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9688:9689  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9689  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9710:9726  _owners[tokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9710:9717  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9710:9726  _owners[tokenId] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9710:9731  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup5\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9780  Transfer(address(0), to, tokenId) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9718:9725  tokenId */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9684  _balances[to] */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9780  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9671:9684  _balances[to] */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9747:9780  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14379:14381   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14361:14382   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14398:14416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14391:14421   */\n      mstore\n        /* \"#utility.yul\":14457:14491   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14437:14455   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14430:14492   */\n      mstore\n        /* \"#utility.yul\":14509:14527   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_128\n        /* \"#utility.yul\":14177:14533   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x06\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12999:13007  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:12995  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12990:13007  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14740:14742   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14722:14743   */\n      mstore\n        /* \"#utility.yul\":14779:14781   */\n      0x19\n        /* \"#utility.yul\":14759:14777   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14752:14782   */\n      mstore\n        /* \"#utility.yul\":14818:14845   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":14798:14816   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14791:14846   */\n      mstore\n        /* \"#utility.yul\":14863:14881   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_128\n        /* \"#utility.yul\":14538:14887   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12982:13037  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_285:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13065  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13072  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13082  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13047:13093  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":722:763   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":695:713   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13108:13149  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:13156  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6326:6593  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6448:6452  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6454:6456  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6458:6465  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6447  _transfer */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6438:6466  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6507:6511  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6515  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6517:6524  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6526:6530  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6506  _checkOnERC721Received */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6484:6531  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6476:6586  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_295\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_298\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_299\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      tag_301\n      tag_302\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_303\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_303:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_304:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_304\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14074:14078  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14094:14107  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14165  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_319\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14180:14184  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14186:14193  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14195:14199  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14129:14200  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_320\n      jump\t// in\n    tag_319:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_321\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_322\n      swap2\n      dup2\n      add\n      swap1\n      tag_323\n      jump\t// in\n    tag_322:\n      0x01\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_324\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_329\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_328)\n    tag_329:\n      0x60\n      swap2\n      pop\n    tag_328:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14373  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14380  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14384:14385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14367:14385  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14409:14469  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_295\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14363:14684  if (reason.length == 0) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14636:14642  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14630:14643  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14621:14627  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14617:14619  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14613:14628  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14606:14644  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14125:14698  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_324:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14250:14301  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14243:14301  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_246)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14090:14750  if (to.isContract()) {... */\n    tag_317:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14735:14739  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13925:14756  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_336\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:327   */\n    tag_356:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":270:302   */\n      dup2\n      and\n        /* \"#utility.yul\":260:303   */\n      dup2\n      eq\n        /* \"#utility.yul\":250:321   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":332:577   */\n    tag_33:\n        /* \"#utility.yul\":390:396   */\n      0x00\n        /* \"#utility.yul\":443:445   */\n      0x20\n        /* \"#utility.yul\":431:440   */\n      dup3\n        /* \"#utility.yul\":422:429   */\n      dup5\n        /* \"#utility.yul\":418:441   */\n      sub\n        /* \"#utility.yul\":414:446   */\n      slt\n        /* \"#utility.yul\":411:463   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":459:460   */\n      0x00\n        /* \"#utility.yul\":456:457   */\n      dup1\n        /* \"#utility.yul\":449:461   */\n      revert\n        /* \"#utility.yul\":411:463   */\n    tag_371:\n        /* \"#utility.yul\":498:507   */\n      dup2\n        /* \"#utility.yul\":485:508   */\n      calldataload\n        /* \"#utility.yul\":517:547   */\n      tag_220\n        /* \"#utility.yul\":541:546   */\n      dup2\n        /* \"#utility.yul\":517:547   */\n      tag_356\n      jump\t// in\n        /* \"#utility.yul\":774:1024   */\n    tag_357:\n        /* \"#utility.yul\":859:860   */\n      0x00\n        /* \"#utility.yul\":869:982   */\n    tag_375:\n        /* \"#utility.yul\":883:889   */\n      dup4\n        /* \"#utility.yul\":880:881   */\n      dup2\n        /* \"#utility.yul\":877:890   */\n      lt\n        /* \"#utility.yul\":869:982   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":959:970   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":953:971   */\n      mload\n        /* \"#utility.yul\":940:951   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":933:972   */\n      mstore\n        /* \"#utility.yul\":905:907   */\n      0x20\n        /* \"#utility.yul\":898:908   */\n      add\n        /* \"#utility.yul\":869:982   */\n      jump(tag_375)\n    tag_377:\n      pop\n      pop\n        /* \"#utility.yul\":1016:1017   */\n      0x00\n        /* \"#utility.yul\":998:1014   */\n      swap2\n      add\n        /* \"#utility.yul\":991:1018   */\n      mstore\n        /* \"#utility.yul\":774:1024   */\n      jump\t// out\n        /* \"#utility.yul\":1029:1300   */\n    tag_358:\n        /* \"#utility.yul\":1071:1074   */\n      0x00\n        /* \"#utility.yul\":1109:1114   */\n      dup2\n        /* \"#utility.yul\":1103:1115   */\n      mload\n        /* \"#utility.yul\":1136:1142   */\n      dup1\n        /* \"#utility.yul\":1131:1134   */\n      dup5\n        /* \"#utility.yul\":1124:1143   */\n      mstore\n        /* \"#utility.yul\":1152:1228   */\n      tag_379\n        /* \"#utility.yul\":1221:1227   */\n      dup2\n        /* \"#utility.yul\":1214:1218   */\n      0x20\n        /* \"#utility.yul\":1209:1212   */\n      dup7\n        /* \"#utility.yul\":1205:1219   */\n      add\n        /* \"#utility.yul\":1198:1202   */\n      0x20\n        /* \"#utility.yul\":1191:1196   */\n      dup7\n        /* \"#utility.yul\":1187:1203   */\n      add\n        /* \"#utility.yul\":1152:1228   */\n      tag_357\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1282:1284   */\n      0x1f\n        /* \"#utility.yul\":1261:1276   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1257:1286   */\n      and\n        /* \"#utility.yul\":1248:1287   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1289:1293   */\n      0x20\n        /* \"#utility.yul\":1244:1294   */\n      add\n      swap3\n        /* \"#utility.yul\":1029:1300   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1305:1525   */\n    tag_40:\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup2\n        /* \"#utility.yul\":1436:1457   */\n      mstore\n        /* \"#utility.yul\":1417:1421   */\n      0x00\n        /* \"#utility.yul\":1474:1519   */\n      tag_220\n        /* \"#utility.yul\":1515:1517   */\n      0x20\n        /* \"#utility.yul\":1504:1513   */\n      dup4\n        /* \"#utility.yul\":1500:1518   */\n      add\n        /* \"#utility.yul\":1492:1498   */\n      dup5\n        /* \"#utility.yul\":1474:1519   */\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":1530:1710   */\n    tag_43:\n        /* \"#utility.yul\":1589:1595   */\n      0x00\n        /* \"#utility.yul\":1642:1644   */\n      0x20\n        /* \"#utility.yul\":1630:1639   */\n      dup3\n        /* \"#utility.yul\":1621:1628   */\n      dup5\n        /* \"#utility.yul\":1617:1640   */\n      sub\n        /* \"#utility.yul\":1613:1645   */\n      slt\n        /* \"#utility.yul\":1610:1662   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":1658:1659   */\n      0x00\n        /* \"#utility.yul\":1655:1656   */\n      dup1\n        /* \"#utility.yul\":1648:1660   */\n      revert\n        /* \"#utility.yul\":1610:1662   */\n    tag_383:\n      pop\n        /* \"#utility.yul\":1681:1704   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1530:1710   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1923:2096   */\n    tag_359:\n        /* \"#utility.yul\":1991:2011   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2040:2071   */\n      dup2\n      and\n        /* \"#utility.yul\":2030:2072   */\n      dup2\n      eq\n        /* \"#utility.yul\":2020:2090   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2083:2084   */\n      dup1\n        /* \"#utility.yul\":2076:2088   */\n      revert\n        /* \"#utility.yul\":2020:2090   */\n    tag_386:\n        /* \"#utility.yul\":1923:2096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2101:2355   */\n    tag_49:\n        /* \"#utility.yul\":2169:2175   */\n      0x00\n        /* \"#utility.yul\":2177:2183   */\n      dup1\n        /* \"#utility.yul\":2230:2232   */\n      0x40\n        /* \"#utility.yul\":2218:2227   */\n      dup4\n        /* \"#utility.yul\":2209:2216   */\n      dup6\n        /* \"#utility.yul\":2205:2228   */\n      sub\n        /* \"#utility.yul\":2201:2233   */\n      slt\n        /* \"#utility.yul\":2198:2250   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":2246:2247   */\n      0x00\n        /* \"#utility.yul\":2243:2244   */\n      dup1\n        /* \"#utility.yul\":2236:2248   */\n      revert\n        /* \"#utility.yul\":2198:2250   */\n    tag_388:\n        /* \"#utility.yul\":2269:2298   */\n      tag_389\n        /* \"#utility.yul\":2288:2297   */\n      dup4\n        /* \"#utility.yul\":2269:2298   */\n      tag_359\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2259:2298   */\n      swap5\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"#utility.yul\":2330:2348   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2317:2349   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2101:2355   */\n      jump\t// out\n        /* \"#utility.yul\":2360:2688   */\n    tag_53:\n        /* \"#utility.yul\":2437:2443   */\n      0x00\n        /* \"#utility.yul\":2445:2451   */\n      dup1\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x60\n        /* \"#utility.yul\":2494:2503   */\n      dup5\n        /* \"#utility.yul\":2485:2492   */\n      dup7\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2526   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2519:2520   */\n      dup1\n        /* \"#utility.yul\":2512:2524   */\n      revert\n        /* \"#utility.yul\":2474:2526   */\n    tag_391:\n        /* \"#utility.yul\":2545:2574   */\n      tag_392\n        /* \"#utility.yul\":2564:2573   */\n      dup5\n        /* \"#utility.yul\":2545:2574   */\n      tag_359\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2535:2574   */\n      swap3\n      pop\n        /* \"#utility.yul\":2593:2631   */\n      tag_393\n        /* \"#utility.yul\":2627:2629   */\n      0x20\n        /* \"#utility.yul\":2616:2625   */\n      dup6\n        /* \"#utility.yul\":2612:2630   */\n      add\n        /* \"#utility.yul\":2593:2631   */\n      tag_359\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2583:2631   */\n      swap2\n      pop\n        /* \"#utility.yul\":2678:2680   */\n      0x40\n        /* \"#utility.yul\":2667:2676   */\n      dup5\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2650:2682   */\n      calldataload\n        /* \"#utility.yul\":2640:2682   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2688   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2693:3246   */\n    tag_59:\n        /* \"#utility.yul\":2946:2949   */\n      0x80\n        /* \"#utility.yul\":2935:2944   */\n      dup2\n        /* \"#utility.yul\":2928:2950   */\n      mstore\n        /* \"#utility.yul\":2909:2913   */\n      0x00\n        /* \"#utility.yul\":2973:3019   */\n      tag_395\n        /* \"#utility.yul\":3014:3017   */\n      0x80\n        /* \"#utility.yul\":3003:3012   */\n      dup4\n        /* \"#utility.yul\":2999:3018   */\n      add\n        /* \"#utility.yul\":2991:2997   */\n      dup8\n        /* \"#utility.yul\":2973:3019   */\n      tag_358\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3067:3076   */\n      dup3\n        /* \"#utility.yul\":3059:3065   */\n      dup2\n        /* \"#utility.yul\":3055:3077   */\n      sub\n        /* \"#utility.yul\":3050:3052   */\n      0x20\n        /* \"#utility.yul\":3039:3048   */\n      dup5\n        /* \"#utility.yul\":3035:3053   */\n      add\n        /* \"#utility.yul\":3028:3078   */\n      mstore\n        /* \"#utility.yul\":3095:3128   */\n      tag_396\n        /* \"#utility.yul\":3121:3127   */\n      dup2\n        /* \"#utility.yul\":3113:3119   */\n      dup8\n        /* \"#utility.yul\":3095:3128   */\n      tag_358\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3159:3161   */\n      0x40\n        /* \"#utility.yul\":3144:3162   */\n      dup5\n      add\n        /* \"#utility.yul\":3137:3171   */\n      swap6\n      swap1\n      swap6\n      mstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3207:3239   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3202:3204   */\n      0x60\n        /* \"#utility.yul\":3187:3205   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3180:3240   */\n      mstore\n        /* \"#utility.yul\":3087:3128   */\n      swap3\n        /* \"#utility.yul\":2693:3246   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3251:3378   */\n    tag_302:\n        /* \"#utility.yul\":3312:3322   */\n      0x4e487b71\n        /* \"#utility.yul\":3307:3310   */\n      0xe0\n        /* \"#utility.yul\":3303:3323   */\n      shl\n        /* \"#utility.yul\":3300:3301   */\n      0x00\n        /* \"#utility.yul\":3293:3324   */\n      mstore\n        /* \"#utility.yul\":3343:3347   */\n      0x41\n        /* \"#utility.yul\":3340:3341   */\n      0x04\n        /* \"#utility.yul\":3333:3348   */\n      mstore\n        /* \"#utility.yul\":3367:3371   */\n      0x24\n        /* \"#utility.yul\":3364:3365   */\n      0x00\n        /* \"#utility.yul\":3357:3372   */\n      revert\n        /* \"#utility.yul\":3383:4015   */\n    tag_360:\n        /* \"#utility.yul\":3448:3453   */\n      0x00\n        /* \"#utility.yul\":3478:3496   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3519:3521   */\n      dup1\n        /* \"#utility.yul\":3511:3517   */\n      dup5\n        /* \"#utility.yul\":3508:3522   */\n      gt\n        /* \"#utility.yul\":3505:3545   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":3525:3543   */\n      tag_400\n      tag_302\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3600:3602   */\n      0x40\n        /* \"#utility.yul\":3594:3603   */\n      mload\n        /* \"#utility.yul\":3568:3570   */\n      0x1f\n        /* \"#utility.yul\":3654:3669   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3650:3674   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3676:3678   */\n      0x3f\n        /* \"#utility.yul\":3646:3679   */\n      add\n        /* \"#utility.yul\":3642:3684   */\n      and\n        /* \"#utility.yul\":3630:3685   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3700:3718   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3720:3742   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3697:3743   */\n      or\n        /* \"#utility.yul\":3694:3766   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":3746:3764   */\n      tag_402\n      tag_302\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3786:3796   */\n      dup2\n        /* \"#utility.yul\":3782:3784   */\n      0x40\n        /* \"#utility.yul\":3775:3797   */\n      mstore\n        /* \"#utility.yul\":3815:3821   */\n      dup1\n        /* \"#utility.yul\":3806:3821   */\n      swap4\n      pop\n        /* \"#utility.yul\":3845:3851   */\n      dup6\n        /* \"#utility.yul\":3837:3843   */\n      dup2\n        /* \"#utility.yul\":3830:3852   */\n      mstore\n        /* \"#utility.yul\":3885:3888   */\n      dup7\n        /* \"#utility.yul\":3876:3882   */\n      dup7\n        /* \"#utility.yul\":3871:3874   */\n      dup7\n        /* \"#utility.yul\":3867:3883   */\n      add\n        /* \"#utility.yul\":3864:3889   */\n      gt\n        /* \"#utility.yul\":3861:3906   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":3902:3903   */\n      0x00\n        /* \"#utility.yul\":3899:3900   */\n      dup1\n        /* \"#utility.yul\":3892:3904   */\n      revert\n        /* \"#utility.yul\":3861:3906   */\n    tag_403:\n        /* \"#utility.yul\":3952:3958   */\n      dup6\n        /* \"#utility.yul\":3947:3950   */\n      dup6\n        /* \"#utility.yul\":3940:3944   */\n      0x20\n        /* \"#utility.yul\":3932:3938   */\n      dup4\n        /* \"#utility.yul\":3928:3945   */\n      add\n        /* \"#utility.yul\":3915:3959   */\n      calldatacopy\n        /* \"#utility.yul\":4007:4008   */\n      0x00\n        /* \"#utility.yul\":4000:4004   */\n      0x20\n        /* \"#utility.yul\":3991:3997   */\n      dup8\n        /* \"#utility.yul\":3983:3989   */\n      dup4\n        /* \"#utility.yul\":3979:3998   */\n      add\n        /* \"#utility.yul\":3975:4005   */\n      add\n        /* \"#utility.yul\":3968:4009   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3383:4015   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4020:4242   */\n    tag_361:\n        /* \"#utility.yul\":4063:4068   */\n      0x00\n        /* \"#utility.yul\":4116:4119   */\n      dup3\n        /* \"#utility.yul\":4109:4113   */\n      0x1f\n        /* \"#utility.yul\":4101:4107   */\n      dup4\n        /* \"#utility.yul\":4097:4114   */\n      add\n        /* \"#utility.yul\":4093:4120   */\n      slt\n        /* \"#utility.yul\":4083:4138   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":4134:4135   */\n      0x00\n        /* \"#utility.yul\":4131:4132   */\n      dup1\n        /* \"#utility.yul\":4124:4136   */\n      revert\n        /* \"#utility.yul\":4083:4138   */\n    tag_405:\n        /* \"#utility.yul\":4156:4236   */\n      tag_220\n        /* \"#utility.yul\":4232:4235   */\n      dup4\n        /* \"#utility.yul\":4223:4229   */\n      dup4\n        /* \"#utility.yul\":4210:4230   */\n      calldataload\n        /* \"#utility.yul\":4203:4207   */\n      0x20\n        /* \"#utility.yul\":4195:4201   */\n      dup6\n        /* \"#utility.yul\":4191:4208   */\n      add\n        /* \"#utility.yul\":4156:4236   */\n      tag_360\n      jump\t// in\n        /* \"#utility.yul\":4247:4858   */\n    tag_72:\n        /* \"#utility.yul\":4344:4350   */\n      0x00\n        /* \"#utility.yul\":4352:4358   */\n      dup1\n        /* \"#utility.yul\":4360:4366   */\n      0x00\n        /* \"#utility.yul\":4413:4415   */\n      0x60\n        /* \"#utility.yul\":4401:4410   */\n      dup5\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4388:4411   */\n      sub\n        /* \"#utility.yul\":4384:4416   */\n      slt\n        /* \"#utility.yul\":4381:4433   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":4429:4430   */\n      0x00\n        /* \"#utility.yul\":4426:4427   */\n      dup1\n        /* \"#utility.yul\":4419:4431   */\n      revert\n        /* \"#utility.yul\":4381:4433   */\n    tag_408:\n        /* \"#utility.yul\":4469:4478   */\n      dup4\n        /* \"#utility.yul\":4456:4479   */\n      calldataload\n        /* \"#utility.yul\":4498:4516   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4539:4541   */\n      dup1\n        /* \"#utility.yul\":4531:4537   */\n      dup3\n        /* \"#utility.yul\":4528:4542   */\n      gt\n        /* \"#utility.yul\":4525:4559   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":4555:4556   */\n      0x00\n        /* \"#utility.yul\":4552:4553   */\n      dup1\n        /* \"#utility.yul\":4545:4557   */\n      revert\n        /* \"#utility.yul\":4525:4559   */\n    tag_409:\n        /* \"#utility.yul\":4578:4628   */\n      tag_410\n        /* \"#utility.yul\":4620:4627   */\n      dup8\n        /* \"#utility.yul\":4611:4617   */\n      dup4\n        /* \"#utility.yul\":4600:4609   */\n      dup9\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4578:4628   */\n      tag_361\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4568:4628   */\n      swap5\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4670:4679   */\n      dup7\n        /* \"#utility.yul\":4666:4684   */\n      add\n        /* \"#utility.yul\":4653:4685   */\n      calldataload\n        /* \"#utility.yul\":4637:4685   */\n      swap2\n      pop\n        /* \"#utility.yul\":4710:4712   */\n      dup1\n        /* \"#utility.yul\":4700:4708   */\n      dup3\n        /* \"#utility.yul\":4697:4713   */\n      gt\n        /* \"#utility.yul\":4694:4730   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":4726:4727   */\n      0x00\n        /* \"#utility.yul\":4723:4724   */\n      dup1\n        /* \"#utility.yul\":4716:4728   */\n      revert\n        /* \"#utility.yul\":4694:4730   */\n    tag_411:\n      pop\n        /* \"#utility.yul\":4749:4801   */\n      tag_412\n        /* \"#utility.yul\":4793:4800   */\n      dup7\n        /* \"#utility.yul\":4782:4790   */\n      dup3\n        /* \"#utility.yul\":4771:4780   */\n      dup8\n        /* \"#utility.yul\":4767:4791   */\n      add\n        /* \"#utility.yul\":4749:4801   */\n      tag_361\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4739:4801   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":4848:4850   */\n      0x40\n        /* \"#utility.yul\":4837:4846   */\n      dup5\n        /* \"#utility.yul\":4833:4851   */\n      add\n        /* \"#utility.yul\":4820:4852   */\n      calldataload\n        /* \"#utility.yul\":4810:4852   */\n      swap1\n      pop\n        /* \"#utility.yul\":4247:4858   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4863:5049   */\n    tag_76:\n        /* \"#utility.yul\":4922:4928   */\n      0x00\n        /* \"#utility.yul\":4975:4977   */\n      0x20\n        /* \"#utility.yul\":4963:4972   */\n      dup3\n        /* \"#utility.yul\":4954:4961   */\n      dup5\n        /* \"#utility.yul\":4950:4973   */\n      sub\n        /* \"#utility.yul\":4946:4978   */\n      slt\n        /* \"#utility.yul\":4943:4995   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":4991:4992   */\n      0x00\n        /* \"#utility.yul\":4988:4989   */\n      dup1\n        /* \"#utility.yul\":4981:4993   */\n      revert\n        /* \"#utility.yul\":4943:4995   */\n    tag_414:\n        /* \"#utility.yul\":5014:5043   */\n      tag_220\n        /* \"#utility.yul\":5033:5042   */\n      dup3\n        /* \"#utility.yul\":5014:5043   */\n      tag_359\n      jump\t// in\n        /* \"#utility.yul\":5054:5401   */\n    tag_89:\n        /* \"#utility.yul\":5119:5125   */\n      0x00\n        /* \"#utility.yul\":5127:5133   */\n      dup1\n        /* \"#utility.yul\":5180:5182   */\n      0x40\n        /* \"#utility.yul\":5168:5177   */\n      dup4\n        /* \"#utility.yul\":5159:5166   */\n      dup6\n        /* \"#utility.yul\":5155:5178   */\n      sub\n        /* \"#utility.yul\":5151:5183   */\n      slt\n        /* \"#utility.yul\":5148:5200   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":5196:5197   */\n      0x00\n        /* \"#utility.yul\":5193:5194   */\n      dup1\n        /* \"#utility.yul\":5186:5198   */\n      revert\n        /* \"#utility.yul\":5148:5200   */\n    tag_417:\n        /* \"#utility.yul\":5219:5248   */\n      tag_418\n        /* \"#utility.yul\":5238:5247   */\n      dup4\n        /* \"#utility.yul\":5219:5248   */\n      tag_359\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5209:5248   */\n      swap2\n      pop\n        /* \"#utility.yul\":5298:5300   */\n      0x20\n        /* \"#utility.yul\":5287:5296   */\n      dup4\n        /* \"#utility.yul\":5283:5301   */\n      add\n        /* \"#utility.yul\":5270:5302   */\n      calldataload\n        /* \"#utility.yul\":5345:5350   */\n      dup1\n        /* \"#utility.yul\":5338:5351   */\n      iszero\n        /* \"#utility.yul\":5331:5352   */\n      iszero\n        /* \"#utility.yul\":5324:5329   */\n      dup2\n        /* \"#utility.yul\":5321:5353   */\n      eq\n        /* \"#utility.yul\":5311:5371   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":5367:5368   */\n      0x00\n        /* \"#utility.yul\":5364:5365   */\n      dup1\n        /* \"#utility.yul\":5357:5369   */\n      revert\n        /* \"#utility.yul\":5311:5371   */\n    tag_419:\n        /* \"#utility.yul\":5390:5395   */\n      dup1\n        /* \"#utility.yul\":5380:5395   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5054:5401   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5406:6073   */\n    tag_93:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      dup1\n        /* \"#utility.yul\":5517:5523   */\n      0x00\n        /* \"#utility.yul\":5525:5531   */\n      dup1\n        /* \"#utility.yul\":5578:5581   */\n      0x80\n        /* \"#utility.yul\":5566:5575   */\n      dup6\n        /* \"#utility.yul\":5557:5564   */\n      dup8\n        /* \"#utility.yul\":5553:5576   */\n      sub\n        /* \"#utility.yul\":5549:5582   */\n      slt\n        /* \"#utility.yul\":5546:5599   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":5595:5596   */\n      0x00\n        /* \"#utility.yul\":5592:5593   */\n      dup1\n        /* \"#utility.yul\":5585:5597   */\n      revert\n        /* \"#utility.yul\":5546:5599   */\n    tag_421:\n        /* \"#utility.yul\":5618:5647   */\n      tag_422\n        /* \"#utility.yul\":5637:5646   */\n      dup6\n        /* \"#utility.yul\":5618:5647   */\n      tag_359\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":5608:5647   */\n      swap4\n      pop\n        /* \"#utility.yul\":5666:5704   */\n      tag_423\n        /* \"#utility.yul\":5700:5702   */\n      0x20\n        /* \"#utility.yul\":5689:5698   */\n      dup7\n        /* \"#utility.yul\":5685:5703   */\n      add\n        /* \"#utility.yul\":5666:5704   */\n      tag_359\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5656:5704   */\n      swap3\n      pop\n        /* \"#utility.yul\":5751:5753   */\n      0x40\n        /* \"#utility.yul\":5740:5749   */\n      dup6\n        /* \"#utility.yul\":5736:5754   */\n      add\n        /* \"#utility.yul\":5723:5755   */\n      calldataload\n        /* \"#utility.yul\":5713:5755   */\n      swap2\n      pop\n        /* \"#utility.yul\":5806:5808   */\n      0x60\n        /* \"#utility.yul\":5795:5804   */\n      dup6\n        /* \"#utility.yul\":5791:5809   */\n      add\n        /* \"#utility.yul\":5778:5810   */\n      calldataload\n        /* \"#utility.yul\":5833:5851   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5825:5831   */\n      dup2\n        /* \"#utility.yul\":5822:5852   */\n      gt\n        /* \"#utility.yul\":5819:5869   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":5865:5866   */\n      0x00\n        /* \"#utility.yul\":5862:5863   */\n      dup1\n        /* \"#utility.yul\":5855:5867   */\n      revert\n        /* \"#utility.yul\":5819:5869   */\n    tag_424:\n        /* \"#utility.yul\":5888:5910   */\n      dup6\n      add\n        /* \"#utility.yul\":5941:5945   */\n      0x1f\n        /* \"#utility.yul\":5933:5946   */\n      dup2\n      add\n        /* \"#utility.yul\":5929:5956   */\n      dup8\n      sgt\n        /* \"#utility.yul\":5919:5974   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":5970:5971   */\n      0x00\n        /* \"#utility.yul\":5967:5968   */\n      dup1\n        /* \"#utility.yul\":5960:5972   */\n      revert\n        /* \"#utility.yul\":5919:5974   */\n    tag_425:\n        /* \"#utility.yul\":5993:6067   */\n      tag_426\n        /* \"#utility.yul\":6059:6066   */\n      dup8\n        /* \"#utility.yul\":6054:6056   */\n      dup3\n        /* \"#utility.yul\":6041:6057   */\n      calldataload\n        /* \"#utility.yul\":6036:6038   */\n      0x20\n        /* \"#utility.yul\":6032:6034   */\n      dup5\n        /* \"#utility.yul\":6028:6039   */\n      add\n        /* \"#utility.yul\":5993:6067   */\n      tag_360\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5983:6067   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5406:6073   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6078:6338   */\n    tag_104:\n        /* \"#utility.yul\":6146:6152   */\n      0x00\n        /* \"#utility.yul\":6154:6160   */\n      dup1\n        /* \"#utility.yul\":6207:6209   */\n      0x40\n        /* \"#utility.yul\":6195:6204   */\n      dup4\n        /* \"#utility.yul\":6186:6193   */\n      dup6\n        /* \"#utility.yul\":6182:6205   */\n      sub\n        /* \"#utility.yul\":6178:6210   */\n      slt\n        /* \"#utility.yul\":6175:6227   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":6223:6224   */\n      0x00\n        /* \"#utility.yul\":6220:6221   */\n      dup1\n        /* \"#utility.yul\":6213:6225   */\n      revert\n        /* \"#utility.yul\":6175:6227   */\n    tag_428:\n        /* \"#utility.yul\":6246:6275   */\n      tag_429\n        /* \"#utility.yul\":6265:6274   */\n      dup4\n        /* \"#utility.yul\":6246:6275   */\n      tag_359\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6236:6275   */\n      swap2\n      pop\n        /* \"#utility.yul\":6294:6332   */\n      tag_430\n        /* \"#utility.yul\":6328:6330   */\n      0x20\n        /* \"#utility.yul\":6317:6326   */\n      dup5\n        /* \"#utility.yul\":6313:6331   */\n      add\n        /* \"#utility.yul\":6294:6332   */\n      tag_359\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6284:6332   */\n      swap1\n      pop\n        /* \"#utility.yul\":6078:6338   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6343:6723   */\n    tag_117:\n        /* \"#utility.yul\":6422:6423   */\n      0x01\n        /* \"#utility.yul\":6418:6430   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6465:6477   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6486:6547   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":6540:6544   */\n      0x7f\n        /* \"#utility.yul\":6532:6538   */\n      dup3\n        /* \"#utility.yul\":6528:6545   */\n      and\n        /* \"#utility.yul\":6518:6545   */\n      swap2\n      pop\n        /* \"#utility.yul\":6486:6547   */\n    tag_432:\n        /* \"#utility.yul\":6593:6595   */\n      0x20\n        /* \"#utility.yul\":6585:6591   */\n      dup3\n        /* \"#utility.yul\":6582:6596   */\n      lt\n        /* \"#utility.yul\":6562:6580   */\n      dup2\n        /* \"#utility.yul\":6559:6597   */\n      sub\n        /* \"#utility.yul\":6556:6717   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":6639:6649   */\n      0x4e487b71\n        /* \"#utility.yul\":6634:6637   */\n      0xe0\n        /* \"#utility.yul\":6630:6650   */\n      shl\n        /* \"#utility.yul\":6627:6628   */\n      0x00\n        /* \"#utility.yul\":6620:6651   */\n      mstore\n        /* \"#utility.yul\":6674:6678   */\n      0x22\n        /* \"#utility.yul\":6671:6672   */\n      0x04\n        /* \"#utility.yul\":6664:6679   */\n      mstore\n        /* \"#utility.yul\":6702:6706   */\n      0x24\n        /* \"#utility.yul\":6699:6700   */\n      0x00\n        /* \"#utility.yul\":6692:6707   */\n      revert\n        /* \"#utility.yul\":6556:6717   */\n    tag_433:\n      pop\n        /* \"#utility.yul\":6343:6723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7560:7969   */\n    tag_146:\n        /* \"#utility.yul\":7762:7764   */\n      0x20\n        /* \"#utility.yul\":7744:7765   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7801:7803   */\n      0x2d\n        /* \"#utility.yul\":7781:7799   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7774:7804   */\n      mstore\n        /* \"#utility.yul\":7840:7874   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":7835:7837   */\n      0x40\n        /* \"#utility.yul\":7820:7838   */\n      dup3\n      add\n        /* \"#utility.yul\":7813:7875   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":7906:7908   */\n      0x60\n        /* \"#utility.yul\":7891:7909   */\n      dup3\n      add\n        /* \"#utility.yul\":7884:7927   */\n      mstore\n        /* \"#utility.yul\":7959:7962   */\n      0x80\n        /* \"#utility.yul\":7944:7963   */\n      add\n      swap1\n        /* \"#utility.yul\":7560:7969   */\n      jump\t// out\n        /* \"#utility.yul\":8327:8454   */\n    tag_362:\n        /* \"#utility.yul\":8388:8398   */\n      0x4e487b71\n        /* \"#utility.yul\":8383:8386   */\n      0xe0\n        /* \"#utility.yul\":8379:8399   */\n      shl\n        /* \"#utility.yul\":8376:8377   */\n      0x00\n        /* \"#utility.yul\":8369:8400   */\n      mstore\n        /* \"#utility.yul\":8419:8423   */\n      0x11\n        /* \"#utility.yul\":8416:8417   */\n      0x04\n        /* \"#utility.yul\":8409:8424   */\n      mstore\n        /* \"#utility.yul\":8443:8447   */\n      0x24\n        /* \"#utility.yul\":8440:8441   */\n      0x00\n        /* \"#utility.yul\":8433:8448   */\n      revert\n        /* \"#utility.yul\":8459:8594   */\n    tag_169:\n        /* \"#utility.yul\":8498:8501   */\n      0x00\n        /* \"#utility.yul\":8519:8536   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":8516:8559   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":8539:8557   */\n      tag_441\n      tag_362\n      jump\t// in\n    tag_441:\n      pop\n        /* \"#utility.yul\":8586:8587   */\n      0x01\n        /* \"#utility.yul\":8575:8588   */\n      add\n      swap1\n        /* \"#utility.yul\":8459:8594   */\n      jump\t// out\n        /* \"#utility.yul\":8725:9270   */\n    tag_364:\n        /* \"#utility.yul\":8827:8829   */\n      0x1f\n        /* \"#utility.yul\":8822:8825   */\n      dup3\n        /* \"#utility.yul\":8819:8830   */\n      gt\n        /* \"#utility.yul\":8816:9264   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":8863:8864   */\n      0x00\n        /* \"#utility.yul\":8888:8893   */\n      dup2\n        /* \"#utility.yul\":8884:8886   */\n      dup2\n        /* \"#utility.yul\":8877:8894   */\n      mstore\n        /* \"#utility.yul\":8933:8937   */\n      0x20\n        /* \"#utility.yul\":8929:8931   */\n      dup2\n        /* \"#utility.yul\":8919:8938   */\n      keccak256\n        /* \"#utility.yul\":9003:9005   */\n      0x1f\n        /* \"#utility.yul\":8991:9001   */\n      dup6\n        /* \"#utility.yul\":8987:9006   */\n      add\n        /* \"#utility.yul\":8984:8985   */\n      0x05\n        /* \"#utility.yul\":8980:9007   */\n      shr\n        /* \"#utility.yul\":8974:8978   */\n      dup2\n        /* \"#utility.yul\":8970:9008   */\n      add\n        /* \"#utility.yul\":9039:9043   */\n      0x20\n        /* \"#utility.yul\":9027:9037   */\n      dup7\n        /* \"#utility.yul\":9024:9044   */\n      lt\n        /* \"#utility.yul\":9021:9068   */\n      iszero\n      tag_445\n      jumpi\n      pop\n        /* \"#utility.yul\":9062:9066   */\n      dup1\n        /* \"#utility.yul\":9021:9068   */\n    tag_445:\n        /* \"#utility.yul\":9117:9119   */\n      0x1f\n        /* \"#utility.yul\":9112:9115   */\n      dup6\n        /* \"#utility.yul\":9108:9120   */\n      add\n        /* \"#utility.yul\":9105:9106   */\n      0x05\n        /* \"#utility.yul\":9101:9121   */\n      shr\n        /* \"#utility.yul\":9095:9099   */\n      dup3\n        /* \"#utility.yul\":9091:9122   */\n      add\n        /* \"#utility.yul\":9081:9122   */\n      swap2\n      pop\n        /* \"#utility.yul\":9172:9254   */\n    tag_446:\n        /* \"#utility.yul\":9190:9192   */\n      dup2\n        /* \"#utility.yul\":9183:9188   */\n      dup2\n        /* \"#utility.yul\":9180:9193   */\n      lt\n        /* \"#utility.yul\":9172:9254   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":9235:9252   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":9216:9217   */\n      0x01\n        /* \"#utility.yul\":9205:9218   */\n      add\n        /* \"#utility.yul\":9172:9254   */\n      jump(tag_446)\n    tag_448:\n        /* \"#utility.yul\":9176:9179   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8725:9270   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9446:10798   */\n    tag_173:\n        /* \"#utility.yul\":9572:9575   */\n      dup2\n        /* \"#utility.yul\":9566:9576   */\n      mload\n        /* \"#utility.yul\":9599:9617   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9591:9597   */\n      dup2\n        /* \"#utility.yul\":9588:9618   */\n      gt\n        /* \"#utility.yul\":9585:9641   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":9621:9639   */\n      tag_452\n      tag_302\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":9650:9747   */\n      tag_453\n        /* \"#utility.yul\":9740:9746   */\n      dup2\n        /* \"#utility.yul\":9700:9738   */\n      tag_454\n        /* \"#utility.yul\":9732:9736   */\n      dup5\n        /* \"#utility.yul\":9726:9737   */\n      sload\n        /* \"#utility.yul\":9700:9738   */\n      tag_117\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9694:9698   */\n      dup5\n        /* \"#utility.yul\":9650:9747   */\n      tag_364\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9802:9806   */\n      0x20\n      dup1\n        /* \"#utility.yul\":9866:9868   */\n      0x1f\n        /* \"#utility.yul\":9855:9869   */\n      dup4\n      gt\n        /* \"#utility.yul\":9883:9884   */\n      0x01\n        /* \"#utility.yul\":9878:10541   */\n      dup2\n      eq\n      tag_456\n      jumpi\n        /* \"#utility.yul\":10585:10586   */\n      0x00\n        /* \"#utility.yul\":10602:10608   */\n      dup5\n        /* \"#utility.yul\":10599:10688   */\n      iszero\n      tag_457\n      jumpi\n      pop\n        /* \"#utility.yul\":10654:10673   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":10648:10674   */\n      mload\n        /* \"#utility.yul\":10599:10688   */\n    tag_457:\n      not(0x00)\n        /* \"#utility.yul\":9403:9404   */\n      0x03\n        /* \"#utility.yul\":9399:9410   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":9395:9419   */\n      shr\n        /* \"#utility.yul\":9391:9420   */\n      not\n        /* \"#utility.yul\":9381:9421   */\n      and\n        /* \"#utility.yul\":9427:9428   */\n      0x01\n        /* \"#utility.yul\":9423:9434   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":9378:9435   */\n      or\n        /* \"#utility.yul\":10701:10782   */\n      dup6\n      sstore\n        /* \"#utility.yul\":9848:10792   */\n      jump(tag_448)\n        /* \"#utility.yul\":9878:10541   */\n    tag_456:\n        /* \"#utility.yul\":8672:8673   */\n      0x00\n        /* \"#utility.yul\":8665:8679   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8709:8713   */\n      0x20\n        /* \"#utility.yul\":8696:8714   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":9914:9934   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":10032:10268   */\n    tag_460:\n        /* \"#utility.yul\":10046:10053   */\n      dup3\n        /* \"#utility.yul\":10043:10044   */\n      dup2\n        /* \"#utility.yul\":10040:10054   */\n      lt\n        /* \"#utility.yul\":10032:10268   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":10135:10154   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":10129:10155   */\n      mload\n        /* \"#utility.yul\":10114:10156   */\n      dup3\n      sstore\n        /* \"#utility.yul\":10227:10254   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":10195:10196   */\n      0x01\n        /* \"#utility.yul\":10183:10197   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":10062:10081   */\n      dup5\n      add\n        /* \"#utility.yul\":10032:10268   */\n      jump(tag_460)\n    tag_462:\n        /* \"#utility.yul\":10036:10039   */\n      pop\n        /* \"#utility.yul\":10296:10302   */\n      dup6\n        /* \"#utility.yul\":10287:10294   */\n      dup3\n        /* \"#utility.yul\":10284:10303   */\n      lt\n        /* \"#utility.yul\":10281:10482   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":10357:10376   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":10351:10377   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":10440:10441   */\n      0x03\n        /* \"#utility.yul\":10436:10450   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":10452:10455   */\n      0xf8\n        /* \"#utility.yul\":10432:10456   */\n      and\n        /* \"#utility.yul\":10428:10465   */\n      shr\n        /* \"#utility.yul\":10424:10466   */\n      not\n        /* \"#utility.yul\":10409:10467   */\n      and\n        /* \"#utility.yul\":10394:10468   */\n      dup2\n      sstore\n        /* \"#utility.yul\":10281:10482   */\n    tag_463:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10528:10529   */\n      0x01\n        /* \"#utility.yul\":10512:10526   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":10508:10530   */\n      add\n        /* \"#utility.yul\":10495:10531   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":9446:10798   */\n      jump\t// out\n        /* \"#utility.yul\":10803:10971   */\n    tag_176:\n        /* \"#utility.yul\":10876:10885   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10907:10916   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10924:10939   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10918:10940   */\n      dup5\n      eq\n        /* \"#utility.yul\":10904:10941   */\n      or\n        /* \"#utility.yul\":10894:10965   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":10945:10963   */\n      tag_113\n      tag_362\n      jump\t// in\n        /* \"#utility.yul\":11108:11325   */\n    tag_178:\n        /* \"#utility.yul\":11148:11149   */\n      0x00\n        /* \"#utility.yul\":11174:11175   */\n      dup3\n        /* \"#utility.yul\":11164:11296   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":11218:11228   */\n      0x4e487b71\n        /* \"#utility.yul\":11213:11216   */\n      0xe0\n        /* \"#utility.yul\":11209:11229   */\n      shl\n        /* \"#utility.yul\":11206:11207   */\n      0x00\n        /* \"#utility.yul\":11199:11230   */\n      mstore\n        /* \"#utility.yul\":11253:11257   */\n      0x12\n        /* \"#utility.yul\":11250:11251   */\n      0x04\n        /* \"#utility.yul\":11243:11258   */\n      mstore\n        /* \"#utility.yul\":11281:11285   */\n      0x24\n        /* \"#utility.yul\":11278:11279   */\n      0x00\n        /* \"#utility.yul\":11271:11286   */\n      revert\n        /* \"#utility.yul\":11164:11296   */\n    tag_469:\n      pop\n        /* \"#utility.yul\":11310:11319   */\n      div\n      swap1\n        /* \"#utility.yul\":11108:11325   */\n      jump\t// out\n        /* \"#utility.yul\":11740:12236   */\n    tag_224:\n        /* \"#utility.yul\":11919:11922   */\n      0x00\n        /* \"#utility.yul\":11957:11963   */\n      dup4\n        /* \"#utility.yul\":11951:11964   */\n      mload\n        /* \"#utility.yul\":11973:12039   */\n      tag_472\n        /* \"#utility.yul\":12032:12038   */\n      dup2\n        /* \"#utility.yul\":12027:12030   */\n      dup5\n        /* \"#utility.yul\":12020:12024   */\n      0x20\n        /* \"#utility.yul\":12012:12018   */\n      dup9\n        /* \"#utility.yul\":12008:12025   */\n      add\n        /* \"#utility.yul\":11973:12039   */\n      tag_357\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":12102:12115   */\n      dup4\n      mload\n        /* \"#utility.yul\":12061:12077   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":12124:12194   */\n      tag_473\n        /* \"#utility.yul\":12102:12115   */\n      dup2\n        /* \"#utility.yul\":12061:12077   */\n      dup4\n        /* \"#utility.yul\":12171:12175   */\n      0x20\n        /* \"#utility.yul\":12159:12176   */\n      dup9\n      add\n        /* \"#utility.yul\":12124:12194   */\n      tag_357\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":12210:12230   */\n      add\n      swap5\n        /* \"#utility.yul\":11740:12236   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12648:13049   */\n    tag_252:\n        /* \"#utility.yul\":12850:12852   */\n      0x20\n        /* \"#utility.yul\":12832:12853   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12889:12891   */\n      0x25\n        /* \"#utility.yul\":12869:12887   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12862:12892   */\n      mstore\n        /* \"#utility.yul\":12928:12962   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":12923:12925   */\n      0x40\n        /* \"#utility.yul\":12908:12926   */\n      dup3\n      add\n        /* \"#utility.yul\":12901:12963   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":12994:12996   */\n      0x60\n        /* \"#utility.yul\":12979:12997   */\n      dup3\n      add\n        /* \"#utility.yul\":12972:13007   */\n      mstore\n        /* \"#utility.yul\":13039:13042   */\n      0x80\n        /* \"#utility.yul\":13024:13043   */\n      add\n      swap1\n        /* \"#utility.yul\":12648:13049   */\n      jump\t// out\n        /* \"#utility.yul\":14892:15306   */\n    tag_295:\n        /* \"#utility.yul\":15094:15096   */\n      0x20\n        /* \"#utility.yul\":15076:15097   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15133:15135   */\n      0x32\n        /* \"#utility.yul\":15113:15131   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15106:15136   */\n      mstore\n        /* \"#utility.yul\":15172:15206   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":15167:15169   */\n      0x40\n        /* \"#utility.yul\":15152:15170   */\n      dup3\n      add\n        /* \"#utility.yul\":15145:15207   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15238:15240   */\n      0x60\n        /* \"#utility.yul\":15223:15241   */\n      dup3\n      add\n        /* \"#utility.yul\":15216:15264   */\n      mstore\n        /* \"#utility.yul\":15296:15299   */\n      0x80\n        /* \"#utility.yul\":15281:15300   */\n      add\n      swap1\n        /* \"#utility.yul\":14892:15306   */\n      jump\t// out\n        /* \"#utility.yul\":15311:15800   */\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15580:15595   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":15562:15596   */\n      dup3\n      mstore\n        /* \"#utility.yul\":15632:15647   */\n      dup5\n      and\n        /* \"#utility.yul\":15627:15629   */\n      0x20\n        /* \"#utility.yul\":15612:15630   */\n      dup3\n      add\n        /* \"#utility.yul\":15605:15648   */\n      mstore\n        /* \"#utility.yul\":15679:15681   */\n      0x40\n        /* \"#utility.yul\":15664:15682   */\n      dup2\n      add\n        /* \"#utility.yul\":15657:15691   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":15727:15730   */\n      0x80\n        /* \"#utility.yul\":15722:15724   */\n      0x60\n        /* \"#utility.yul\":15707:15725   */\n      dup3\n      add\n        /* \"#utility.yul\":15700:15731   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15505:15509   */\n      0x00\n      swap1\n        /* \"#utility.yul\":15748:15794   */\n      tag_483\n      swap1\n        /* \"#utility.yul\":15774:15793   */\n      dup4\n      add\n        /* \"#utility.yul\":15766:15772   */\n      dup5\n        /* \"#utility.yul\":15748:15794   */\n      tag_358\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15740:15794   */\n      swap7\n        /* \"#utility.yul\":15311:15800   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15805:16054   */\n    tag_323:\n        /* \"#utility.yul\":15874:15880   */\n      0x00\n        /* \"#utility.yul\":15927:15929   */\n      0x20\n        /* \"#utility.yul\":15915:15924   */\n      dup3\n        /* \"#utility.yul\":15906:15913   */\n      dup5\n        /* \"#utility.yul\":15902:15925   */\n      sub\n        /* \"#utility.yul\":15898:15930   */\n      slt\n        /* \"#utility.yul\":15895:15947   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":15943:15944   */\n      0x00\n        /* \"#utility.yul\":15940:15941   */\n      dup1\n        /* \"#utility.yul\":15933:15945   */\n      revert\n        /* \"#utility.yul\":15895:15947   */\n    tag_485:\n        /* \"#utility.yul\":15975:15984   */\n      dup2\n        /* \"#utility.yul\":15969:15985   */\n      mload\n        /* \"#utility.yul\":15994:16024   */\n      tag_220\n        /* \"#utility.yul\":16018:16023   */\n      dup2\n        /* \"#utility.yul\":15994:16024   */\n      tag_356\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220e7a2a48ac3e8e9e8f856ab9c4de71d20a599698eebac52ce07f40469acdeaabf64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_175": {
									"entryPoint": null,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2836": {
									"entryPoint": null,
									"id": 2836,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1542": {
									"entryPoint": 222,
									"id": 1542,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 226,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3212:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:13"
															},
															"nodeType": "YulIf",
															"src": "115:70:13"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:13"
															},
															"nodeType": "YulIf",
															"src": "304:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:13",
														"type": ""
													}
												],
												"src": "196:293:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "526:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "550:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "555:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "546:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "546:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "536:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "536:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "583:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "586:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "576:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "576:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "607:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "600:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "600:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "600:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "494:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "681:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "691:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "705:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "708:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "701:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "722:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "752:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "758:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "748:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "748:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "726:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "799:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "801:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "815:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "823:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "811:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "811:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "801:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "779:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:26:13"
															},
															"nodeType": "YulIf",
															"src": "769:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "889:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "910:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "917:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "922:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "913:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "913:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "903:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "903:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "954:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "957:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "947:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "947:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "982:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "985:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "975:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "845:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "868:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "876:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "865:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "865:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "842:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "842:38:13"
															},
															"nodeType": "YulIf",
															"src": "839:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "661:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "670:6:13",
														"type": ""
													}
												],
												"src": "626:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1067:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1084:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1087:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1077:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1077:14:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1077:14:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1100:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1118:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1121:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1108:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1108:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1100:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1050:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1058:4:13",
														"type": ""
													}
												],
												"src": "1011:121:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:464:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1251:425:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1265:11:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1275:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1269:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:2:13"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1300:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1289:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1289:17:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1289:17:13"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1319:31:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1341:2:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1345:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1331:9:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1331:19:13"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1323:4:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1363:57:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1386:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1396:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "1403:10:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1415:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1399:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1399:19:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1392:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1392:27:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1382:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:38:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1367:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1457:23:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1459:19:13",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "1474:4:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "1459:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "1439:10:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1451:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1436:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1436:20:13"
																		},
																		"nodeType": "YulIf",
																		"src": "1433:47:13"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1493:41:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1507:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1517:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1524:3:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1529:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1520:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1520:12:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1513:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1513:20:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1503:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1503:31:13"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1497:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1547:24:13",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1560:11:13"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1551:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1645:21:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1654:5:13"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1661:2:13"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1647:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1647:17:13"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1647:17:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1595:5:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1602:2:13"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1592:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1592:13:13"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1606:26:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1608:22:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1621:5:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1628:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1617:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1617:13:13"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1608:5:13"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1588:3:13",
																			"statements": []
																		},
																		"src": "1584:82:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1234:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1239:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1231:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:11:13"
															},
															"nodeType": "YulIf",
															"src": "1228:448:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1190:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1197:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1202:10:13",
														"type": ""
													}
												],
												"src": "1137:545:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1772:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1782:65:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1797:4:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1815:1:13",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1818:3:13"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1811:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1811:11:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1828:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1824:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1824:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1807:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1807:24:13"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1803:29:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1793:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1793:40:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:13",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1842:3:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1835:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1790:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:57:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1782:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1749:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1755:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1763:4:13",
														"type": ""
													}
												],
												"src": "1687:166:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1954:1256:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1964:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1984:3:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1978:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1978:10:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1968:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2031:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2033:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2033:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2033:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2003:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2019:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2023:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2015:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2015:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2027:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2011:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2011:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2000:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:30:13"
															},
															"nodeType": "YulIf",
															"src": "1997:56:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2106:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2144:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2138:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2138:11:13"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "2112:25:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:38:13"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2152:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2062:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:97:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2062:97:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2168:18:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2185:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "2172:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2195:23:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2214:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2199:11:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2227:24:13",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2240:11:13"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2227:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2297:656:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2311:35:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2330:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2342:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2338:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2338:7:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2326:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2326:20:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2315:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2359:49:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2403:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2373:29:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2373:35:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2363:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2421:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2430:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2425:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2508:172:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2533:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2551:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2556:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2547:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2547:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2541:5:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2541:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2526:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2526:42:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2526:42:13"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2585:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2599:6:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2607:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2595:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2595:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2585:6:13"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2626:40:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2643:9:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2654:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2639:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2639:27:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2626:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2455:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2458:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2452:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2452:14:13"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "2467:28:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2469:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "2478:1:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2481:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2474:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2474:19:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2469:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "2448:3:13",
																					"statements": []
																				},
																				"src": "2444:236:13"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2728:166:13",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2746:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2773:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2778:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2769:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2769:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2763:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2763:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2750:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2813:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2825:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2852:1:13",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2855:6:13"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2848:3:13"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2848:14:13"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2864:3:13",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2844:3:13"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2844:24:13"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2874:1:13",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2870:3:13"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2870:6:13"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2840:3:13"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2840:37:13"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2836:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2836:42:13"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2821:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2821:58:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2806:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2806:74:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2806:74:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2699:7:13"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2708:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2696:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2696:19:13"
																				},
																				"nodeType": "YulIf",
																				"src": "2693:201:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2914:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2928:1:13",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2931:6:13"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2924:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2924:14:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2940:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2920:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2920:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2907:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2907:36:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2907:36:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2290:663:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2295:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2970:234:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2984:14:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2997:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2988:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3033:67:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3051:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3070:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3075:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3066:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3066:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3060:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3060:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3051:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3014:6:13"
																				},
																				"nodeType": "YulIf",
																				"src": "3011:89:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3120:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3179:5:13"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3186:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "3126:52:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3126:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3113:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3113:81:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3113:81:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2962:242:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2270:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2278:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2267:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2267:14:13"
															},
															"nodeType": "YulSwitch",
															"src": "2260:944:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1939:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1945:3:13",
														"type": ""
													}
												],
												"src": "1858:1352:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001cb338038062001cb3833981016040819052620000349162000151565b60405180604001604052806005815260200164135e53919560da1b815250604051806040016040528060048152602001631353919560e21b81525081600090816200008091906200022e565b5060016200008f82826200022e565b505050620000ac620000a6620000de60201b60201c565b620000e2565b600980546001600160a01b039384166001600160a01b031991821617909155600a8054929093169116179055620002fa565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200014c57600080fd5b919050565b600080604083850312156200016557600080fd5b620001708362000134565b9150620001806020840162000134565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001b457607f821691505b602082108103620001d557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200022957600081815260208120601f850160051c81016020861015620002045750805b601f850160051c820191505b81811015620002255782815560010162000210565b5050505b505050565b81516001600160401b038111156200024a576200024a62000189565b62000262816200025b84546200019f565b84620001db565b602080601f8311600181146200029a5760008415620002815750858301515b600019600386901b1c1916600185901b17855562000225565b600085815260208120601f198616915b82811015620002cb57888601518255948401946001909101908401620002aa565b5085821015620002ea5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6119a9806200030a6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806364b30907116100b8578063a22cb4651161007c578063a22cb46514610285578063b88d4fde14610298578063c87b56dd146102ab578063d4698016146102be578063e985e9c5146102d1578063f2fde38b146102e457600080fd5b806364b309071461023e57806370a0823114610251578063715018a6146102645780638da5cb5b1461026c57806395d89b411461027d57600080fd5b806323b872dd116100ff57806323b872dd146101cf578063265aa621146101e257806342842e0e146102055780634626402b146102185780636352211e1461022b57600080fd5b80629a9b7b1461013b57806301ffc9a71461015757806306fdde031461017a578063081812fc1461018f578063095ea7b3146101ba575b600080fd5b61014460075481565b6040519081526020015b60405180910390f35b61016a6101653660046112d5565b6102f7565b604051901515815260200161014e565b610182610349565b60405161014e9190611342565b6101a261019d366004611355565b6103db565b6040516001600160a01b03909116815260200161014e565b6101cd6101c836600461138a565b610402565b005b6101cd6101dd3660046113b4565b61051c565b6101f56101f0366004611355565b61054d565b60405161014e94939291906113f0565b6101cd6102133660046113b4565b61068f565b600a546101a2906001600160a01b031681565b6101a2610239366004611355565b6106aa565b6101cd61024c3660046114e3565b61070a565b61014461025f366004611550565b610880565b6101cd610906565b6006546001600160a01b03166101a2565b61018261091a565b6101cd61029336600461156b565b610929565b6101cd6102a63660046115a7565b610938565b6101826102b9366004611355565b610970565b6009546101a2906001600160a01b031681565b61016a6102df366004611623565b6109e4565b6101cd6102f2366004611550565b610a12565b60006001600160e01b031982166380ac58cd60e01b148061032857506001600160e01b03198216635b5e139f60e01b145b8061034357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461035890611656565b80601f016020809104026020016040519081016040528092919081815260200182805461038490611656565b80156103d15780601f106103a6576101008083540402835291602001916103d1565b820191906000526020600020905b8154815290600101906020018083116103b457829003601f168201915b5050505050905090565b60006103e682610a8b565b506000908152600460205260409020546001600160a01b031690565b600061040d826106aa565b9050806001600160a01b0316836001600160a01b03160361047f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061049b575061049b81336109e4565b61050d5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610476565b6105178383610aea565b505050565b6105263382610b58565b6105425760405162461bcd60e51b815260040161047690611690565b610517838383610bb7565b60086020526000908152604090208054819061056890611656565b80601f016020809104026020016040519081016040528092919081815260200182805461059490611656565b80156105e15780601f106105b6576101008083540402835291602001916105e1565b820191906000526020600020905b8154815290600101906020018083116105c457829003601f168201915b5050505050908060010180546105f690611656565b80601f016020809104026020016040519081016040528092919081815260200182805461062290611656565b801561066f5780601f106106445761010080835404028352916020019161066f565b820191906000526020600020905b81548152906001019060200180831161065257829003601f168201915b5050505060028301546003909301549192916001600160a01b0316905084565b61051783838360405180602001604052806000815250610938565b6000818152600260205260408120546001600160a01b0316806103435760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610476565b6007805490600061071a836116f3565b909155505060075461072c3382610d1b565b604080516080810182528581526020808201869052818301859052336060830152600084815260089091529190912081518190610769908261175a565b506020820151600182019061077e908261175a565b5060408201516002820155606090910151600390910180546001600160a01b0319166001600160a01b03909216919091179055600060646107c084600a61181a565b6107ca9190611831565b90506000600a6107db83600661181a565b6107e59190611831565b90506000600a6107f684600461181a565b6108009190611831565b600a546040519192506001600160a01b03169083156108fc029084906000818181858888f1935050505015801561083b573d6000803e3d6000fd5b506009546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610876573d6000803e3d6000fd5b5050505050505050565b60006001600160a01b0382166108ea5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610476565b506001600160a01b031660009081526003602052604090205490565b61090e610ea6565b6109186000610f00565b565b60606001805461035890611656565b610934338383610f52565b5050565b6109423383610b58565b61095e5760405162461bcd60e51b815260040161047690611690565b61096a84848484611020565b50505050565b606061097b82610a8b565b600061099260408051602081019091526000815290565b905060008151116109b257604051806020016040528060008152506109dd565b806109bc84611053565b6040516020016109cd929190611853565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610a1a610ea6565b6001600160a01b038116610a7f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610476565b610a8881610f00565b50565b6000818152600260205260409020546001600160a01b0316610a885760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610476565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b1f826106aa565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b64836106aa565b9050806001600160a01b0316846001600160a01b03161480610b8b5750610b8b81856109e4565b80610baf5750836001600160a01b0316610ba4846103db565b6001600160a01b0316145b949350505050565b826001600160a01b0316610bca826106aa565b6001600160a01b031614610bf05760405162461bcd60e51b815260040161047690611882565b6001600160a01b038216610c525760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610476565b826001600160a01b0316610c65826106aa565b6001600160a01b031614610c8b5760405162461bcd60e51b815260040161047690611882565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610d715760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610476565b6000818152600260205260409020546001600160a01b031615610dd65760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610476565b6000818152600260205260409020546001600160a01b031615610e3b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610476565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6006546001600160a01b031633146109185760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610476565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610fb35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610476565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61102b848484610bb7565b611037848484846110e6565b61096a5760405162461bcd60e51b8152600401610476906118c7565b60606000611060836111e7565b600101905060008167ffffffffffffffff81111561108057611080611437565b6040519080825280601f01601f1916602001820160405280156110aa576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846110b457509392505050565b60006001600160a01b0384163b156111dc57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061112a903390899088908890600401611919565b6020604051808303816000875af1925050508015611165575060408051601f3d908101601f1916820190925261116291810190611956565b60015b6111c2573d808015611193576040519150601f19603f3d011682016040523d82523d6000602084013e611198565b606091505b5080516000036111ba5760405162461bcd60e51b8152600401610476906118c7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610baf565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112265772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611252576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061127057662386f26fc10000830492506010015b6305f5e1008310611288576305f5e100830492506008015b612710831061129c57612710830492506004015b606483106112ae576064830492506002015b600a83106103435760010192915050565b6001600160e01b031981168114610a8857600080fd5b6000602082840312156112e757600080fd5b81356109dd816112bf565b60005b8381101561130d5781810151838201526020016112f5565b50506000910152565b6000815180845261132e8160208601602086016112f2565b601f01601f19169290920160200192915050565b6020815260006109dd6020830184611316565b60006020828403121561136757600080fd5b5035919050565b80356001600160a01b038116811461138557600080fd5b919050565b6000806040838503121561139d57600080fd5b6113a68361136e565b946020939093013593505050565b6000806000606084860312156113c957600080fd5b6113d28461136e565b92506113e06020850161136e565b9150604084013590509250925092565b6080815260006114036080830187611316565b82810360208401526114158187611316565b604084019590955250506001600160a01b039190911660609091015292915050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561146857611468611437565b604051601f8501601f19908116603f0116810190828211818310171561149057611490611437565b816040528093508581528686860111156114a957600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126114d457600080fd5b6109dd8383356020850161144d565b6000806000606084860312156114f857600080fd5b833567ffffffffffffffff8082111561151057600080fd5b61151c878388016114c3565b9450602086013591508082111561153257600080fd5b5061153f868287016114c3565b925050604084013590509250925092565b60006020828403121561156257600080fd5b6109dd8261136e565b6000806040838503121561157e57600080fd5b6115878361136e565b91506020830135801515811461159c57600080fd5b809150509250929050565b600080600080608085870312156115bd57600080fd5b6115c68561136e565b93506115d46020860161136e565b925060408501359150606085013567ffffffffffffffff8111156115f757600080fd5b8501601f8101871361160857600080fd5b6116178782356020840161144d565b91505092959194509250565b6000806040838503121561163657600080fd5b61163f8361136e565b915061164d6020840161136e565b90509250929050565b600181811c9082168061166a57607f821691505b60208210810361168a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201611705576117056116dd565b5060010190565b601f82111561051757600081815260208120601f850160051c810160208610156117335750805b601f850160051c820191505b818110156117525782815560010161173f565b505050505050565b815167ffffffffffffffff81111561177457611774611437565b611788816117828454611656565b8461170c565b602080601f8311600181146117bd57600084156117a55750858301515b600019600386901b1c1916600185901b178555611752565b600085815260208120601f198616915b828110156117ec578886015182559484019460019091019084016117cd565b508582101561180a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082028115828204841417610343576103436116dd565b60008261184e57634e487b7160e01b600052601260045260246000fd5b500490565b600083516118658184602088016112f2565b8351908301906118798183602088016112f2565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061194c90830184611316565b9695505050505050565b60006020828403121561196857600080fd5b81516109dd816112bf56fea2646970667358221220e7a2a48ac3e8e9e8f856ab9c4de71d20a599698eebac52ce07f40469acdeaabf64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CB3 CODESIZE SUB DUP1 PUSH3 0x1CB3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x135E539195 PUSH1 0xDA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x13539195 PUSH1 0xE2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x80 SWAP2 SWAP1 PUSH3 0x22E JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x8F DUP3 DUP3 PUSH3 0x22E JUMP JUMPDEST POP POP POP PUSH3 0xAC PUSH3 0xA6 PUSH3 0xDE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH3 0x2FA JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x170 DUP4 PUSH3 0x134 JUMP JUMPDEST SWAP2 POP PUSH3 0x180 PUSH1 0x20 DUP5 ADD PUSH3 0x134 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x229 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x204 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x225 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x210 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x24A JUMPI PUSH3 0x24A PUSH3 0x189 JUMP JUMPDEST PUSH3 0x262 DUP2 PUSH3 0x25B DUP5 SLOAD PUSH3 0x19F JUMP JUMPDEST DUP5 PUSH3 0x1DB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x29A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x281 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x225 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2CB JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2AA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2EA JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x19A9 DUP1 PUSH3 0x30A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64B30907 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x64B30907 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x265AA621 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x9A9B7B EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH2 0x182 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x51C JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1A2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST PUSH2 0x144 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x1550 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x906 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x156B JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1A2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1550 JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x328 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x343 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x358 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x384 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0xA8B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D DUP3 PUSH2 0x6AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x49B JUMPI POP PUSH2 0x49B DUP2 CALLER PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x476 JUMP JUMPDEST PUSH2 0x517 DUP4 DUP4 PUSH2 0xAEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x526 CALLER DUP3 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH2 0x517 DUP4 DUP4 DUP4 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x568 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x594 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x5F6 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x622 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x66F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x644 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x66F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x652 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x517 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x938 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x71A DUP4 PUSH2 0x16F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH2 0x72C CALLER DUP3 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE CALLER PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x769 SWAP1 DUP3 PUSH2 0x175A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x77E SWAP1 DUP3 PUSH2 0x175A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x64 PUSH2 0x7C0 DUP5 PUSH1 0xA PUSH2 0x181A JUMP JUMPDEST PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0x7DB DUP4 PUSH1 0x6 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0x7F6 DUP5 PUSH1 0x4 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x800 SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x876 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x476 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x90E PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x918 PUSH1 0x0 PUSH2 0xF00 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x358 SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0x934 CALLER DUP4 DUP4 PUSH2 0xF52 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x942 CALLER DUP4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH2 0x96A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1020 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x97B DUP3 PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x992 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9DD JUMP JUMPDEST DUP1 PUSH2 0x9BC DUP5 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9CD SWAP3 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA1A PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x476 JUMP JUMPDEST PUSH2 0xA88 DUP2 PUSH2 0xF00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xB1F DUP3 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB64 DUP4 PUSH2 0x6AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xB8B JUMPI POP PUSH2 0xB8B DUP2 DUP6 PUSH2 0x9E4 JUMP JUMPDEST DUP1 PUSH2 0xBAF JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBA4 DUP5 PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBCA DUP3 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x476 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC65 DUP3 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xE3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x102B DUP5 DUP5 DUP5 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x1037 DUP5 DUP5 DUP5 DUP5 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1060 DUP4 PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1080 JUMPI PUSH2 0x1080 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10AA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x10B4 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x112A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1165 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1162 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11C2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1193 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x11BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x18C7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xBAF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1226 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1252 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1270 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1288 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x129C JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12AE JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x343 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9DD DUP2 PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x130D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x132E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x139D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A6 DUP4 PUSH2 0x136E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13D2 DUP5 PUSH2 0x136E JUMP JUMPDEST SWAP3 POP PUSH2 0x13E0 PUSH1 0x20 DUP6 ADD PUSH2 0x136E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1403 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1316 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1415 DUP2 DUP8 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1468 JUMPI PUSH2 0x1468 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1490 JUMPI PUSH2 0x1490 PUSH2 0x1437 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DD DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x144D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x151C DUP8 DUP4 DUP9 ADD PUSH2 0x14C3 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x153F DUP7 DUP3 DUP8 ADD PUSH2 0x14C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DD DUP3 PUSH2 0x136E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1587 DUP4 PUSH2 0x136E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x159C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C6 DUP6 PUSH2 0x136E JUMP JUMPDEST SWAP4 POP PUSH2 0x15D4 PUSH1 0x20 DUP7 ADD PUSH2 0x136E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1617 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x144D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x163F DUP4 PUSH2 0x136E JUMP JUMPDEST SWAP2 POP PUSH2 0x164D PUSH1 0x20 DUP5 ADD PUSH2 0x136E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x166A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x168A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1705 JUMPI PUSH2 0x1705 PUSH2 0x16DD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1733 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1752 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x173F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1774 JUMPI PUSH2 0x1774 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x1788 DUP2 PUSH2 0x1782 DUP5 SLOAD PUSH2 0x1656 JUMP JUMPDEST DUP5 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x17BD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x17A5 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x17EC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x17CD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x180A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x343 JUMPI PUSH2 0x343 PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x184E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1865 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x12F2 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1879 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x12F2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x194C SWAP1 DUP4 ADD DUP5 PUSH2 0x1316 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9DD DUP2 PUSH2 0x12BF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 LOG2 LOG4 DUP11 0xC3 0xE8 0xE9 0xE8 0xF8 JUMP 0xAB SWAP13 0x4D 0xE7 SAR KECCAK256 0xA5 SWAP10 PUSH10 0x8EEBAC52CE07F40469AC 0xDE 0xAA 0xBF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "175:1317:12:-:0;;;502:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:1;;;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:1;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;600:15:12::1;:34:::0;;-1:-1:-1;;;;;600:34:12;;::::1;-1:-1:-1::0;;;;;;600:34:12;;::::1;;::::0;;;645:14:::1;:32:::0;;;;;::::1;::::0;::::1;;::::0;;175:1317;;640:96:6;719:10;;640:96::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:177:13:-;93:13;;-1:-1:-1;;;;;135:31:13;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:127::-;555:10;550:3;546:20;543:1;536:31;586:4;583:1;576:15;610:4;607:1;600:15;626:380;705:1;701:12;;;;748;;;769:61;;823:4;815:6;811:17;801:27;;769:61;876:2;868:6;865:14;845:18;842:38;839:161;;922:10;917:3;913:20;910:1;903:31;957:4;954:1;947:15;985:4;982:1;975:15;839:161;;626:380;;;:::o;1137:545::-;1239:2;1234:3;1231:11;1228:448;;;1275:1;1300:5;1296:2;1289:17;1345:4;1341:2;1331:19;1415:2;1403:10;1399:19;1396:1;1392:27;1386:4;1382:38;1451:4;1439:10;1436:20;1433:47;;;-1:-1:-1;1474:4:13;1433:47;1529:2;1524:3;1520:12;1517:1;1513:20;1507:4;1503:31;1493:41;;1584:82;1602:2;1595:5;1592:13;1584:82;;;1647:17;;;1628:1;1617:13;1584:82;;;1588:3;;;1228:448;1137:545;;;:::o;1858:1352::-;1978:10;;-1:-1:-1;;;;;2000:30:13;;1997:56;;;2033:18;;:::i;:::-;2062:97;2152:6;2112:38;2144:4;2138:11;2112:38;:::i;:::-;2106:4;2062:97;:::i;:::-;2214:4;;2278:2;2267:14;;2295:1;2290:663;;;;2997:1;3014:6;3011:89;;;-1:-1:-1;3066:19:13;;;3060:26;3011:89;-1:-1:-1;;1815:1:13;1811:11;;;1807:24;1803:29;1793:40;1839:1;1835:11;;;1790:57;3113:81;;2260:944;;2290:663;1084:1;1077:14;;;1121:4;1108:18;;-1:-1:-1;;2326:20:13;;;2444:236;2458:7;2455:1;2452:14;2444:236;;;2547:19;;;2541:26;2526:42;;2639:27;;;;2607:1;2595:14;;;;2474:19;;2444:236;;;2448:3;2708:6;2699:7;2696:19;2693:201;;;2769:19;;;2763:26;-1:-1:-1;;2852:1:13;2848:14;;;2864:3;2844:24;2840:37;2836:42;2821:58;2806:74;;2693:201;-1:-1:-1;;;;;2940:1:13;2924:14;;;2920:22;2907:36;;-1:-1:-1;1858:1352:13:o;:::-;175:1317:12;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1023": {
									"entryPoint": null,
									"id": 1023,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_889": {
									"entryPoint": 2794,
									"id": 889,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_326": {
									"entryPoint": null,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1010": {
									"entryPoint": null,
									"id": 1010,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_997": {
									"entryPoint": 4326,
									"id": 997,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 3750,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_558": {
									"entryPoint": null,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_592": {
									"entryPoint": 2904,
									"id": 592,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_713": {
									"entryPoint": 3355,
									"id": 713,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1542": {
									"entryPoint": null,
									"id": 1542,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_540": {
									"entryPoint": null,
									"id": 540,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_935": {
									"entryPoint": 2699,
									"id": 935,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_527": {
									"entryPoint": 4128,
									"id": 527,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_921": {
									"entryPoint": 3922,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3840,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_865": {
									"entryPoint": 2999,
									"id": 865,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_369": {
									"entryPoint": 1026,
									"id": 369,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_230": {
									"entryPoint": 2176,
									"id": 230,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@currentTokenId_2798": {
									"entryPoint": null,
									"id": 2798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_387": {
									"entryPoint": 987,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_422": {
									"entryPoint": 2532,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1218": {
									"entryPoint": null,
									"id": 1218,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@liquidityWallet_2814": {
									"entryPoint": null,
									"id": 2814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log10_2520": {
									"entryPoint": 4583,
									"id": 2520,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintNFT_2914": {
									"entryPoint": 1802,
									"id": 2914,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_268": {
									"entryPoint": 841,
									"id": 268,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nfts_2812": {
									"entryPoint": 1357,
									"id": 2812,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_258": {
									"entryPoint": 1706,
									"id": 258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2310,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_468": {
									"entryPoint": 1679,
									"id": 468,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_498": {
									"entryPoint": 2360,
									"id": 498,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_404": {
									"entryPoint": 2345,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1804": {
									"entryPoint": null,
									"id": 1804,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_206": {
									"entryPoint": 759,
									"id": 206,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_278": {
									"entryPoint": 2330,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1611": {
									"entryPoint": 4179,
									"id": 1611,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_317": {
									"entryPoint": 2416,
									"id": 317,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_449": {
									"entryPoint": 1308,
									"id": 449,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2578,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasuryWallet_2816": {
									"entryPoint": null,
									"id": 2816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 5315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 5347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6227,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6425,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5900,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5175,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16056:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "240:87:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "314:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "263:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "274:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "285:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "290:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "281:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "281:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "270:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "270:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "260:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "260:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "253:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:51:13"
															},
															"nodeType": "YulIf",
															"src": "250:71:13"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "229:5:13",
														"type": ""
													}
												],
												"src": "196:131:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "401:176:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "447:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "456:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "459:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "449:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "449:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "449:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "422:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "431:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "418:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "414:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:32:13"
															},
															"nodeType": "YulIf",
															"src": "411:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "472:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "485:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "476:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "541:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "517:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "517:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "517:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "556:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "566:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "367:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "378:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "390:6:13",
														"type": ""
													}
												],
												"src": "332:245:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "687:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "699:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "710:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "695:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "687:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "729:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "754:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "747:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "747:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "740:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "722:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "722:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "722:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "646:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "657:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "668:4:13",
														"type": ""
													}
												],
												"src": "582:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "840:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "850:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "859:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "854:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "919:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "944:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "949:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "940:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "940:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "963:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "968:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "959:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "959:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "953:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "953:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "933:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "933:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "933:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "880:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "877:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "877:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "891:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "893:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "902:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "905:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "898:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "898:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "893:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "873:3:13",
																"statements": []
															},
															"src": "869:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1002:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1007:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "998:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "998:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1016:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "991:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "991:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "818:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "823:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "828:6:13",
														"type": ""
													}
												],
												"src": "774:250:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:221:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1089:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1109:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1103:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1093:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1131:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1124:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1124:19:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1191:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1198:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1187:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1187:16:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1209:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1214:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1205:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:14:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1221:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1152:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:76:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:76:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1237:57:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1252:3:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1265:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1273:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1261:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1261:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1282:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1278:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1278:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1257:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1257:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1248:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1248:39:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1289:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1244:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1244:50:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1237:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1056:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1063:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1071:3:13",
														"type": ""
													}
												],
												"src": "1029:271:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1426:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1436:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1436:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1436:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1466:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1492:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1504:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1515:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1500:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1500:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1474:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1474:45:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1466:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1395:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1406:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1417:4:13",
														"type": ""
													}
												],
												"src": "1305:220:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1600:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1646:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1655:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1658:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1648:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1648:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1648:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1621:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1630:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1617:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1617:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1642:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1613:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1613:32:13"
															},
															"nodeType": "YulIf",
															"src": "1610:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1671:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1694:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1681:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1681:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1566:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1577:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1589:6:13",
														"type": ""
													}
												],
												"src": "1530:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1816:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1826:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1838:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1849:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1834:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1834:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1826:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1868:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1883:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1899:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1904:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1895:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1895:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1908:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1891:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1891:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1879:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1879:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1861:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1861:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1785:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1796:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1807:4:13",
														"type": ""
													}
												],
												"src": "1715:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1972:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1982:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2004:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1991:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1991:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1982:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2074:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2083:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2086:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2076:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2076:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2076:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2033:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2044:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2059:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2064:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2055:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2055:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2068:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2051:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2051:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2040:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2040:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2030:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2023:50:13"
															},
															"nodeType": "YulIf",
															"src": "2020:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1951:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1962:5:13",
														"type": ""
													}
												],
												"src": "1923:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2188:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2234:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2243:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2246:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2236:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2236:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2236:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2209:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2218:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2205:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2205:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2230:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2201:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:32:13"
															},
															"nodeType": "YulIf",
															"src": "2198:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2259:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2288:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2269:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2307:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2334:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2345:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2330:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2330:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2317:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2317:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2146:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2157:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2169:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2177:6:13",
														"type": ""
													}
												],
												"src": "2101:254:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2464:224:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2510:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2522:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2512:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:32:13"
															},
															"nodeType": "YulIf",
															"src": "2474:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2535:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2545:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2583:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2616:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2612:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2593:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2640:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2678:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2663:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2414:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2425:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2437:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2445:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2453:6:13",
														"type": ""
													}
												],
												"src": "2360:328:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2918:328:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2935:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2946:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2928:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2928:22:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2959:60:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2991:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3003:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2999:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2973:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2973:46:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "2963:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3039:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3050:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3035:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "3059:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3067:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3055:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3055:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3028:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3028:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3028:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3087:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3113:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3121:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3095:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:33:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3087:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3148:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3159:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3144:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3144:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3164:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3137:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3137:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3137:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3191:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3202:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3187:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3187:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "3211:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3227:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3232:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3223:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3223:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3236:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3219:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3219:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3207:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3207:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3180:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3180:60:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2863:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2874:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2882:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2890:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2898:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2909:4:13",
														"type": ""
													}
												],
												"src": "2693:553:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3283:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3300:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3307:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3303:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3303:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3293:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3293:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3340:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3343:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3333:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3333:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3333:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3364:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3367:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3357:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3357:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3251:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3458:557:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3468:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3478:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3472:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3523:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3525:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3525:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3525:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3511:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3519:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3508:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:14:13"
															},
															"nodeType": "YulIf",
															"src": "3505:40:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3554:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3568:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3564:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3564:7:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3558:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3580:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3594:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3584:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3612:73:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3634:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "3658:6:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3666:2:13",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3654:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3654:15:13"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "3671:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3650:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3650:24:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3676:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3646:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3646:33:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3681:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:42:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3630:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3630:55:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3616:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3744:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3746:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3746:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3746:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3703:10:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3715:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3700:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3700:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3723:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3735:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3720:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3720:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3697:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3697:46:13"
															},
															"nodeType": "YulIf",
															"src": "3694:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3782:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3786:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3775:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3775:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3775:22:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3806:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3815:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3806:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3837:6:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3845:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3830:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3830:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3830:22:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3890:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3899:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3902:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3892:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3892:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3892:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3871:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3876:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3867:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3867:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3885:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3864:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3864:25:13"
															},
															"nodeType": "YulIf",
															"src": "3861:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3932:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3940:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3928:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3928:17:13"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3947:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3952:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3915:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3915:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3915:44:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3983:6:13"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3991:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3979:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3979:19:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4000:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3975:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3975:30:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4007:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3968:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3968:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3968:41:13"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3427:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3432:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3440:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3448:5:13",
														"type": ""
													}
												],
												"src": "3383:632:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4073:169:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4122:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4131:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4134:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4124:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4124:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4124:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4101:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4109:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4097:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4097:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4116:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4093:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4093:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:35:13"
															},
															"nodeType": "YulIf",
															"src": "4083:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4147:89:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4195:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4203:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4191:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4191:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4223:6:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4210:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4210:20:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4232:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "4156:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:80:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4147:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4047:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4055:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4063:5:13",
														"type": ""
													}
												],
												"src": "4020:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4371:487:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4417:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4426:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4429:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4419:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4419:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4419:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4401:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4388:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4388:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4413:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4384:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:32:13"
															},
															"nodeType": "YulIf",
															"src": "4381:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4442:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4469:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4456:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4446:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4488:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4498:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4492:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4543:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4552:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4555:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4545:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4545:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4545:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4531:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4539:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4528:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:14:13"
															},
															"nodeType": "YulIf",
															"src": "4525:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4568:60:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4600:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4611:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4620:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4578:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:50:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4568:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4637:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4670:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4681:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4666:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4666:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4653:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4641:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4714:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4723:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4726:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4716:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4716:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4716:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4700:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4710:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4697:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4697:16:13"
															},
															"nodeType": "YulIf",
															"src": "4694:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4739:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4771:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4782:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4767:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4767:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4793:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4749:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4749:52:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4739:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4810:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4837:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4848:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4833:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4833:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4820:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4820:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4810:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4321:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4332:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4344:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4352:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4360:6:13",
														"type": ""
													}
												],
												"src": "4247:611:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4933:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4979:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4988:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4991:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4981:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4981:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4981:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4954:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4963:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4950:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4950:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4975:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4946:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4946:32:13"
															},
															"nodeType": "YulIf",
															"src": "4943:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5004:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5033:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5014:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5014:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4899:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4910:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4922:6:13",
														"type": ""
													}
												],
												"src": "4863:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5138:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5184:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5193:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5196:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5186:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5186:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5186:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5159:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5168:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5155:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5155:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5180:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5151:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5151:32:13"
															},
															"nodeType": "YulIf",
															"src": "5148:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5209:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5238:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5219:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5219:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5209:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5257:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5287:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5298:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5283:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5283:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5270:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5261:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5355:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5364:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5367:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5357:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5357:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5357:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5324:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5345:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5338:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5338:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5331:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5331:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5321:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5321:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5314:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:40:13"
															},
															"nodeType": "YulIf",
															"src": "5311:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5380:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5390:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5096:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5107:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5119:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5127:6:13",
														"type": ""
													}
												],
												"src": "5054:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5536:537:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5583:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5592:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5595:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5585:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5585:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5585:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5557:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5566:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5553:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5553:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5578:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:33:13"
															},
															"nodeType": "YulIf",
															"src": "5546:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5608:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5637:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5618:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5618:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5608:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5656:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5689:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5700:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5685:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5666:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5656:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5713:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5740:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5751:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5736:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5736:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5723:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5723:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5713:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5764:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5795:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5806:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5791:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5778:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5778:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5768:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5853:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5862:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5865:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5855:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5855:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5855:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5825:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5833:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5822:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:30:13"
															},
															"nodeType": "YulIf",
															"src": "5819:50:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5878:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5892:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5903:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5888:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5888:22:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5882:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5958:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5967:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5970:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5960:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5960:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5960:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "5937:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5941:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5933:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5933:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5948:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5929:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5929:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5922:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5922:35:13"
															},
															"nodeType": "YulIf",
															"src": "5919:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5983:84:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6032:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6036:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:11:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6054:2:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6041:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6041:16:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6059:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "5993:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5993:74:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5983:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5478:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5489:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5501:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5509:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5517:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5525:6:13",
														"type": ""
													}
												],
												"src": "5406:667:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6165:173:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6211:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6220:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6223:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6213:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6213:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6213:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6186:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6195:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6182:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6182:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6207:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6178:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6178:32:13"
															},
															"nodeType": "YulIf",
															"src": "6175:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6236:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6265:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6246:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6246:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6236:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6284:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6317:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6328:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6313:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6313:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6294:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6294:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6284:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6123:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6134:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6146:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6154:6:13",
														"type": ""
													}
												],
												"src": "6078:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6398:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6408:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6422:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6425:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6418:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6418:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6408:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6439:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6469:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6475:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6465:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6465:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6443:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6516:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6518:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6532:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6540:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6528:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6528:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6518:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6496:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6489:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6489:26:13"
															},
															"nodeType": "YulIf",
															"src": "6486:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6606:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6627:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6634:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6639:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6630:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6630:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6620:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6620:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6620:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6671:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6674:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6664:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6664:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6664:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6699:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6702:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6692:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6692:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6692:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6562:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6585:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6593:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6582:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6582:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6559:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6559:38:13"
															},
															"nodeType": "YulIf",
															"src": "6556:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6378:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6387:6:13",
														"type": ""
													}
												],
												"src": "6343:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6902:223:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6919:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6930:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6912:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6912:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6912:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6953:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6964:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6949:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6949:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6969:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6942:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6942:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6942:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6992:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7003:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6988:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6988:18:13"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7008:34:13",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6981:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6981:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7063:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7074:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7059:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7059:18:13"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7079:3:13",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7052:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7052:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7092:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7104:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7115:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7100:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7100:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7092:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6879:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6893:4:13",
														"type": ""
													}
												],
												"src": "6728:397:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7304:251:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7321:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7332:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7314:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7314:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7314:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7355:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7366:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7351:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7351:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7371:2:13",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7344:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7344:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7344:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7394:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7405:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7390:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7390:18:13"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7410:34:13",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7383:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7383:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7383:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7465:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7476:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7461:18:13"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7481:31:13",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7454:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7454:59:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7454:59:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7522:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7534:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7545:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7530:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7530:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7522:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7281:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7295:4:13",
														"type": ""
													}
												],
												"src": "7130:425:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7734:235:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7751:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7762:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7744:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7744:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7744:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7785:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7796:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7781:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7781:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7801:2:13",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7774:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7774:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7774:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7824:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7835:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7820:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7820:18:13"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7840:34:13",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7813:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7813:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7813:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7895:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7906:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7891:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7891:18:13"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7911:15:13",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7884:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7884:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7884:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7936:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7948:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7959:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7944:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7944:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7936:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7711:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7725:4:13",
														"type": ""
													}
												],
												"src": "7560:409:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8148:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8165:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8158:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8158:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8158:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8199:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8210:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8195:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8195:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8215:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8188:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8188:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8238:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8249:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8234:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8234:18:13"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8254:26:13",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8227:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8227:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8227:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8302:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8313:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8298:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8298:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8290:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8125:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8139:4:13",
														"type": ""
													}
												],
												"src": "7974:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8359:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8376:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8383:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8388:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8379:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8379:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8369:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8369:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8369:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8416:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8419:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8409:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8409:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8409:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8440:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8443:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8433:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8433:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8327:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8506:88:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8537:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8539:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8539:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8539:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8522:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8533:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8529:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8529:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8519:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8519:17:13"
															},
															"nodeType": "YulIf",
															"src": "8516:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8568:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8579:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8586:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8575:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8575:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8568:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8488:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8498:3:13",
														"type": ""
													}
												],
												"src": "8459:135:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8655:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8672:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8675:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8665:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8665:14:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8665:14:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8688:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8706:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8709:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8696:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8696:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8688:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8638:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8646:4:13",
														"type": ""
													}
												],
												"src": "8599:121:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8806:464:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8839:425:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8853:11:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8863:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "8857:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8884:2:13"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "8888:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8877:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8877:17:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8877:17:13"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8907:31:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8929:2:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8933:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "8919:9:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8919:19:13"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "8911:4:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8951:57:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "8974:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8984:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "8991:10:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "9003:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8987:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8987:19:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "8980:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8980:27:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8970:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8970:38:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "8955:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9045:23:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "9047:19:13",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "9062:4:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "9047:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "9027:10:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9039:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "9024:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9024:20:13"
																		},
																		"nodeType": "YulIf",
																		"src": "9021:47:13"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9081:41:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "9095:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9105:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "9112:3:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "9117:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9108:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9108:12:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "9101:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9101:20:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9091:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9091:31:13"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "9085:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9135:24:13",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "9148:11:13"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "9139:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9233:21:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "9242:5:13"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "9249:2:13"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "9235:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9235:17:13"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9235:17:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "9183:5:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "9190:2:13"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "9180:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9180:13:13"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "9194:26:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "9196:22:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "9209:5:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9216:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9205:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9205:13:13"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "9196:5:13"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "9176:3:13",
																			"statements": []
																		},
																		"src": "9172:82:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "8822:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8827:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8819:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8819:11:13"
															},
															"nodeType": "YulIf",
															"src": "8816:448:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8778:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "8785:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "8790:10:13",
														"type": ""
													}
												],
												"src": "8725:545:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9360:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9370:65:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9385:4:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9403:1:13",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "9406:3:13"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "9399:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9399:11:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9416:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "9412:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9412:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "9395:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9395:24:13"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "9391:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9391:29:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9381:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9381:40:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9427:1:13",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "9430:3:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9423:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9423:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9378:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9378:57:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "9370:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9337:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "9343:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "9351:4:13",
														"type": ""
													}
												],
												"src": "9275:166:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9542:1256:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9552:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9572:3:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9566:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:10:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "9556:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9619:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9621:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9621:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9621:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "9591:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9599:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9588:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9588:30:13"
															},
															"nodeType": "YulIf",
															"src": "9585:56:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "9694:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "9732:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "9726:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9726:11:13"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "9700:25:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9700:38:13"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "9740:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "9650:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9650:97:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9650:97:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9756:18:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9773:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "9760:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9783:23:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9802:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "9787:11:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9815:24:13",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "9828:11:13"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "9815:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9885:656:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9899:35:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "9918:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "9930:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "9926:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9926:7:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "9914:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9914:20:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "9903:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9947:49:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "9991:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "9961:29:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9961:35:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "9951:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10009:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10018:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "10013:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10096:172:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10121:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "10139:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "10144:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "10135:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "10135:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "10129:5:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10129:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "10114:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10114:42:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10114:42:13"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10173:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10187:6:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10195:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10183:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10183:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "10173:6:13"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10214:40:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "10231:9:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "10242:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10227:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10227:27:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "10214:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10043:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "10046:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10040:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10040:14:13"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "10055:28:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10057:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "10066:1:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "10069:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10062:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10062:19:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10057:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "10036:3:13",
																					"statements": []
																				},
																				"src": "10032:236:13"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10316:166:13",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "10334:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "10361:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "10366:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10357:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10357:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "10351:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10351:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "10338:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10401:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "10413:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "10440:1:13",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "10443:6:13"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "10436:3:13"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "10436:14:13"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "10452:3:13",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "10432:3:13"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "10432:24:13"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "10462:1:13",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "10458:3:13"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "10458:6:13"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "10428:3:13"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "10428:37:13"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "10424:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "10424:42:13"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "10409:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10409:58:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "10394:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10394:74:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10394:74:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "10287:7:13"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "10296:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10284:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10284:19:13"
																				},
																				"nodeType": "YulIf",
																				"src": "10281:201:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10502:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10516:1:13",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "10519:6:13"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "10512:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10512:14:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10528:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10508:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10508:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "10495:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10495:36:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10495:36:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9878:663:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9883:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10558:234:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10572:14:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10585:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "10576:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10621:67:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10639:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "10658:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "10663:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10654:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10654:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "10648:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10648:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "10639:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "10602:6:13"
																				},
																				"nodeType": "YulIf",
																				"src": "10599:89:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10708:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "10767:5:13"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "10774:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "10714:52:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10714:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "10701:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10701:81:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10701:81:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10550:242:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "9858:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9866:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9855:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9855:14:13"
															},
															"nodeType": "YulSwitch",
															"src": "9848:944:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "9527:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9533:3:13",
														"type": ""
													}
												],
												"src": "9446:1352:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10855:116:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10865:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10880:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10883:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10876:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10876:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10865:7:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10943:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10945:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10945:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10945:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10914:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10907:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10907:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10921:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10928:7:13"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10937:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10924:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10924:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10918:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10918:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10904:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10904:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10897:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10897:45:13"
															},
															"nodeType": "YulIf",
															"src": "10894:71:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10834:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10837:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10843:7:13",
														"type": ""
													}
												],
												"src": "10803:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11008:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11025:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11032:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11037:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11028:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11028:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11018:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11018:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11018:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11065:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11068:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11058:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11058:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11058:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11089:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11092:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11082:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11082:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11082:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10976:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11154:171:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11185:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11206:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11213:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11218:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11209:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11209:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11199:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11199:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11199:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11250:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11253:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11243:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11243:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11243:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11278:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11281:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11271:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11271:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11271:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11174:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11167:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11167:9:13"
															},
															"nodeType": "YulIf",
															"src": "11164:132:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11305:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11314:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11317:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11310:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11310:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11305:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11139:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11142:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11148:1:13",
														"type": ""
													}
												],
												"src": "11108:217:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11504:231:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11521:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11532:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11514:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11514:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11514:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11555:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11566:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11551:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11551:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11571:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11544:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11544:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11544:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11594:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11605:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11590:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11590:18:13"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11610:34:13",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11583:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11583:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11583:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11665:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11676:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11661:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11661:18:13"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11681:11:13",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11654:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11654:39:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11654:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11702:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11714:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11725:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11710:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11710:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11702:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11481:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11495:4:13",
														"type": ""
													}
												],
												"src": "11330:405:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11927:309:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11937:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11957:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11951:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11951:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11941:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12012:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12020:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12008:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12008:17:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12027:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12032:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11973:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11973:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11973:66:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12048:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12065:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12070:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12061:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12061:16:13"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "12052:5:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12086:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12108:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12102:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12102:13:13"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "12090:8:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12163:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12171:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12159:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12159:17:13"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "12178:5:13"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "12185:8:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12124:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12124:70:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12124:70:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12203:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "12214:5:13"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "12221:8:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12210:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12210:20:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12203:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11895:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11900:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11908:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11919:3:13",
														"type": ""
													}
												],
												"src": "11740:496:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12415:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12432:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12443:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12425:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12425:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12425:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12466:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12477:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12462:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12462:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12482:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12455:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12455:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12455:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12505:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12516:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12501:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12501:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12521:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12494:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12494:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12494:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12576:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12587:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12572:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12572:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12592:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12565:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12565:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12565:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12610:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12622:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12633:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12618:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12618:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12610:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12392:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12406:4:13",
														"type": ""
													}
												],
												"src": "12241:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12822:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12839:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12850:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12832:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12832:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12832:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12873:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12884:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12869:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12869:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12889:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12862:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12862:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12862:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12912:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12923:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12908:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12908:18:13"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12928:34:13",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12901:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12901:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12901:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12983:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12994:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12979:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12979:18:13"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12999:7:13",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12972:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12972:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12972:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13016:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13028:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13039:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13024:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13024:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13016:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12799:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12813:4:13",
														"type": ""
													}
												],
												"src": "12648:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13228:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13245:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13256:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13238:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13238:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13238:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13279:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13290:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13275:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13275:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13295:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13268:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13268:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13268:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13318:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13329:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13314:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13314:18:13"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13334:34:13",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13307:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13307:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13307:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13389:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13400:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13385:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13385:18:13"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13405:6:13",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13378:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13378:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13378:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13421:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13433:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13444:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13429:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13429:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13421:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13205:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13219:4:13",
														"type": ""
													}
												],
												"src": "13054:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13633:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13650:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13661:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13643:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13643:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13643:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13684:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13695:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13680:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13680:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13700:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13673:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13673:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13673:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13723:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13734:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13719:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13719:18:13"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13739:34:13",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13712:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13712:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13712:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13783:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13795:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13806:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13791:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13791:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13783:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13610:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13624:4:13",
														"type": ""
													}
												],
												"src": "13459:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13994:178:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14011:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14022:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14004:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14004:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14004:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14045:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14056:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14041:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14041:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14061:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14034:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14034:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14034:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14084:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14095:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14080:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14080:18:13"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14100:30:13",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14073:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14073:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14073:58:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14140:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14152:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14163:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14148:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14148:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14140:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13971:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13985:4:13",
														"type": ""
													}
												],
												"src": "13820:352:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14351:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14368:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14379:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14361:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14361:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14361:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14402:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14413:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14398:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14398:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14418:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14391:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14391:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14391:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14441:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14452:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14437:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14437:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14457:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14430:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14430:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14430:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14501:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14513:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14524:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14509:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14509:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14501:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14328:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14342:4:13",
														"type": ""
													}
												],
												"src": "14177:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14712:175:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14729:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14740:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14722:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14722:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14722:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14763:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14774:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14759:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14759:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14779:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14752:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14752:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14752:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14802:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14813:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14798:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14798:18:13"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14818:27:13",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14791:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14791:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14791:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14855:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14867:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14878:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14863:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14863:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14855:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14689:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14703:4:13",
														"type": ""
													}
												],
												"src": "14538:349:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15066:240:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15083:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15094:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15076:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15076:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15076:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15117:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15128:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15113:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15113:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15133:2:13",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15106:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15106:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15106:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15156:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15167:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15152:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15152:18:13"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15172:34:13",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15145:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15145:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15145:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15227:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15238:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15223:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15223:18:13"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15243:20:13",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15216:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15216:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15216:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15273:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15285:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15296:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15281:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15281:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15273:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15043:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15057:4:13",
														"type": ""
													}
												],
												"src": "14892:414:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15514:286:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15524:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15542:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15547:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15538:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15538:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15551:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15534:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15534:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15528:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15569:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15584:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15592:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15580:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15580:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15562:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15562:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15562:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15616:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15627:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15612:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15612:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15636:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15644:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15632:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15632:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15605:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15605:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15605:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15668:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15679:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15664:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15664:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15684:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15657:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15657:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15657:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15711:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15722:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15707:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15707:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15727:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15700:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15700:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15700:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15740:54:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15766:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15778:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15789:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15774:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15774:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "15748:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15748:46:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15740:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15459:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15470:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15478:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15486:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15494:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15505:4:13",
														"type": ""
													}
												],
												"src": "15311:489:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15885:169:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15931:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15940:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15943:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15933:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15933:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15933:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15906:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15915:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15902:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15902:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15927:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15898:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15898:32:13"
															},
															"nodeType": "YulIf",
															"src": "15895:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15956:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15975:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15969:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15969:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "15960:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16018:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "15994:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15994:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15994:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16033:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16043:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "16033:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15851:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15862:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15874:6:13",
														"type": ""
													}
												],
												"src": "15805:249:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64B30907 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x64B30907 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x265AA621 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x9A9B7B EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH2 0x182 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x51C JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1A2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST PUSH2 0x144 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x1550 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x906 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x156B JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1A2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1550 JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x328 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x343 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x358 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x384 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP3 PUSH2 0xA8B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D DUP3 PUSH2 0x6AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x49B JUMPI POP PUSH2 0x49B DUP2 CALLER PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x476 JUMP JUMPDEST PUSH2 0x517 DUP4 DUP4 PUSH2 0xAEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x526 CALLER DUP3 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH2 0x517 DUP4 DUP4 DUP4 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x568 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x594 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x5F6 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x622 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x66F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x644 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x66F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x652 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x517 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x938 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x71A DUP4 PUSH2 0x16F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH2 0x72C CALLER DUP3 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE CALLER PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x769 SWAP1 DUP3 PUSH2 0x175A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x77E SWAP1 DUP3 PUSH2 0x175A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x64 PUSH2 0x7C0 DUP5 PUSH1 0xA PUSH2 0x181A JUMP JUMPDEST PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0x7DB DUP4 PUSH1 0x6 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0x7F6 DUP5 PUSH1 0x4 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x800 SWAP2 SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x876 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x476 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x90E PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x918 PUSH1 0x0 PUSH2 0xF00 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x358 SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0x934 CALLER DUP4 DUP4 PUSH2 0xF52 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x942 CALLER DUP4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH2 0x96A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1020 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x97B DUP3 PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x992 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9DD JUMP JUMPDEST DUP1 PUSH2 0x9BC DUP5 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9CD SWAP3 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA1A PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x476 JUMP JUMPDEST PUSH2 0xA88 DUP2 PUSH2 0xF00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xB1F DUP3 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB64 DUP4 PUSH2 0x6AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xB8B JUMPI POP PUSH2 0xB8B DUP2 DUP6 PUSH2 0x9E4 JUMP JUMPDEST DUP1 PUSH2 0xBAF JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBA4 DUP5 PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBCA DUP3 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x476 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC65 DUP3 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xE3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x476 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x102B DUP5 DUP5 DUP5 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x1037 DUP5 DUP5 DUP5 DUP5 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1060 DUP4 PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1080 JUMPI PUSH2 0x1080 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10AA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x10B4 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x112A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1165 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1162 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11C2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1193 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x11BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x18C7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xBAF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1226 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1252 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1270 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1288 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x129C JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12AE JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x343 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9DD DUP2 PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x130D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x132E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x139D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A6 DUP4 PUSH2 0x136E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13D2 DUP5 PUSH2 0x136E JUMP JUMPDEST SWAP3 POP PUSH2 0x13E0 PUSH1 0x20 DUP6 ADD PUSH2 0x136E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1403 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1316 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1415 DUP2 DUP8 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1468 JUMPI PUSH2 0x1468 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1490 JUMPI PUSH2 0x1490 PUSH2 0x1437 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DD DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x144D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x151C DUP8 DUP4 DUP9 ADD PUSH2 0x14C3 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x153F DUP7 DUP3 DUP8 ADD PUSH2 0x14C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DD DUP3 PUSH2 0x136E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1587 DUP4 PUSH2 0x136E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x159C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C6 DUP6 PUSH2 0x136E JUMP JUMPDEST SWAP4 POP PUSH2 0x15D4 PUSH1 0x20 DUP7 ADD PUSH2 0x136E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1617 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x144D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x163F DUP4 PUSH2 0x136E JUMP JUMPDEST SWAP2 POP PUSH2 0x164D PUSH1 0x20 DUP5 ADD PUSH2 0x136E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x166A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x168A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1705 JUMPI PUSH2 0x1705 PUSH2 0x16DD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1733 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1752 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x173F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1774 JUMPI PUSH2 0x1774 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x1788 DUP2 PUSH2 0x1782 DUP5 SLOAD PUSH2 0x1656 JUMP JUMPDEST DUP5 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x17BD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x17A5 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x17EC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x17CD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x180A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x343 JUMPI PUSH2 0x343 PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x184E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1865 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x12F2 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1879 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x12F2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x194C SWAP1 DUP4 ADD DUP5 PUSH2 0x1316 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9DD DUP2 PUSH2 0x12BF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 LOG2 LOG4 DUP11 0xC3 0xE8 0xE9 0xE8 0xF8 JUMP 0xAB SWAP13 0x4D 0xE7 SAR KECCAK256 0xA5 SWAP10 PUSH10 0x8EEBAC52CE07F40469AC 0xDE 0xAA 0xBF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "175:1317:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;220:29;;;;;;;;;160:25:13;;;148:2;133:18;220:29:12;;;;;;;;1570:300:1;;;;;;:::i;:::-;;:::i;:::-;;;747:14:13;;740:22;722:41;;710:2;695:18;1570:300:1;582:187:13;2471:98:1;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1879:32:13;;;1861:51;;1849:2;1834:18;3935:167:1;1715:203:13;3468:406:1;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;:::i;:::-;;:::i;383:35:12:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;4974:149:1:-;;;;;;:::i;:::-;;:::i;464:29:12:-;;;;;-1:-1:-1;;;;;464:29:12;;;2190:219:1;;;;;;:::i;:::-;;:::i;693:796:12:-;;;;;;:::i;:::-;;:::i;1929:204:1:-;;;;;;:::i;:::-;;:::i;1824:101:0:-;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;2633:102:1;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;427:30:12:-;;;;;-1:-1:-1;;;;;427:30:12;;;4388:162:1;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;1570:300:1:-;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1827:36:1;1688:175;1570:300;-1:-1:-1;;1570:300:1:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:1;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:1;:2;-1:-1:-1;;;;;3605:11:1;;3597:57;;;;-1:-1:-1;;;3597:57:1;;6930:2:13;3597:57:1;;;6912:21:13;6969:2;6949:18;;;6942:30;7008:34;6988:18;;;6981:62;-1:-1:-1;;;7059:18:13;;;7052:31;7100:19;;3597:57:1;;;;;;;;;719:10:6;-1:-1:-1;;;;;3686:21:1;;;;:62;;-1:-1:-1;3711:37:1;3728:5;719:10:6;4388:162:1;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:1;;7332:2:13;3665:170:1;;;7314:21:13;7371:2;7351:18;;;7344:30;7410:34;7390:18;;;7383:62;7481:31;7461:18;;;7454:59;7530:19;;3665:170:1;7130:425:13;3665:170:1;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;719:10:6;4804:7:1;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:1;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;383:35:12:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;383:35:12;;;;;;;;;;;;-1:-1:-1;;;;;383:35:12;;-1:-1:-1;383:35:12;:::o;4974:149:1:-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:1;;2324:56;;;;-1:-1:-1;;;2324:56:1;;8176:2:13;2324:56:1;;;8158:21:13;8215:2;8195:18;;;8188:30;-1:-1:-1;;;8234:18:13;;;8227:54;8298:18;;2324:56:1;7974:348:13;693:796:12;792:14;:16;;;:14;:16;;;:::i;:::-;;;;-1:-1:-1;;837:14:12;;864:26;870:10;837:14;864:5;:26::i;:::-;919:138;;;;;;;;;;;;;;;;;;;;;;;;1035:10;919:138;;;;-1:-1:-1;903:13:12;;;:4;:13;;;;;;;:154;;:13;;:154;;:13;:154;:::i;:::-;-1:-1:-1;903:154:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;903:154:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;903:154:12;-1:-1:-1;;;;;903:154:12;;;;;;;;;-1:-1:-1;1107:3:12;1092:11;:6;1101:2;1092:11;:::i;:::-;1091:19;;;;:::i;:::-;1070:40;-1:-1:-1;1140:19:12;1181:2;1163:14;1070:40;1176:1;1163:14;:::i;:::-;1162:21;;;;:::i;:::-;1140:43;-1:-1:-1;1235:20:12;1277:2;1259:14;:10;1272:1;1259:14;:::i;:::-;1258:21;;;;:::i;:::-;1386:14;;1378:45;;1235:44;;-1:-1:-1;;;;;;1386:14:12;;1378:45;;;;;1411:11;;1386:14;1378:45;1386:14;1378:45;1411:11;1386:14;1378:45;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1442:15:12;;1434:47;;-1:-1:-1;;;;;1442:15:12;;;;1434:47;;;;;1468:12;;1442:15;1434:47;1442:15;1434:47;1468:12;1442:15;1434:47;;;;;;;;;;;;;;;;;;;;;781:708;;;;693:796;;;:::o;1929:204:1:-;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:73;;;;-1:-1:-1;;;2020:73:1;;11532:2:13;2020:73:1;;;11514:21:13;11571:2;11551:18;;;11544:30;11610:34;11590:18;;;11583:62;-1:-1:-1;;;11661:18:13;;;11654:39;11710:19;;2020:73:1;11330:405:13;2020:73:1;-1:-1:-1;;;;;;2110:16:1;;;;;:9;:16;;;;;;;1929:204::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2633:102:1:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:6;4296:8:1;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:6;5352:7:1;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:1;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:1;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:1:o;4388:162::-;-1:-1:-1;;;;;4508:25:1;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;12443:2:13;2154:73:0::1;::::0;::::1;12425:21:13::0;12482:2;12462:18;;;12455:30;12521:34;12501:18;;;12494:62;-1:-1:-1;;;12572:18:13;;;12565:36;12618:19;;2154:73:0::1;12241:402:13::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;13240:133:1:-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:1;13313:53;;;;-1:-1:-1;;;13313:53:1;;8176:2:13;13313:53:1;;;8158:21:13;8215:2;8195:18;;;8188:30;-1:-1:-1;;;8234:18:13;;;8227:54;8298:18;;13313:53:1;7974:348:13;12572:171:1;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:1;-1:-1:-1;;;;;12646:29:1;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:1;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:1;:7;-1:-1:-1;;;;;7570:16:1;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:1;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:1;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:1:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:1;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:1;;11346:81;;;;-1:-1:-1;;;11346:81:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:1;;11437:65;;;;-1:-1:-1;;;11437:65:1;;13256:2:13;11437:65:1;;;13238:21:13;13295:2;13275:18;;;13268:30;13334:34;13314:18;;;13307:62;-1:-1:-1;;;13385:18:13;;;13378:34;13429:19;;11437:65:1;13054:400:13;11437:65:1;11682:4;-1:-1:-1;;;;;11655:31:1;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:1;;11647:81;;;;-1:-1:-1;;;11647:81:1;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:1;;;;;;-1:-1:-1;;;;;12265:15:1;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:1;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;8925:920::-;-1:-1:-1;;;;;9004:16:1;;8996:61;;;;-1:-1:-1;;;8996:61:1;;13661:2:13;8996:61:1;;;13643:21:13;;;13680:18;;;13673:30;13739:34;13719:18;;;13712:62;13791:18;;8996:61:1;13459:356:13;8996:61:1;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:1;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:1;;14022:2:13;9067:58:1;;;14004:21:13;14061:2;14041:18;;;14034:30;14100;14080:18;;;14073:58;14148:18;;9067:58:1;13820:352:13;9067:58:1;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:1;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:1;;14022:2:13;9271:58:1;;;14004:21:13;14061:2;14041:18;;;14034:30;14100;14080:18;;;14073:58;14148:18;;9271:58:1;13820:352:13;9271:58:1;-1:-1:-1;;;;;9671:13:1;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:1;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;4169:153;;:::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;14379:2:13;1414:68:0;;;14361:21:13;;;14398:18;;;14391:30;14457:34;14437:18;;;14430:62;14509:18;;1414:68:0;14177:356:13;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;12879:277:1:-;12999:8;-1:-1:-1;;;;;12990:17:1;:5;-1:-1:-1;;;;;12990:17:1;;12982:55;;;;-1:-1:-1;;;12982:55:1;;14740:2:13;12982:55:1;;;14722:21:13;14779:2;14759:18;;;14752:30;14818:27;14798:18;;;14791:55;14863:18;;12982:55:1;14538:349:13;12982:55:1;-1:-1:-1;;;;;13047:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:1;;;;;;;;;;13108:41;;722::13;;;13108::1;;695:18:13;13108:41:1;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:1;;;;;;;:::i;447:696:7:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:7;-1:-1:-1;604:41:7;-1:-1:-1;765:28:7;;;781:2;765:28;820:280;-1:-1:-1;;851:5:7;-1:-1:-1;;;985:2:7;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:7;820:280;1064:21;-1:-1:-1;1120:6:7;447:696;-1:-1:-1;;;447:696:7:o;13925:831:1:-;14074:4;-1:-1:-1;;;;;14094:13:1;;1702:19:5;:23;14090:660:1;;14129:71;;-1:-1:-1;;;14129:71:1;;-1:-1:-1;;;;;14129:36:1;;;;;:71;;719:10:6;;14180:4:1;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:1;;;;;;;;-1:-1:-1;;14129:71:1;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:1;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:1;-1:-1:-1;;;14250:51:1;;-1:-1:-1;14243:58:1;;14090:660;-1:-1:-1;14735:4:1;13925:831;;;;;;:::o;10139:916:10:-;10192:7;;-1:-1:-1;;;10267:17:10;;10263:103;;-1:-1:-1;;;10304:17:10;;;-1:-1:-1;10349:2:10;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:10;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:10;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:10;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:10;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:10;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:10:o;196:131:13:-;-1:-1:-1;;;;;;270:32:13;;260:43;;250:71;;317:1;314;307:12;332:245;390:6;443:2;431:9;422:7;418:23;414:32;411:52;;;459:1;456;449:12;411:52;498:9;485:23;517:30;541:5;517:30;:::i;774:250::-;859:1;869:113;883:6;880:1;877:13;869:113;;;959:11;;;953:18;940:11;;;933:39;905:2;898:10;869:113;;;-1:-1:-1;;1016:1:13;998:16;;991:27;774:250::o;1029:271::-;1071:3;1109:5;1103:12;1136:6;1131:3;1124:19;1152:76;1221:6;1214:4;1209:3;1205:14;1198:4;1191:5;1187:16;1152:76;:::i;:::-;1282:2;1261:15;-1:-1:-1;;1257:29:13;1248:39;;;;1289:4;1244:50;;1029:271;-1:-1:-1;;1029:271:13:o;1305:220::-;1454:2;1443:9;1436:21;1417:4;1474:45;1515:2;1504:9;1500:18;1492:6;1474:45;:::i;1530:180::-;1589:6;1642:2;1630:9;1621:7;1617:23;1613:32;1610:52;;;1658:1;1655;1648:12;1610:52;-1:-1:-1;1681:23:13;;1530:180;-1:-1:-1;1530:180:13:o;1923:173::-;1991:20;;-1:-1:-1;;;;;2040:31:13;;2030:42;;2020:70;;2086:1;2083;2076:12;2020:70;1923:173;;;:::o;2101:254::-;2169:6;2177;2230:2;2218:9;2209:7;2205:23;2201:32;2198:52;;;2246:1;2243;2236:12;2198:52;2269:29;2288:9;2269:29;:::i;:::-;2259:39;2345:2;2330:18;;;;2317:32;;-1:-1:-1;;;2101:254:13:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:553::-;2946:3;2935:9;2928:22;2909:4;2973:46;3014:3;3003:9;2999:19;2991:6;2973:46;:::i;:::-;3067:9;3059:6;3055:22;3050:2;3039:9;3035:18;3028:50;3095:33;3121:6;3113;3095:33;:::i;:::-;3159:2;3144:18;;3137:34;;;;-1:-1:-1;;;;;;;3207:32:13;;;;3202:2;3187:18;;;3180:60;3087:41;2693:553;-1:-1:-1;;2693:553:13:o;3251:127::-;3312:10;3307:3;3303:20;3300:1;3293:31;3343:4;3340:1;3333:15;3367:4;3364:1;3357:15;3383:632;3448:5;3478:18;3519:2;3511:6;3508:14;3505:40;;;3525:18;;:::i;:::-;3600:2;3594:9;3568:2;3654:15;;-1:-1:-1;;3650:24:13;;;3676:2;3646:33;3642:42;3630:55;;;3700:18;;;3720:22;;;3697:46;3694:72;;;3746:18;;:::i;:::-;3786:10;3782:2;3775:22;3815:6;3806:15;;3845:6;3837;3830:22;3885:3;3876:6;3871:3;3867:16;3864:25;3861:45;;;3902:1;3899;3892:12;3861:45;3952:6;3947:3;3940:4;3932:6;3928:17;3915:44;4007:1;4000:4;3991:6;3983;3979:19;3975:30;3968:41;;;;3383:632;;;;;:::o;4020:222::-;4063:5;4116:3;4109:4;4101:6;4097:17;4093:27;4083:55;;4134:1;4131;4124:12;4083:55;4156:80;4232:3;4223:6;4210:20;4203:4;4195:6;4191:17;4156:80;:::i;4247:611::-;4344:6;4352;4360;4413:2;4401:9;4392:7;4388:23;4384:32;4381:52;;;4429:1;4426;4419:12;4381:52;4469:9;4456:23;4498:18;4539:2;4531:6;4528:14;4525:34;;;4555:1;4552;4545:12;4525:34;4578:50;4620:7;4611:6;4600:9;4596:22;4578:50;:::i;:::-;4568:60;;4681:2;4670:9;4666:18;4653:32;4637:48;;4710:2;4700:8;4697:16;4694:36;;;4726:1;4723;4716:12;4694:36;;4749:52;4793:7;4782:8;4771:9;4767:24;4749:52;:::i;:::-;4739:62;;;4848:2;4837:9;4833:18;4820:32;4810:42;;4247:611;;;;;:::o;4863:186::-;4922:6;4975:2;4963:9;4954:7;4950:23;4946:32;4943:52;;;4991:1;4988;4981:12;4943:52;5014:29;5033:9;5014:29;:::i;5054:347::-;5119:6;5127;5180:2;5168:9;5159:7;5155:23;5151:32;5148:52;;;5196:1;5193;5186:12;5148:52;5219:29;5238:9;5219:29;:::i;:::-;5209:39;;5298:2;5287:9;5283:18;5270:32;5345:5;5338:13;5331:21;5324:5;5321:32;5311:60;;5367:1;5364;5357:12;5311:60;5390:5;5380:15;;;5054:347;;;;;:::o;5406:667::-;5501:6;5509;5517;5525;5578:3;5566:9;5557:7;5553:23;5549:33;5546:53;;;5595:1;5592;5585:12;5546:53;5618:29;5637:9;5618:29;:::i;:::-;5608:39;;5666:38;5700:2;5689:9;5685:18;5666:38;:::i;:::-;5656:48;;5751:2;5740:9;5736:18;5723:32;5713:42;;5806:2;5795:9;5791:18;5778:32;5833:18;5825:6;5822:30;5819:50;;;5865:1;5862;5855:12;5819:50;5888:22;;5941:4;5933:13;;5929:27;-1:-1:-1;5919:55:13;;5970:1;5967;5960:12;5919:55;5993:74;6059:7;6054:2;6041:16;6036:2;6032;6028:11;5993:74;:::i;:::-;5983:84;;;5406:667;;;;;;;:::o;6078:260::-;6146:6;6154;6207:2;6195:9;6186:7;6182:23;6178:32;6175:52;;;6223:1;6220;6213:12;6175:52;6246:29;6265:9;6246:29;:::i;:::-;6236:39;;6294:38;6328:2;6317:9;6313:18;6294:38;:::i;:::-;6284:48;;6078:260;;;;;:::o;6343:380::-;6422:1;6418:12;;;;6465;;;6486:61;;6540:4;6532:6;6528:17;6518:27;;6486:61;6593:2;6585:6;6582:14;6562:18;6559:38;6556:161;;6639:10;6634:3;6630:20;6627:1;6620:31;6674:4;6671:1;6664:15;6702:4;6699:1;6692:15;6556:161;;6343:380;;;:::o;7560:409::-;7762:2;7744:21;;;7801:2;7781:18;;;7774:30;7840:34;7835:2;7820:18;;7813:62;-1:-1:-1;;;7906:2:13;7891:18;;7884:43;7959:3;7944:19;;7560:409::o;8327:127::-;8388:10;8383:3;8379:20;8376:1;8369:31;8419:4;8416:1;8409:15;8443:4;8440:1;8433:15;8459:135;8498:3;8519:17;;;8516:43;;8539:18;;:::i;:::-;-1:-1:-1;8586:1:13;8575:13;;8459:135::o;8725:545::-;8827:2;8822:3;8819:11;8816:448;;;8863:1;8888:5;8884:2;8877:17;8933:4;8929:2;8919:19;9003:2;8991:10;8987:19;8984:1;8980:27;8974:4;8970:38;9039:4;9027:10;9024:20;9021:47;;;-1:-1:-1;9062:4:13;9021:47;9117:2;9112:3;9108:12;9105:1;9101:20;9095:4;9091:31;9081:41;;9172:82;9190:2;9183:5;9180:13;9172:82;;;9235:17;;;9216:1;9205:13;9172:82;;;9176:3;;;8725:545;;;:::o;9446:1352::-;9572:3;9566:10;9599:18;9591:6;9588:30;9585:56;;;9621:18;;:::i;:::-;9650:97;9740:6;9700:38;9732:4;9726:11;9700:38;:::i;:::-;9694:4;9650:97;:::i;:::-;9802:4;;9866:2;9855:14;;9883:1;9878:663;;;;10585:1;10602:6;10599:89;;;-1:-1:-1;10654:19:13;;;10648:26;10599:89;-1:-1:-1;;9403:1:13;9399:11;;;9395:24;9391:29;9381:40;9427:1;9423:11;;;9378:57;10701:81;;9848:944;;9878:663;8672:1;8665:14;;;8709:4;8696:18;;-1:-1:-1;;9914:20:13;;;10032:236;10046:7;10043:1;10040:14;10032:236;;;10135:19;;;10129:26;10114:42;;10227:27;;;;10195:1;10183:14;;;;10062:19;;10032:236;;;10036:3;10296:6;10287:7;10284:19;10281:201;;;10357:19;;;10351:26;-1:-1:-1;;10440:1:13;10436:14;;;10452:3;10432:24;10428:37;10424:42;10409:58;10394:74;;10281:201;-1:-1:-1;;;;;10528:1:13;10512:14;;;10508:22;10495:36;;-1:-1:-1;9446:1352:13:o;10803:168::-;10876:9;;;10907;;10924:15;;;10918:22;;10904:37;10894:71;;10945:18;;:::i;11108:217::-;11148:1;11174;11164:132;;11218:10;11213:3;11209:20;11206:1;11199:31;11253:4;11250:1;11243:15;11281:4;11278:1;11271:15;11164:132;-1:-1:-1;11310:9:13;;11108:217::o;11740:496::-;11919:3;11957:6;11951:13;11973:66;12032:6;12027:3;12020:4;12012:6;12008:17;11973:66;:::i;:::-;12102:13;;12061:16;;;;12124:70;12102:13;12061:16;12171:4;12159:17;;12124:70;:::i;:::-;12210:20;;11740:496;-1:-1:-1;;;;11740:496:13:o;12648:401::-;12850:2;12832:21;;;12889:2;12869:18;;;12862:30;12928:34;12923:2;12908:18;;12901:62;-1:-1:-1;;;12994:2:13;12979:18;;12972:35;13039:3;13024:19;;12648:401::o;14892:414::-;15094:2;15076:21;;;15133:2;15113:18;;;15106:30;15172:34;15167:2;15152:18;;15145:62;-1:-1:-1;;;15238:2:13;15223:18;;15216:48;15296:3;15281:19;;14892:414::o;15311:489::-;-1:-1:-1;;;;;15580:15:13;;;15562:34;;15632:15;;15627:2;15612:18;;15605:43;15679:2;15664:18;;15657:34;;;15727:3;15722:2;15707:18;;15700:31;;;15505:4;;15748:46;;15774:19;;15766:6;15748:46;:::i;:::-;15740:54;15311:489;-1:-1:-1;;;;;;15311:489:13:o;15805:249::-;15874:6;15927:2;15915:9;15906:7;15902:23;15898:32;15895:52;;;15943:1;15940;15933:12;15895:52;15975:9;15969:16;15994:30;16018:5;15994:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1313800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2623",
								"currentTokenId()": "2308",
								"getApproved(uint256)": "4814",
								"isApprovedForAll(address,address)": "infinite",
								"liquidityWallet()": "2425",
								"mintNFT(string,string,uint256)": "infinite",
								"name()": "infinite",
								"nfts(uint256)": "infinite",
								"owner()": "2420",
								"ownerOf(uint256)": "2649",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "567",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28468",
								"treasuryWallet()": "2426"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 1492,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 1492,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 1492,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 502,
									"end": 685,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 685,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 502,
									"end": 685,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 502,
									"end": 685,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 502,
									"end": 685,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 502,
									"end": 685,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 502,
									"end": 685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 502,
									"end": 685,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 502,
									"end": 685,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "135E539195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "13539195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 600,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 600,
									"end": 634,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 600,
									"end": 634,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 600,
									"end": 634,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 600,
									"end": 634,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 600,
									"end": 634,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 600,
									"end": 634,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 600,
									"end": 634,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 600,
									"end": 634,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 600,
									"end": 634,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 600,
									"end": 634,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 600,
									"end": 634,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 600,
									"end": 634,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 645,
									"end": 659,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 645,
									"end": 677,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 645,
									"end": 677,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 645,
									"end": 677,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 645,
									"end": 677,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 645,
									"end": 677,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 645,
									"end": 677,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 645,
									"end": 677,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 645,
									"end": 677,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 645,
									"end": 677,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 645,
									"end": 677,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 645,
									"end": 677,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 175,
									"end": 1492,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 175,
									"end": 1492,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 494,
									"end": 621,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 494,
									"end": 621,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 555,
									"end": 565,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 550,
									"end": 553,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 546,
									"end": 566,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 543,
									"end": 544,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 567,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 586,
									"end": 590,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 583,
									"end": 584,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 576,
									"end": 591,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 610,
									"end": 614,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 607,
									"end": 608,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 615,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 705,
									"end": 706,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 713,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 701,
									"end": 713,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 701,
									"end": 713,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 701,
									"end": 713,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 748,
									"end": 760,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 748,
									"end": 760,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 748,
									"end": 760,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 769,
									"end": 830,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 815,
									"end": 821,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 811,
									"end": 828,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 801,
									"end": 828,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 801,
									"end": 828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 769,
									"end": 830,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 769,
									"end": 830,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 876,
									"end": 878,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 868,
									"end": 874,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 865,
									"end": 879,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 845,
									"end": 863,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 842,
									"end": 880,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 922,
									"end": 932,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 917,
									"end": 920,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 913,
									"end": 933,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 903,
									"end": 934,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 957,
									"end": 961,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 947,
									"end": 962,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 985,
									"end": 989,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 982,
									"end": 983,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 975,
									"end": 990,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 626,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1137,
									"end": 1682,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1137,
									"end": 1682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1239,
									"end": 1241,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1234,
									"end": 1237,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1231,
									"end": 1242,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1228,
									"end": 1676,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1228,
									"end": 1676,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1228,
									"end": 1676,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1275,
									"end": 1276,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1300,
									"end": 1305,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1298,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1306,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1345,
									"end": 1349,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1331,
									"end": 1350,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 1415,
									"end": 1417,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 1413,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1399,
									"end": 1418,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1396,
									"end": 1397,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 1392,
									"end": 1419,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1386,
									"end": 1390,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1382,
									"end": 1420,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1451,
									"end": 1455,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1439,
									"end": 1449,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1436,
									"end": 1456,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1433,
									"end": 1480,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1433,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1433,
									"end": 1480,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1474,
									"end": 1478,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1433,
									"end": 1480,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1433,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1529,
									"end": 1531,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1524,
									"end": 1527,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1520,
									"end": 1532,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1518,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 1513,
									"end": 1533,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1507,
									"end": 1511,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1503,
									"end": 1534,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1493,
									"end": 1534,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1493,
									"end": 1534,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1666,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1602,
									"end": 1604,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1595,
									"end": 1600,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1592,
									"end": 1605,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1666,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1666,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1584,
									"end": 1666,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1647,
									"end": 1664,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1647,
									"end": 1664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1647,
									"end": 1664,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1628,
									"end": 1629,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1617,
									"end": 1630,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1666,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1666,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1666,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1584,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1588,
									"end": 1591,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1588,
									"end": 1591,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1588,
									"end": 1591,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1228,
									"end": 1676,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1228,
									"end": 1676,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1137,
									"end": 1682,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1137,
									"end": 1682,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1137,
									"end": 1682,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1137,
									"end": 1682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1858,
									"end": 3210,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1858,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1978,
									"end": 1988,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1978,
									"end": 1988,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2000,
									"end": 2030,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2000,
									"end": 2030,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1997,
									"end": 2053,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1997,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 1997,
									"end": 2053,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2033,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 2033,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 2033,
									"end": 2051,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2033,
									"end": 2051,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 2033,
									"end": 2051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2062,
									"end": 2159,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 2152,
									"end": 2158,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2112,
									"end": 2150,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 2144,
									"end": 2148,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2138,
									"end": 2149,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2112,
									"end": 2150,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2112,
									"end": 2150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2112,
									"end": 2150,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 2112,
									"end": 2150,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2106,
									"end": 2110,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2062,
									"end": 2159,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2062,
									"end": 2159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2062,
									"end": 2159,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 2062,
									"end": 2159,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2214,
									"end": 2218,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2214,
									"end": 2218,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2278,
									"end": 2280,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2267,
									"end": 2281,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2267,
									"end": 2281,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2295,
									"end": 2296,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2290,
									"end": 2953,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2290,
									"end": 2953,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 2290,
									"end": 2953,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 2290,
									"end": 2953,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2997,
									"end": 2998,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3014,
									"end": 3020,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3011,
									"end": 3100,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3011,
									"end": 3100,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 3011,
									"end": 3100,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3066,
									"end": 3085,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3066,
									"end": 3085,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3066,
									"end": 3085,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3060,
									"end": 3086,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3011,
									"end": 3100,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 3011,
									"end": 3100,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1811,
									"end": 1822,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1811,
									"end": 1822,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1811,
									"end": 1822,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 1831,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1803,
									"end": 1832,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1793,
									"end": 1833,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1839,
									"end": 1840,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1835,
									"end": 1846,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1835,
									"end": 1846,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1835,
									"end": 1846,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1790,
									"end": 1847,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3113,
									"end": 3194,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3113,
									"end": 3194,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2260,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 2260,
									"end": 3204,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2290,
									"end": 2953,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 2290,
									"end": 2953,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1084,
									"end": 1085,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1121,
									"end": 1125,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1126,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1108,
									"end": 1126,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2326,
									"end": 2346,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2326,
									"end": 2346,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2326,
									"end": 2346,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2444,
									"end": 2680,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 2444,
									"end": 2680,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2458,
									"end": 2465,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2455,
									"end": 2456,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2452,
									"end": 2466,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2444,
									"end": 2680,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2444,
									"end": 2680,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 2444,
									"end": 2680,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2547,
									"end": 2566,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2547,
									"end": 2566,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2547,
									"end": 2566,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2526,
									"end": 2568,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2526,
									"end": 2568,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2639,
									"end": 2666,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 2639,
									"end": 2666,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2639,
									"end": 2666,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2639,
									"end": 2666,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 2607,
									"end": 2608,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2595,
									"end": 2609,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2595,
									"end": 2609,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2595,
									"end": 2609,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2595,
									"end": 2609,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2444,
									"end": 2680,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 2444,
									"end": 2680,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2444,
									"end": 2680,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 2444,
									"end": 2680,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2448,
									"end": 2451,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2708,
									"end": 2714,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2699,
									"end": 2706,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2696,
									"end": 2715,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2693,
									"end": 2894,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2693,
									"end": 2894,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 2693,
									"end": 2894,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2769,
									"end": 2788,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 2769,
									"end": 2788,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2769,
									"end": 2788,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2763,
									"end": 2789,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2852,
									"end": 2853,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2848,
									"end": 2862,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2848,
									"end": 2862,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2848,
									"end": 2862,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2864,
									"end": 2867,
									"name": "PUSH",
									"source": 13,
									"value": "F8"
								},
								{
									"begin": 2844,
									"end": 2868,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2840,
									"end": 2877,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 2836,
									"end": 2878,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2821,
									"end": 2879,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2806,
									"end": 2880,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2806,
									"end": 2880,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2693,
									"end": 2894,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 2693,
									"end": 2894,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2940,
									"end": 2941,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2924,
									"end": 2938,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2924,
									"end": 2938,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2924,
									"end": 2938,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2920,
									"end": 2942,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2907,
									"end": 2943,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2907,
									"end": 2943,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1858,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1858,
									"end": 3210,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1858,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 175,
									"end": 1492,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 1492,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 175,
									"end": 1492,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 1492,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 1492,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 175,
									"end": 1492,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 1492,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7a2a48ac3e8e9e8f856ab9c4de71d20a599698eebac52ce07f40469acdeaabf64736f6c63430008120033",
									".code": [
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "64B30907"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "C87B56DD"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "D4698016"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "64B30907"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "265AA621"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "4626402B"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "6352211E"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "9A9B7B"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "81812FC"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 175,
											"end": 1492,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 220,
											"end": 249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 220,
											"end": 249,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 220,
											"end": 249,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 220,
											"end": 249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 249,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 220,
											"end": 249,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 220,
											"end": 249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 249,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 220,
											"end": 249,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 747,
											"end": 761,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 747,
											"end": 761,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 740,
											"end": 762,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 722,
											"end": 763,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 722,
											"end": 763,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 582,
											"end": 769,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1879,
											"end": 1911,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1879,
											"end": 1911,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1879,
											"end": 1911,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1912,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1715,
											"end": 1918,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4612,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 383,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 383,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 383,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4974,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 464,
											"end": 493,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 464,
											"end": 493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 464,
											"end": 493,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 464,
											"end": 493,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 464,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 464,
											"end": 493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 464,
											"end": 493,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 464,
											"end": 493,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 464,
											"end": 493,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 693,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 693,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 427,
											"end": 457,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 427,
											"end": 457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 427,
											"end": 457,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 427,
											"end": 457,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 427,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 427,
											"end": 457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 427,
											"end": 457,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 427,
											"end": 457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 427,
											"end": 457,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6932,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6933,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6969,
											"end": 6971,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 6949,
											"end": 6967,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6949,
											"end": 6967,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 6967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6942,
											"end": 6972,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7008,
											"end": 7042,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7043,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7059,
											"end": 7077,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7059,
											"end": 7077,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7059,
											"end": 7077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7052,
											"end": 7083,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7100,
											"end": 7119,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 7100,
											"end": 7119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7332,
											"end": 7334,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7314,
											"end": 7335,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7371,
											"end": 7373,
											"name": "PUSH",
											"source": 13,
											"value": "3D"
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7344,
											"end": 7374,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7410,
											"end": 7444,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 7390,
											"end": 7408,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7390,
											"end": 7408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7390,
											"end": 7408,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7383,
											"end": 7445,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7481,
											"end": 7512,
											"name": "PUSH",
											"source": 13,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7454,
											"end": 7513,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7530,
											"end": 7549,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 7530,
											"end": 7549,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7130,
											"end": 7555,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4612,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4804,
											"end": 4811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4771,
											"end": 4812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4771,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4763,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4763,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 4891,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4873,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 383,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 383,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 383,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 383,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 383,
											"end": 418,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 383,
											"end": 418,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4974,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5077,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8179,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8215,
											"end": 8217,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 8195,
											"end": 8213,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8195,
											"end": 8213,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8195,
											"end": 8213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8218,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8234,
											"end": 8252,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8234,
											"end": 8252,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8234,
											"end": 8252,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8227,
											"end": 8281,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7974,
											"end": 8322,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 792,
											"end": 806,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 792,
											"end": 808,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 792,
											"end": 808,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 792,
											"end": 808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 792,
											"end": 806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 792,
											"end": 808,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 792,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 792,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 792,
											"end": 808,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 792,
											"end": 808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 792,
											"end": 808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 792,
											"end": 808,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 792,
											"end": 808,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 837,
											"end": 851,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 837,
											"end": 851,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 864,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 870,
											"end": 880,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 837,
											"end": 851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 864,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 864,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 864,
											"end": 890,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 864,
											"end": 890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1045,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 916,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 903,
											"end": 916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 903,
											"end": 916,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 903,
											"end": 916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 903,
											"end": 916,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 903,
											"end": 916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 903,
											"end": 916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 903,
											"end": 916,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 903,
											"end": 916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 903,
											"end": 916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 903,
											"end": 1057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 903,
											"end": 1057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 903,
											"end": 1057,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1092,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1092,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1092,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1092,
											"end": 1103,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1092,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1091,
											"end": 1110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1091,
											"end": 1110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1110,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1091,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 1110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1140,
											"end": 1159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1163,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1070,
											"end": 1110,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1177,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1163,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1163,
											"end": 1177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1163,
											"end": 1177,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1163,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1162,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1162,
											"end": 1183,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1162,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1162,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1162,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1162,
											"end": 1183,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1162,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1140,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1255,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1279,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1259,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1258,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1258,
											"end": 1279,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1258,
											"end": 1279,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1258,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1258,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1258,
											"end": 1279,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1258,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1400,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1386,
											"end": 1400,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1235,
											"end": 1279,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1235,
											"end": 1279,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1400,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1411,
											"end": 1422,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1411,
											"end": 1422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1400,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1400,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1411,
											"end": 1422,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1400,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1378,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1442,
											"end": 1457,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1442,
											"end": 1457,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1442,
											"end": 1457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1442,
											"end": 1457,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1442,
											"end": 1457,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1442,
											"end": 1457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1480,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1480,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1442,
											"end": 1457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1442,
											"end": 1457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1480,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1442,
											"end": 1457,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 781,
											"end": 1489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 781,
											"end": 1489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 781,
											"end": 1489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 781,
											"end": 1489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 693,
											"end": 1489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 693,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11532,
											"end": 11534,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11535,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11571,
											"end": 11573,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 11551,
											"end": 11569,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11551,
											"end": 11569,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11551,
											"end": 11569,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11544,
											"end": 11574,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11610,
											"end": 11644,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 11590,
											"end": 11608,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11590,
											"end": 11608,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11590,
											"end": 11608,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11583,
											"end": 11645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11661,
											"end": 11679,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11661,
											"end": 11679,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11661,
											"end": 11679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11654,
											"end": 11693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11729,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 11710,
											"end": 11729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 11330,
											"end": 11735,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5352,
											"end": 5359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5319,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5319,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5311,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 5311,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5434,
											"end": 5438,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5442,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5420,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12443,
											"end": 12445,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12482,
											"end": 12484,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 12462,
											"end": 12480,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12462,
											"end": 12480,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12462,
											"end": 12480,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12455,
											"end": 12485,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12521,
											"end": 12555,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12494,
											"end": 12556,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12565,
											"end": 12601,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12618,
											"end": 12637,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 12618,
											"end": 12637,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12241,
											"end": 12643,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 13240,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8179,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8215,
											"end": 8217,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 8195,
											"end": 8213,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8195,
											"end": 8213,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8195,
											"end": 8213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8218,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8234,
											"end": 8252,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8234,
											"end": 8252,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8234,
											"end": 8252,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8227,
											"end": 8281,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7974,
											"end": 8322,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12675,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 12646,
											"end": 12670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 12699,
											"end": 12722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 12699,
											"end": 12722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12736,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12572,
											"end": 12743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12572,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7497,
											"end": 7501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 7529,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7529,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7607,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7621,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 7590,
											"end": 7622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7638,
											"end": 7645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7626,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7657,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7570,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7658,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7404,
											"end": 7665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 11257,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 11369,
											"end": 11376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 11354,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 11354,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11385,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 11346,
											"end": 11427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 11346,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11445,
											"end": 11461,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13256,
											"end": 13258,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13238,
											"end": 13259,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13295,
											"end": 13297,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13275,
											"end": 13293,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13275,
											"end": 13293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13275,
											"end": 13293,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13268,
											"end": 13298,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13334,
											"end": 13368,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13307,
											"end": 13369,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13385,
											"end": 13403,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13385,
											"end": 13403,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13385,
											"end": 13403,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13378,
											"end": 13412,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13429,
											"end": 13448,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13429,
											"end": 13448,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 13054,
											"end": 13454,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 11437,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11682,
											"end": 11686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 11670,
											"end": 11677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 11655,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11655,
											"end": 11686,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 11647,
											"end": 11728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 11647,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11812,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11821,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12274,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12285,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12312,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12344,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12353,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12374,
											"end": 12401,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8925,
											"end": 9845,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8925,
											"end": 9845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9004,
											"end": 9020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9004,
											"end": 9020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13661,
											"end": 13663,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13643,
											"end": 13664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13643,
											"end": 13664,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13643,
											"end": 13664,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 13698,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13680,
											"end": 13698,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 13698,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13673,
											"end": 13703,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13739,
											"end": 13773,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 13719,
											"end": 13737,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13719,
											"end": 13737,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13719,
											"end": 13737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13712,
											"end": 13774,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13791,
											"end": 13809,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13791,
											"end": 13809,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 13459,
											"end": 13815,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 8996,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14004,
											"end": 14025,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14061,
											"end": 14063,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14034,
											"end": 14064,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14100,
											"end": 14130,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14073,
											"end": 14131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 13820,
											"end": 14172,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 9067,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7239,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14004,
											"end": 14025,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14061,
											"end": 14063,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14034,
											"end": 14064,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14100,
											"end": 14130,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14073,
											"end": 14131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14148,
											"end": 14166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 13820,
											"end": 14172,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 9271,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9680,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9717,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9731,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9725,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9780,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9747,
											"end": 9780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9780,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14381,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14361,
											"end": 14382,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14361,
											"end": 14382,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14361,
											"end": 14382,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14398,
											"end": 14416,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14398,
											"end": 14416,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14398,
											"end": 14416,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14391,
											"end": 14421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14457,
											"end": 14491,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14437,
											"end": 14455,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14437,
											"end": 14455,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14437,
											"end": 14455,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14430,
											"end": 14492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14509,
											"end": 14527,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14509,
											"end": 14527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 14177,
											"end": 14533,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12999,
											"end": 13007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12990,
											"end": 12995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 14742,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14722,
											"end": 14743,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14779,
											"end": 14781,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 14759,
											"end": 14777,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14759,
											"end": 14777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14759,
											"end": 14777,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14752,
											"end": 14782,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14818,
											"end": 14845,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 14798,
											"end": 14816,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14798,
											"end": 14816,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14798,
											"end": 14816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14791,
											"end": 14846,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14863,
											"end": 14881,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14863,
											"end": 14881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 14538,
											"end": 14887,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 12982,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13065,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13072,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13082,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13093,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 722,
											"end": 763,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 722,
											"end": 763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 722,
											"end": 763,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 695,
											"end": 713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13108,
											"end": 13149,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6326,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6448,
											"end": 6452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6438,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6438,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6517,
											"end": 6524,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6530,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6484,
											"end": 6531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 6484,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6476,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 851,
											"end": 856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 974,
											"end": 988,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14094,
											"end": 14107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 14129,
											"end": 14165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14180,
											"end": 14184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14186,
											"end": 14193,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14186,
											"end": 14193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14195,
											"end": 14199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 14129,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 14129,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14367,
											"end": 14373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14367,
											"end": 14380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14384,
											"end": 14385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14367,
											"end": 14385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14409,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 14409,
											"end": 14469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 14363,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14636,
											"end": 14642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14630,
											"end": 14643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14621,
											"end": 14627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14617,
											"end": 14619,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14613,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14606,
											"end": 14644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 14125,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 14243,
											"end": 14301,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 14090,
											"end": 14750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14735,
											"end": 14739,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 196,
											"end": 327,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 196,
											"end": 327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 270,
											"end": 302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 270,
											"end": 302,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 260,
											"end": 303,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 260,
											"end": 303,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 250,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 250,
											"end": 321,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 332,
											"end": 577,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 332,
											"end": 577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 390,
											"end": 396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 445,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 440,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 422,
											"end": 429,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 418,
											"end": 441,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 414,
											"end": 446,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 411,
											"end": 463,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 411,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 411,
											"end": 463,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 459,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 457,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 449,
											"end": 461,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 411,
											"end": 463,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 411,
											"end": 463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 498,
											"end": 507,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 485,
											"end": 508,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 517,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 541,
											"end": 546,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 517,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 517,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 774,
											"end": 1024,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 774,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 859,
											"end": 860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 982,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 869,
											"end": 982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 889,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 880,
											"end": 881,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 877,
											"end": 890,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 869,
											"end": 982,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 869,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 869,
											"end": 982,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 959,
											"end": 970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 959,
											"end": 970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 959,
											"end": 970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 953,
											"end": 971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 940,
											"end": 951,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 940,
											"end": 951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 940,
											"end": 951,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 933,
											"end": 972,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 905,
											"end": 907,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 869,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 869,
											"end": 982,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 869,
											"end": 982,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 869,
											"end": 982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1017,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1014,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 998,
											"end": 1014,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 991,
											"end": 1018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 774,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1029,
											"end": 1300,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 1029,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1071,
											"end": 1074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1114,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1103,
											"end": 1115,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1131,
											"end": 1134,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1124,
											"end": 1143,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 1221,
											"end": 1227,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1214,
											"end": 1218,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1209,
											"end": 1212,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1219,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1198,
											"end": 1202,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1196,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 1152,
											"end": 1228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1228,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 1152,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1261,
											"end": 1276,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1257,
											"end": 1286,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1287,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1287,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1287,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1289,
											"end": 1293,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1294,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1244,
											"end": 1294,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1029,
											"end": 1300,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1029,
											"end": 1300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1525,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1457,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1417,
											"end": 1421,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1513,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1474,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 1474,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1530,
											"end": 1710,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1530,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1595,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1644,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1639,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1621,
											"end": 1628,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1617,
											"end": 1640,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1613,
											"end": 1645,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1610,
											"end": 1662,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1610,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1610,
											"end": 1662,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1656,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1648,
											"end": 1660,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1610,
											"end": 1662,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1610,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1681,
											"end": 1704,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1704,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1530,
											"end": 1710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1530,
											"end": 1710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1923,
											"end": 2096,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 1923,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2011,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1991,
											"end": 2011,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2030,
											"end": 2072,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2030,
											"end": 2072,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2020,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 2020,
											"end": 2090,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2084,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2076,
											"end": 2088,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2020,
											"end": 2090,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 2020,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1923,
											"end": 2096,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1923,
											"end": 2096,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1923,
											"end": 2096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1923,
											"end": 2096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2355,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 2101,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2230,
											"end": 2232,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2209,
											"end": 2216,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2201,
											"end": 2233,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2250,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 2198,
											"end": 2250,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2247,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2244,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2248,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2250,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 2198,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2269,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2269,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 2269,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2269,
											"end": 2298,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2269,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2259,
											"end": 2298,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2348,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2348,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2348,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2330,
											"end": 2348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2349,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2349,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2564,
											"end": 2573,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 2545,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 2593,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 3246,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2693,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2946,
											"end": 2949,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2935,
											"end": 2944,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2950,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2909,
											"end": 2913,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2999,
											"end": 3018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 2973,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 3019,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2973,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3067,
											"end": 3076,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3059,
											"end": 3065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3077,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3039,
											"end": 3048,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3035,
											"end": 3053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3028,
											"end": 3078,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3121,
											"end": 3127,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 3095,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3159,
											"end": 3161,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3162,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3144,
											"end": 3162,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3137,
											"end": 3171,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3137,
											"end": 3171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3137,
											"end": 3171,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3137,
											"end": 3171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3207,
											"end": 3239,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3239,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3239,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3239,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3202,
											"end": 3204,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3187,
											"end": 3205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3187,
											"end": 3205,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3187,
											"end": 3205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3240,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3087,
											"end": 3128,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 3246,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2693,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3378,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 3251,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3312,
											"end": 3322,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3303,
											"end": 3323,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3300,
											"end": 3301,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3347,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3340,
											"end": 3341,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3333,
											"end": 3348,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3371,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 4015,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 3383,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3496,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3521,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3522,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3505,
											"end": 3545,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3505,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3505,
											"end": 3545,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 3525,
											"end": 3543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3568,
											"end": 3570,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3654,
											"end": 3669,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3654,
											"end": 3669,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3650,
											"end": 3674,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3674,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3674,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3676,
											"end": 3678,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 3646,
											"end": 3679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3684,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3685,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3685,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3685,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3742,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3697,
											"end": 3743,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3694,
											"end": 3766,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3694,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3694,
											"end": 3766,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 3746,
											"end": 3764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3786,
											"end": 3796,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3775,
											"end": 3797,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 3821,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3845,
											"end": 3851,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3837,
											"end": 3843,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3830,
											"end": 3852,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3888,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3871,
											"end": 3874,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3883,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3906,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3861,
											"end": 3906,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 3903,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3899,
											"end": 3900,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3904,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3906,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3861,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3952,
											"end": 3958,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3947,
											"end": 3950,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3932,
											"end": 3938,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3945,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3915,
											"end": 3959,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4008,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4004,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 3997,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 3989,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3979,
											"end": 3998,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3975,
											"end": 4005,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 4015,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 4015,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 4015,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 4015,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 4015,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 4015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4242,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 4020,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4119,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4109,
											"end": 4113,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4101,
											"end": 4107,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4120,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4134,
											"end": 4135,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4132,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4156,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 4232,
											"end": 4235,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4229,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4230,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4207,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4208,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4156,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 4156,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4858,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 4247,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4344,
											"end": 4350,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4366,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4401,
											"end": 4410,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4388,
											"end": 4411,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4416,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4381,
											"end": 4433,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4381,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 4381,
											"end": 4433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4429,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4427,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4431,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4381,
											"end": 4433,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 4381,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4478,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4456,
											"end": 4479,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4498,
											"end": 4516,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4539,
											"end": 4541,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4542,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4556,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4553,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4545,
											"end": 4557,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4525,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4578,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4578,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 4578,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4578,
											"end": 4628,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4578,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4568,
											"end": 4628,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4568,
											"end": 4628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4679,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 4685,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4685,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4710,
											"end": 4712,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4700,
											"end": 4708,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4713,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4694,
											"end": 4730,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4694,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4694,
											"end": 4730,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4716,
											"end": 4728,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4694,
											"end": 4730,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4694,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4694,
											"end": 4730,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4749,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4793,
											"end": 4800,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4790,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4767,
											"end": 4791,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4749,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 4749,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4749,
											"end": 4801,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4749,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4801,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4850,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4846,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4820,
											"end": 4852,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4810,
											"end": 4852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4810,
											"end": 4852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4858,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4858,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4858,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4863,
											"end": 5049,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 4863,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4928,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4977,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 4972,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 4961,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4950,
											"end": 4973,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4978,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4943,
											"end": 4995,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4943,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4943,
											"end": 4995,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 4992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4989,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4943,
											"end": 4995,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4943,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 5033,
											"end": 5042,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5014,
											"end": 5043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5401,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 5054,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5125,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5127,
											"end": 5133,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5182,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5168,
											"end": 5177,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5159,
											"end": 5166,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5155,
											"end": 5178,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5151,
											"end": 5183,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5148,
											"end": 5200,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5148,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 5148,
											"end": 5200,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5196,
											"end": 5197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5198,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5148,
											"end": 5200,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 5148,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5219,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5238,
											"end": 5247,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5219,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5219,
											"end": 5248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5219,
											"end": 5248,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5219,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5209,
											"end": 5248,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5209,
											"end": 5248,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5296,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5301,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5302,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5350,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5338,
											"end": 5351,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5331,
											"end": 5352,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5324,
											"end": 5329,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5321,
											"end": 5353,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5311,
											"end": 5371,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5367,
											"end": 5368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5365,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 5371,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5311,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5390,
											"end": 5395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5380,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5401,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5401,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 6073,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 5406,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5517,
											"end": 5523,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5531,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5578,
											"end": 5581,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5566,
											"end": 5575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5557,
											"end": 5564,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5553,
											"end": 5576,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5549,
											"end": 5582,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5595,
											"end": 5596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5593,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5585,
											"end": 5597,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 5637,
											"end": 5646,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5618,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5647,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 5618,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5608,
											"end": 5647,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5608,
											"end": 5647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5666,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 5700,
											"end": 5702,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5689,
											"end": 5698,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5685,
											"end": 5703,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5666,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5666,
											"end": 5704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5666,
											"end": 5704,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 5666,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5656,
											"end": 5704,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5656,
											"end": 5704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5753,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5740,
											"end": 5749,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5736,
											"end": 5754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5723,
											"end": 5755,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5713,
											"end": 5755,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5713,
											"end": 5755,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5806,
											"end": 5808,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5795,
											"end": 5804,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5809,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5778,
											"end": 5810,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5825,
											"end": 5831,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5822,
											"end": 5852,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5819,
											"end": 5869,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5819,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5819,
											"end": 5869,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5862,
											"end": 5863,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5855,
											"end": 5867,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5819,
											"end": 5869,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5819,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5888,
											"end": 5910,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5888,
											"end": 5910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5941,
											"end": 5945,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5933,
											"end": 5946,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5946,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5929,
											"end": 5956,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5919,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5919,
											"end": 5974,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5970,
											"end": 5971,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 5968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5960,
											"end": 5972,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5919,
											"end": 5974,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5919,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 6059,
											"end": 6066,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6056,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6036,
											"end": 6038,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6032,
											"end": 6034,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6028,
											"end": 6039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 5993,
											"end": 6067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6067,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5993,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5983,
											"end": 6067,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5983,
											"end": 6067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5983,
											"end": 6067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 6073,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 6073,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 6073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 6073,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 6073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 6073,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 6073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 6073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6338,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 6078,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6160,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6207,
											"end": 6209,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6195,
											"end": 6204,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6193,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6182,
											"end": 6205,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6210,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6227,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 6175,
											"end": 6227,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6224,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6227,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 6175,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6246,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 6265,
											"end": 6274,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6246,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6246,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6246,
											"end": 6275,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 6246,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6275,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6294,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 6328,
											"end": 6330,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6326,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6313,
											"end": 6331,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6294,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6294,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6294,
											"end": 6332,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 6294,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6284,
											"end": 6332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6284,
											"end": 6332,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6338,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6338,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6338,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6723,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 6343,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6422,
											"end": 6423,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6418,
											"end": 6430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6418,
											"end": 6430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6418,
											"end": 6430,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6418,
											"end": 6430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6477,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6477,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6486,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 6486,
											"end": 6547,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 6532,
											"end": 6538,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 6545,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 6545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6486,
											"end": 6547,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 6486,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6593,
											"end": 6595,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6596,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6559,
											"end": 6597,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 6556,
											"end": 6717,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6639,
											"end": 6649,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 6634,
											"end": 6637,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6627,
											"end": 6628,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6620,
											"end": 6651,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 6671,
											"end": 6672,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6664,
											"end": 6679,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6702,
											"end": 6706,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6699,
											"end": 6700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6707,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6717,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 6556,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6723,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6723,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7560,
											"end": 7969,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7560,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7762,
											"end": 7764,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7744,
											"end": 7765,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7744,
											"end": 7765,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7744,
											"end": 7765,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "PUSH",
											"source": 13,
											"value": "2D"
										},
										{
											"begin": 7781,
											"end": 7799,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7781,
											"end": 7799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7781,
											"end": 7799,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7774,
											"end": 7804,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7840,
											"end": 7874,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 7835,
											"end": 7837,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7820,
											"end": 7838,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7820,
											"end": 7838,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7813,
											"end": 7875,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7906,
											"end": 7908,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7884,
											"end": 7927,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 7962,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7944,
											"end": 7963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7944,
											"end": 7963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7560,
											"end": 7969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8327,
											"end": 8454,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 8327,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8388,
											"end": 8398,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 8383,
											"end": 8386,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 8379,
											"end": 8399,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8400,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8419,
											"end": 8423,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 8416,
											"end": 8417,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8409,
											"end": 8424,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8443,
											"end": 8447,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8433,
											"end": 8448,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8459,
											"end": 8594,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 8459,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8498,
											"end": 8501,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8519,
											"end": 8536,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8519,
											"end": 8536,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8519,
											"end": 8536,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8516,
											"end": 8559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 8516,
											"end": 8559,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 8539,
											"end": 8557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8586,
											"end": 8587,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8459,
											"end": 8594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8725,
											"end": 9270,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 8725,
											"end": 9270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8827,
											"end": 8829,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8822,
											"end": 8825,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8819,
											"end": 8830,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8816,
											"end": 9264,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8816,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 8816,
											"end": 9264,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8863,
											"end": 8864,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8893,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 8886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8877,
											"end": 8894,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8933,
											"end": 8937,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8929,
											"end": 8931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8919,
											"end": 8938,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 9003,
											"end": 9005,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8991,
											"end": 9001,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8987,
											"end": 9006,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8984,
											"end": 8985,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 8980,
											"end": 9007,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 8974,
											"end": 8978,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8970,
											"end": 9008,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9039,
											"end": 9043,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9027,
											"end": 9037,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9024,
											"end": 9044,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 9021,
											"end": 9068,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9062,
											"end": 9066,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9068,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 9021,
											"end": 9068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9117,
											"end": 9119,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9112,
											"end": 9115,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9108,
											"end": 9120,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9105,
											"end": 9106,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 9095,
											"end": 9099,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9091,
											"end": 9122,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 9122,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 9122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9172,
											"end": 9254,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 9172,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9190,
											"end": 9192,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9183,
											"end": 9188,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9180,
											"end": 9193,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9172,
											"end": 9254,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9172,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 9172,
											"end": 9254,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 9216,
											"end": 9217,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9205,
											"end": 9218,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9172,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 9172,
											"end": 9254,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9172,
											"end": 9254,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 9172,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8725,
											"end": 9270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8725,
											"end": 9270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8725,
											"end": 9270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8725,
											"end": 9270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9446,
											"end": 10798,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 9446,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9572,
											"end": 9575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9566,
											"end": 9576,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9591,
											"end": 9597,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9588,
											"end": 9618,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9585,
											"end": 9641,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9585,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9585,
											"end": 9641,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 9621,
											"end": 9639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9650,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 9740,
											"end": 9746,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9700,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 9732,
											"end": 9736,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9726,
											"end": 9737,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9700,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 9700,
											"end": 9738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9700,
											"end": 9738,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 9700,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9694,
											"end": 9698,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9650,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 9650,
											"end": 9747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9650,
											"end": 9747,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 9650,
											"end": 9747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9802,
											"end": 9806,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9802,
											"end": 9806,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9866,
											"end": 9868,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9855,
											"end": 9869,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9855,
											"end": 9869,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9883,
											"end": 9884,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9878,
											"end": 10541,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9878,
											"end": 10541,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 9878,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 9878,
											"end": 10541,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10585,
											"end": 10586,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10602,
											"end": 10608,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10688,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 10599,
											"end": 10688,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10654,
											"end": 10673,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10654,
											"end": 10673,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10654,
											"end": 10673,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10648,
											"end": 10674,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10688,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 10599,
											"end": 10688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9403,
											"end": 9404,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 9399,
											"end": 9410,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9399,
											"end": 9410,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9399,
											"end": 9410,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9419,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 9391,
											"end": 9420,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 9381,
											"end": 9421,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9427,
											"end": 9428,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9423,
											"end": 9434,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9423,
											"end": 9434,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9423,
											"end": 9434,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9378,
											"end": 9435,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 10701,
											"end": 10782,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10701,
											"end": 10782,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 9848,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 9848,
											"end": 10792,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9878,
											"end": 10541,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 9878,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8673,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8665,
											"end": 8679,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8665,
											"end": 8679,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8665,
											"end": 8679,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8709,
											"end": 8713,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8696,
											"end": 8714,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8696,
											"end": 8714,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9914,
											"end": 9934,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10268,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10032,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10046,
											"end": 10053,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10043,
											"end": 10044,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10054,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10268,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 10032,
											"end": 10268,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10135,
											"end": 10154,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10135,
											"end": 10154,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10135,
											"end": 10154,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10129,
											"end": 10155,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10114,
											"end": 10156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10114,
											"end": 10156,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 10227,
											"end": 10254,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10227,
											"end": 10254,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10227,
											"end": 10254,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10227,
											"end": 10254,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10195,
											"end": 10196,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10183,
											"end": 10197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10183,
											"end": 10197,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10183,
											"end": 10197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10183,
											"end": 10197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10062,
											"end": 10081,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10062,
											"end": 10081,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10032,
											"end": 10268,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10268,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 10032,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10036,
											"end": 10039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10296,
											"end": 10302,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10287,
											"end": 10294,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10303,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10281,
											"end": 10482,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10281,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 10281,
											"end": 10482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10357,
											"end": 10376,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10357,
											"end": 10376,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10357,
											"end": 10376,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10351,
											"end": 10377,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10440,
											"end": 10441,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10436,
											"end": 10450,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10436,
											"end": 10450,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10436,
											"end": 10450,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10452,
											"end": 10455,
											"name": "PUSH",
											"source": 13,
											"value": "F8"
										},
										{
											"begin": 10432,
											"end": 10456,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10428,
											"end": 10465,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 10424,
											"end": 10466,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 10409,
											"end": 10467,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10394,
											"end": 10468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10394,
											"end": 10468,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 10281,
											"end": 10482,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 10281,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10528,
											"end": 10529,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10512,
											"end": 10526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10512,
											"end": 10526,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10512,
											"end": 10526,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10508,
											"end": 10530,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10531,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10531,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9446,
											"end": 10798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10803,
											"end": 10971,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 10803,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10876,
											"end": 10885,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10876,
											"end": 10885,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10876,
											"end": 10885,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10916,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10916,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10918,
											"end": 10940,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10918,
											"end": 10940,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 10904,
											"end": 10941,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 10894,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 10894,
											"end": 10965,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 10945,
											"end": 10963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11108,
											"end": 11325,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 11108,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11148,
											"end": 11149,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11174,
											"end": 11175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11164,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 11164,
											"end": 11296,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11218,
											"end": 11228,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 11213,
											"end": 11216,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 11209,
											"end": 11229,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11207,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11199,
											"end": 11230,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11253,
											"end": 11257,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 11250,
											"end": 11251,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11243,
											"end": 11258,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 11285,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11278,
											"end": 11279,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11271,
											"end": 11286,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11164,
											"end": 11296,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 11164,
											"end": 11296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11310,
											"end": 11319,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 11310,
											"end": 11319,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11108,
											"end": 11325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11740,
											"end": 12236,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 11740,
											"end": 12236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11919,
											"end": 11922,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11957,
											"end": 11963,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11951,
											"end": 11964,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 12032,
											"end": 12038,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12027,
											"end": 12030,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12020,
											"end": 12024,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12012,
											"end": 12018,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12008,
											"end": 12025,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 11973,
											"end": 12039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12039,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 11973,
											"end": 12039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12102,
											"end": 12115,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12102,
											"end": 12115,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12061,
											"end": 12077,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12061,
											"end": 12077,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12061,
											"end": 12077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12061,
											"end": 12077,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 12102,
											"end": 12115,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12061,
											"end": 12077,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12171,
											"end": 12175,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12159,
											"end": 12176,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12159,
											"end": 12176,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 12124,
											"end": 12194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12210,
											"end": 12230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12210,
											"end": 12230,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11740,
											"end": 12236,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11740,
											"end": 12236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12648,
											"end": 13049,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 12648,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12850,
											"end": 12852,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12832,
											"end": 12853,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12832,
											"end": 12853,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12832,
											"end": 12853,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12889,
											"end": 12891,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 12869,
											"end": 12887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12869,
											"end": 12887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12869,
											"end": 12887,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12862,
											"end": 12892,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12928,
											"end": 12962,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 12923,
											"end": 12925,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12901,
											"end": 12963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12994,
											"end": 12996,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12979,
											"end": 12997,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 12997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12972,
											"end": 13007,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13042,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 13024,
											"end": 13043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13024,
											"end": 13043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12648,
											"end": 13049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14892,
											"end": 15306,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 14892,
											"end": 15306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15094,
											"end": 15096,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15076,
											"end": 15097,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15097,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15097,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15133,
											"end": 15135,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 15113,
											"end": 15131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15113,
											"end": 15131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15113,
											"end": 15131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15106,
											"end": 15136,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15172,
											"end": 15206,
											"name": "PUSH",
											"source": 13,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 15167,
											"end": 15169,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15152,
											"end": 15170,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15152,
											"end": 15170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15145,
											"end": 15207,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15238,
											"end": 15240,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15223,
											"end": 15241,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15223,
											"end": 15241,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15216,
											"end": 15264,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15296,
											"end": 15299,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 15281,
											"end": 15300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15281,
											"end": 15300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14892,
											"end": 15306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15311,
											"end": 15800,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 15311,
											"end": 15800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15580,
											"end": 15595,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15580,
											"end": 15595,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15580,
											"end": 15595,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15562,
											"end": 15596,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15562,
											"end": 15596,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15632,
											"end": 15647,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15632,
											"end": 15647,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15627,
											"end": 15629,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15612,
											"end": 15630,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15612,
											"end": 15630,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15605,
											"end": 15648,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15679,
											"end": 15681,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15664,
											"end": 15682,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15664,
											"end": 15682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15657,
											"end": 15691,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15657,
											"end": 15691,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15657,
											"end": 15691,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15727,
											"end": 15730,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 15722,
											"end": 15724,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15707,
											"end": 15725,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15707,
											"end": 15725,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15700,
											"end": 15731,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15700,
											"end": 15731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15700,
											"end": 15731,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15505,
											"end": 15509,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15505,
											"end": 15509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15748,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 15748,
											"end": 15794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15774,
											"end": 15793,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15774,
											"end": 15793,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15766,
											"end": 15772,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15748,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 15748,
											"end": 15794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15748,
											"end": 15794,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 15748,
											"end": 15794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15740,
											"end": 15794,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 15311,
											"end": 15800,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15311,
											"end": 15800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15805,
											"end": 16054,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 15805,
											"end": 16054,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15874,
											"end": 15880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15927,
											"end": 15929,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15915,
											"end": 15924,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15906,
											"end": 15913,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15902,
											"end": 15925,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15898,
											"end": 15930,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 15895,
											"end": 15947,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15895,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 15895,
											"end": 15947,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15943,
											"end": 15944,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15940,
											"end": 15941,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15933,
											"end": 15945,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15895,
											"end": 15947,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 15895,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15975,
											"end": 15984,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15969,
											"end": 15985,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15994,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15994,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 15994,
											"end": 16024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTMinter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"currentTokenId()": "009a9b7b",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"liquidityWallet()": "d4698016",
							"mintNFT(string,string,uint256)": "64b30907",
							"name()": "06fdde03",
							"nfts(uint256)": "265aa621",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasuryWallet()": "4626402b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"mintNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMinter.sol\":\"NFTMinter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/NFTMinter.sol\":{\"keccak256\":\"0xe4370b1a39a85bf5075aa9c3ea6a2b8ae3340c66d0397f554043ec04ed068bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9578ddf311f9defec261f73a72efb9d581bd3c79ae1c73b8d13642140090b26b\",\"dweb:/ipfs/QmVLcB4xAeyqBzCZ9u4tg5PyarHbimHcfHNYijdUcbRqKd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "contracts/NFTMinter.sol:NFTMinter",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "contracts/NFTMinter.sol:NFTMinter",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 144,
								"contract": "contracts/NFTMinter.sol:NFTMinter",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 148,
								"contract": "contracts/NFTMinter.sol:NFTMinter",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 152,
								"contract": "contracts/NFTMinter.sol:NFTMinter",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 158,
								"contract": "contracts/NFTMinter.sol:NFTMinter",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 7,
								"contract": "contracts/NFTMinter.sol:NFTMinter",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2798,
								"contract": "contracts/NFTMinter.sol:NFTMinter",
								"label": "currentTokenId",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2812,
								"contract": "contracts/NFTMinter.sol:NFTMinter",
								"label": "nfts",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_struct(NFT)2807_storage)"
							},
							{
								"astId": 2814,
								"contract": "contracts/NFTMinter.sol:NFTMinter",
								"label": "liquidityWallet",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 2816,
								"contract": "contracts/NFTMinter.sol:NFTMinter",
								"label": "treasuryWallet",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(NFT)2807_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMinter.NFT)",
								"numberOfBytes": "32",
								"value": "t_struct(NFT)2807_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(NFT)2807_storage": {
								"encoding": "inplace",
								"label": "struct NFTMinter.NFT",
								"members": [
									{
										"astId": 2800,
										"contract": "contracts/NFTMinter.sol:NFTMinter",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 2802,
										"contract": "contracts/NFTMinter.sol:NFTMinter",
										"label": "metadata",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 2804,
										"contract": "contracts/NFTMinter.sol:NFTMinter",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2806,
										"contract": "contracts/NFTMinter.sol:NFTMinter",
										"label": "creator",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1552
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1553,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1552,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1552
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1530
						],
						"Context": [
							1552
						],
						"ERC165": [
							1805
						],
						"ERC721": [
							1039
						],
						"IERC165": [
							1817
						],
						"IERC721": [
							1155
						],
						"IERC721Metadata": [
							1200
						],
						"IERC721Receiver": [
							1173
						],
						"Math": [
							2683
						],
						"SignedMath": [
							2788
						],
						"Strings": [
							1781
						]
					},
					"id": 1040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1156,
							"src": "132:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1174,
							"src": "156:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1201,
							"src": "188:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1531,
							"src": "231:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1553,
							"src": "265:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1782,
							"src": "299:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1040,
							"sourceUnit": 1806,
							"src": "333:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 123,
										"name": "Context",
										"nameLocations": [
											"647:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1552,
										"src": "647:7:1"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:1"
								},
								{
									"baseName": {
										"id": 125,
										"name": "ERC165",
										"nameLocations": [
											"656:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1805,
										"src": "656:6:1"
									},
									"id": 126,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:1"
								},
								{
									"baseName": {
										"id": 127,
										"name": "IERC721",
										"nameLocations": [
											"664:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1155,
										"src": "664:7:1"
									},
									"id": 128,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:1"
								},
								{
									"baseName": {
										"id": 129,
										"name": "IERC721Metadata",
										"nameLocations": [
											"673:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1200,
										"src": "673:15:1"
									},
									"id": 130,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1039,
							"linearizedBaseContracts": [
								1039,
								1200,
								1155,
								1805,
								1817,
								1552
							],
							"name": "ERC721",
							"nameLocation": "637:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 133,
									"libraryName": {
										"id": 131,
										"name": "Address",
										"nameLocations": [
											"701:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1530,
										"src": "701:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:1",
									"typeName": {
										"id": 132,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 136,
									"libraryName": {
										"id": 134,
										"name": "Strings",
										"nameLocations": [
											"732:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1781,
										"src": "732:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:1",
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "776:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 137,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "823:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 144,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "898:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 143,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 141,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 142,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 148,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "992:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 147,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 146,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "1093:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 151,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 149,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 150,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1039,
									"src": "1199:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 157,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 153,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 156,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 154,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 155,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "1446:57:1",
										"statements": [
											{
												"expression": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 166,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "1456:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 167,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1464:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:1"
											},
											{
												"expression": {
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 170,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "1479:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 171,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "1489:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:1"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 175,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1402:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 160,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1423:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:1"
									},
									"scope": 1039,
									"src": "1390:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1804,
										1816
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1678:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 186,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "1707:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 188,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1155,
																			"src": "1727:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1155_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1155_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 187,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1155",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1736:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 192,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "1763:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 194,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "1783:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1200_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1200_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 193,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1200",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1800:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 201,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "1851:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 199,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1039_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1804,
															"src": "1827:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 185,
												"id": 204,
												"nodeType": "Return",
												"src": "1688:175:1"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 182,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 180,
												"name": "ERC165",
												"nameLocations": [
													"1646:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1805,
												"src": "1646:6:1"
											},
											{
												"id": 181,
												"name": "IERC165",
												"nameLocations": [
													"1654:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1817,
												"src": "1654:7:1"
											}
										],
										"src": "1637:25:1"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1597:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 177,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1672:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:1"
									},
									"scope": 1039,
									"src": "1570:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1080
									],
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "2010:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 216,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "2028:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 217,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "2020:73:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 225,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "2110:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 227,
													"indexExpression": {
														"id": 226,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "2120:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2110:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 228,
												"nodeType": "Return",
												"src": "2103:23:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 211,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:1"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1948:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2001:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:1"
									},
									"scope": 1039,
									"src": "1929:204:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1088
									],
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2271:138:1",
										"statements": [
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2289:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "2281:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2281:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"arguments": [
														{
															"id": 242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2306:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2297:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2281:33:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 246,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "2332:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 247,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "2324:56:1"
											},
											{
												"expression": {
													"id": 255,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 240,
													"src": "2397:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 238,
												"id": 256,
												"nodeType": "Return",
												"src": "2390:12:1"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "2139:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2199:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2244:8:1"
									},
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2215:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2207:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:17:1"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2262:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:9:1"
									},
									"scope": 1039,
									"src": "2190:219:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1185
									],
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "2540:29:1",
										"statements": [
											{
												"expression": {
													"id": 265,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2557:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 264,
												"id": 266,
												"nodeType": "Return",
												"src": "2550:12:1"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "2415:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2480:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2507:8:1"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:2:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2525:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:1"
									},
									"scope": 1039,
									"src": "2471:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1191
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2704:31:1",
										"statements": [
											{
												"expression": {
													"id": 275,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "2721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 274,
												"id": 276,
												"nodeType": "Return",
												"src": "2714:14:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "2575:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2642:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2671:8:1"
									},
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2689:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2689:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:15:1"
									},
									"scope": 1039,
									"src": "2633:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1199
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "2889:188:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 288,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "2914:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 287,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "2899:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "2899:23:1"
											},
											{
												"assignments": [
													292
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2947:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2933:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 291,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2933:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 293,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2957:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2933:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 298,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "2990:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2984:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 296,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2984:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2984:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2999:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2984:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3008:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2984:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3068:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2984:86:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 307,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "3036:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 308,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 281,
																				"src": "3045:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3053:8:1",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1611,
																			"src": "3045:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3045:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 305,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3019:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3023:12:1",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3019:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3012:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 303,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3012:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3012:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 286,
												"id": 315,
												"nodeType": "Return",
												"src": "2977:93:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2741:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2810:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 283,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2856:8:1"
									},
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2827:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2819:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:17:1"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2874:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2874:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:15:1"
									},
									"scope": 1039,
									"src": "2801:276:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "3385:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3402:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "3395:9:1"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "3083:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3328:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3336:2:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3370:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3370:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:15:1"
									},
									"scope": 1039,
									"src": "3319:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1128
									],
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "3538:336:1",
										"statements": [
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3556:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "3548:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 335,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3548:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"arguments": [
														{
															"id": 339,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3579:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 337,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "3564:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1039_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3571:7:1",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 258,
														"src": "3564:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 343,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "3605:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 344,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "3611:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3605:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3618:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "3597:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 350,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "3686:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3686:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 352,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "3702:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3686:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 355,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "3728:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 356,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1542,
																			"src": "3735:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3735:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 354,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "3711:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3711:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3686:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3762:63:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3665:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3665:170:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "3665:170:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 364,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3855:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3859:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 363,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "3846:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "3846:21:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3417:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3477:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 333,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3529:8:1"
									},
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3493:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3485:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3485:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3505:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3497:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:29:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3538:0:1"
									},
									"scope": 1039,
									"src": "3468:406:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1144
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "4020:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "4045:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 378,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "4030:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4030:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "4030:23:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 382,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "4071:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 384,
													"indexExpression": {
														"id": 383,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4087:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4071:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 377,
												"id": 385,
												"nodeType": "Return",
												"src": "4064:31:1"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "3880:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3944:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 374,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3993:8:1"
									},
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3964:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3956:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:17:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4011:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4010:9:1"
									},
									"scope": 1039,
									"src": "3935:167:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1136
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "4253:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 397,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "4282:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "4296:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4306:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 396,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "4263:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "4263:52:1"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "4108:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4178:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 394,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4244:8:1"
									},
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4204:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "4196:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4196:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4219:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "4214:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4214:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4195:33:1"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4253:0:1"
									},
									"scope": 1039,
									"src": "4169:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1154
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "4491:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 415,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4508:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 417,
														"indexExpression": {
															"id": 416,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "4527:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4508:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 419,
													"indexExpression": {
														"id": 418,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "4534:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4508:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 414,
												"id": 420,
												"nodeType": "Return",
												"src": "4501:42:1"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "4328:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4397:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 411,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4467:8:1"
									},
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4422:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4414:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4437:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4429:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:33:1"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4485:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4485:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:6:1"
									},
									"scope": 1039,
									"src": "4388:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1120
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4701:207:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 435,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "4790:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4790:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 437,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "4804:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 434,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "4771:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4814:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4763:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4763:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "4763:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 443,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4883:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "4889:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4893:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 442,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "4873:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4873:28:1"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "4556:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4621:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 431,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4692:8:1"
									},
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4642:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4634:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4656:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4648:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4668:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4660:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4633:43:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4701:0:1"
									},
									"scope": 1039,
									"src": "4612:296:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1110
									],
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "5067:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "5094:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "5100:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5104:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5113:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 460,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															468,
															498
														],
														"referencedDeclaration": 498,
														"src": "5077:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5077:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "5077:39:1"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4914:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4983:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 458,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5058:8:1"
									},
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5008:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "5000:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5022:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "5014:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5034:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "5026:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5026:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:43:1"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5067:0:1"
									},
									"scope": 1039,
									"src": "4974:149:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1100
									],
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "5301:164:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 483,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "5338:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5338:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 485,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5352:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 482,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "5319:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5319:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5362:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5311:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5311:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "5311:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "5434:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "5440:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "5444:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 494,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "5453:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 490,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "5420:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5420:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "5420:38:1"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "5129:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5198:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 479,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5292:8:1"
									},
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5223:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5215:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5237:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5229:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5229:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5249:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5241:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5271:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5258:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5258:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5214:62:1"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5301:0:1"
									},
									"scope": 1039,
									"src": "5189:276:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "6428:165:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "6448:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6454:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "6458:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 510,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "6438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6438:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "6438:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 518,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "6507:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 519,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "6513:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 520,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "6517:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 521,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "6526:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 517,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "6484:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6484:47:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6533:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6476:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:110:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "6476:110:1"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "5471:850:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6335:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6357:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "6349:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6371:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "6363:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6363:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6383:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "6375:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6375:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6405:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "6392:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6392:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6348:62:1"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6428:0:1"
									},
									"scope": 1039,
									"src": "6326:267:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "6777:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 535,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "6794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 537,
													"indexExpression": {
														"id": 536,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "6802:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6794:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 534,
												"id": 538,
												"nodeType": "Return",
												"src": "6787:23:1"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "6599:98:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6711:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6728:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "6720:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6719:17:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "6768:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6768:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:9:1"
									},
									"scope": 1039,
									"src": "6702:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "7191:55:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "7217:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 548,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "7208:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7208:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7237:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7229:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7229:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7229:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7208:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 556,
												"nodeType": "Return",
												"src": "7201:38:1"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "6823:292:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7129:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7145:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "7137:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7137:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7136:17:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "7185:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7185:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7184:6:1"
									},
									"scope": 1039,
									"src": "7120:126:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "7503:162:1",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7521:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 591,
														"src": "7513:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7513:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [
														{
															"id": 572,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "7544:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 570,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "7529:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1039_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7536:7:1",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 258,
														"src": "7529:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7529:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7513:39:1"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 575,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "7570:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 576,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "7581:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7570:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 579,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "7607:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 580,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "7614:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 578,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "7590:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7590:32:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7570:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 584,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 563,
																			"src": "7638:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 583,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "7626:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7626:20:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 586,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "7650:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7626:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7570:87:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 589,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7569:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 567,
												"id": 590,
												"nodeType": "Return",
												"src": "7562:96:1"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "7252:147:1",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7413:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7440:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "7432:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7457:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "7449:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7431:34:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "7497:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7497:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7496:6:1"
									},
									"scope": 1039,
									"src": "7404:261:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "8060:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "8080:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "8084:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8093:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 600,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															607,
															636
														],
														"referencedDeclaration": 636,
														"src": "8070:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8070:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "8070:26:1"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "7671:319:1",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8004:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8022:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "8014:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8034:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "8026:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8013:29:1"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8060:0:1"
									},
									"scope": 1039,
									"src": "7995:108:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "8408:195:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 618,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "8424:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "8428:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "8418:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8418:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "8418:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8498:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8490:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 624,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8490:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8490:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 628,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "8502:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 629,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "8506:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 630,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "8515:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 623,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "8467:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8467:53:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8534:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8446:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8446:150:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "8446:150:1"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "8109:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8333:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8351:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "8343:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8343:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8363:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "8355:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8385:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "8372:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8342:48:1"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8408:0:1"
									},
									"scope": 1039,
									"src": "8324:279:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "8986:859:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 645,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "9004:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9018:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9010:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9010:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9010:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9004:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9022:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8996:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "8996:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9075:17:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 656,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "9084:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 655,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "9076:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9076:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9094:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9067:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9067:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "9067:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9165:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9157:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 663,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9157:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9157:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "9169:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9173:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9182:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 662,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "9136:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9136:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "9136:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9279:17:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 674,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "9288:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 673,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "9280:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9280:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9298:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9271:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9271:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "9271:58:1"
											},
											{
												"id": 686,
												"nodeType": "UncheckedBlock",
												"src": "9340:360:1",
												"statements": [
													{
														"expression": {
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 680,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "9671:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 682,
																"indexExpression": {
																	"id": 681,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "9681:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9671:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9671:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 685,
														"nodeType": "ExpressionStatement",
														"src": "9671:18:1"
													}
												]
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 687,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "9710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9718:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9710:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "9729:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9710:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9710:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9764:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9756:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 694,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9756:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9756:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "9768:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9772:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "9747:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9747:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "EmitStatement",
												"src": "9742:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9819:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9811:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 703,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9811:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9811:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "9823:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9827:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9836:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 702,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "9791:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9791:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "9791:47:1"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "8609:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8934:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8948:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "8940:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8960:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "8952:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8952:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8939:29:1"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8986:0:1"
									},
									"scope": 1039,
									"src": "8925:920:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "10220:713:1",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10238:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "10230:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 719,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10230:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"arguments": [
														{
															"id": 723,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10261:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 721,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "10246:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1039_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10253:7:1",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 258,
														"src": "10246:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10246:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10230:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "10301:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10316:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10308:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 728,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10308:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10308:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10320:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10329:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 726,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "10280:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10280:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "10280:51:1"
											},
											{
												"expression": {
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 736,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "10433:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 739,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "10456:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 737,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "10441:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1039_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10448:7:1",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 258,
															"src": "10441:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10441:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10433:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "10433:31:1"
											},
											{
												"expression": {
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10502:31:1",
													"subExpression": {
														"baseExpression": {
															"id": 743,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "10509:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 745,
														"indexExpression": {
															"id": 744,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10525:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10509:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "10502:31:1"
											},
											{
												"id": 754,
												"nodeType": "UncheckedBlock",
												"src": "10544:237:1",
												"statements": [
													{
														"expression": {
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 748,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "10749:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 750,
																"indexExpression": {
																	"id": 749,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "10759:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10749:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10769:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10749:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "10749:21:1"
													}
												]
											},
											{
												"expression": {
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10790:23:1",
													"subExpression": {
														"baseExpression": {
															"id": 755,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "10797:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 757,
														"indexExpression": {
															"id": 756,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10805:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10797:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "10790:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 761,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "10838:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10853:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10845:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10845:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10845:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10857:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 760,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "10829:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10829:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "EmitStatement",
												"src": "10824:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "10896:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10911:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10903:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 771,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10903:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10903:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10915:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10924:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 769,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "10876:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10876:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "10876:50:1"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "9851:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10180:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10194:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "10186:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10185:17:1"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10220:0:1"
									},
									"scope": 1039,
									"src": "10171:762:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "11336:1124:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 793,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "11369:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 791,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "11354:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1039_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11361:7:1",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 258,
																	"src": "11354:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11354:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 795,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "11381:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11354:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11387:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11346:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11346:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "11346:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "11445:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11459:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11451:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 802,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11451:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11451:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11445:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11463:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11437:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11437:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "11437:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "11534:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 812,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "11540:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "11544:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11553:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 810,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "11513:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11513:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "11513:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "11670:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 818,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "11655:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1039_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11662:7:1",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 258,
																	"src": "11655:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11655:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 822,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "11682:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11655:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11688:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11647:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11647:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "11647:81:1"
											},
											{
												"expression": {
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11790:31:1",
													"subExpression": {
														"baseExpression": {
															"id": 827,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "11797:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 829,
														"indexExpression": {
															"id": 828,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "11813:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11797:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "11790:31:1"
											},
											{
												"id": 844,
												"nodeType": "UncheckedBlock",
												"src": "11832:496:1",
												"statements": [
													{
														"expression": {
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 832,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "12265:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 834,
																"indexExpression": {
																	"id": 833,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "12275:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12265:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12284:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12265:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 837,
														"nodeType": "ExpressionStatement",
														"src": "12265:20:1"
													},
													{
														"expression": {
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 838,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "12299:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 840,
																"indexExpression": {
																	"id": 839,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "12309:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12299:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12316:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12299:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 843,
														"nodeType": "ExpressionStatement",
														"src": "12299:18:1"
													}
												]
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 845,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "12337:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 847,
														"indexExpression": {
															"id": 846,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "12345:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12337:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 848,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "12356:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12337:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "12337:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 852,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "12383:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "12389:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "12393:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 851,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "12374:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12374:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "EmitStatement",
												"src": "12369:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 858,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "12432:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "12438:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "12442:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12451:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 857,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "12412:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12412:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "12412:41:1"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "10939:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11266:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11284:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11276:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11276:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11298:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11290:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11290:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11310:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11302:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11302:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11275:43:1"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11336:0:1"
									},
									"scope": 1039,
									"src": "11257:1203:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "12636:107:1",
										"statements": [
											{
												"expression": {
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 873,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "12646:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 875,
														"indexExpression": {
															"id": 874,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "12662:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12646:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 876,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "12673:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12646:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "12646:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 882,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "12714:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 880,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "12699:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1039_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12706:7:1",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 258,
																"src": "12699:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12699:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "12724:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "12728:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 879,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "12690:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12690:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "EmitStatement",
												"src": "12685:51:1"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "12466:101:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12581:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12598:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "12590:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12590:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12610:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "12602:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12589:29:1"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12636:0:1"
									},
									"scope": 1039,
									"src": "12572:171:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "12972:184:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "12990:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 901,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "12999:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12990:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13009:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12982:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12982:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "12982:55:1"
											},
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 906,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "13047:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 909,
															"indexExpression": {
																"id": 907,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "13066:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13047:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 910,
														"indexExpression": {
															"id": 908,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "13073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13047:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 911,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "13085:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13047:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "13047:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 915,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "13123:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "13130:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "13140:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 914,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "13108:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13108:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "EmitStatement",
												"src": "13103:46:1"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "12749:125:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12888:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12915:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "12907:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12907:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12930:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "12922:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12922:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12945:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "12940:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 895,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12940:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12906:48:1"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12972:0:1"
									},
									"scope": 1039,
									"src": "12879:277:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "13303:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 929,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "13329:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 928,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "13321:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13321:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13339:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13313:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13313:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "13313:53:1"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "13162:73:1",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13249:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13272:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "13264:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13264:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13263:17:1"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13303:0:1"
									},
									"scope": 1039,
									"src": "13240:133:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "14080:676:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "14094:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14097:10:1",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1218,
														"src": "14094:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14094:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 994,
													"nodeType": "Block",
													"src": "14714:36:1",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14735:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 948,
															"id": 993,
															"nodeType": "Return",
															"src": "14728:11:1"
														}
													]
												},
												"id": 995,
												"nodeType": "IfStatement",
												"src": "14090:660:1",
												"trueBody": {
													"id": 991,
													"nodeType": "Block",
													"src": "14111:597:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 971,
																		"nodeType": "Block",
																		"src": "14225:91:1",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 969,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 965,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 963,
																						"src": "14250:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 966,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1173,
																								"src": "14260:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1173_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 967,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14276:16:1",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1172,
																							"src": "14260:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 968,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14293:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14260:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14250:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 948,
																				"id": 970,
																				"nodeType": "Return",
																				"src": "14243:58:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 972,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 964,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 963,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14217:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 972,
																				"src": "14210:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 962,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14210:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14209:15:1"
																	},
																	"src": "14201:115:1"
																},
																{
																	"block": {
																		"id": 988,
																		"nodeType": "Block",
																		"src": "14345:353:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 979,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 976,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 974,
																							"src": "14367:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 977,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14374:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14367:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 978,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14384:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14367:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 986,
																					"nodeType": "Block",
																					"src": "14494:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "14580:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "14617:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14621:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "14613:3:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14613:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14636:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "14630:5:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14630:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "14606:6:1"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14606:38:1"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "14606:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 974,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14621:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 974,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14636:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 985,
																							"nodeType": "InlineAssembly",
																							"src": "14571:95:1"
																						}
																					]
																				},
																				"id": 987,
																				"nodeType": "IfStatement",
																				"src": "14363:321:1",
																				"trueBody": {
																					"id": 984,
																					"nodeType": "Block",
																					"src": "14387:101:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 981,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14416:52:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 980,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14409:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 982,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14409:60:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 983,
																							"nodeType": "ExpressionStatement",
																							"src": "14409:60:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 989,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 975,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 974,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14337:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 989,
																				"src": "14324:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 973,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14324:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14323:21:1"
																	},
																	"src": "14317:381:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 956,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1542,
																			"src": "14166:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14166:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 958,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "14180:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 959,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "14186:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 960,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "14195:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 953,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 940,
																				"src": "14145:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 952,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1173,
																			"src": "14129:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1173_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14129:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1173",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14149:16:1",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1172,
																	"src": "14129:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14129:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 990,
															"nodeType": "TryStatement",
															"src": "14125:573:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "13379:541:1",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "13934:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13974:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "13966:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13966:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13996:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "13988:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14016:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "14008:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14046:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "14033:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 943,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14033:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13956:100:1"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "14074:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14074:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14073:6:1"
									},
									"scope": 1039,
									"src": "13925:831:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "15586:2:1",
										"statements": []
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "14762:705:1",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15481:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15510:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "15502:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15502:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15524:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "15516:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15516:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "15536:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "15528:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15558:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "15550:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15550:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15501:67:1"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15586:0:1"
									},
									"scope": 1039,
									"src": "15472:116:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "16407:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "15594:695:1",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16303:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16331:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "16323:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16323:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16345:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "16337:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16337:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16357:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "16349:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16349:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16379:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "16371:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16371:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16322:67:1"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16407:0:1"
									},
									"scope": 1039,
									"src": "16294:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "16958:45:1",
										"statements": [
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1031,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "16968:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1033,
														"indexExpression": {
															"id": 1032,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "16978:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16968:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1034,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "16990:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16968:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "16968:28:1"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "16415:409:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "16891:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16924:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "16916:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16916:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16941:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "16933:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16933:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16915:33:1"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16958:0:1"
									},
									"scope": 1039,
									"src": "16882:121:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1040,
							"src": "628:16377:1",
							"usedErrors": []
						}
					],
					"src": "107:16899:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1817
						],
						"IERC721": [
							1155
						]
					},
					"id": 1156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1156,
							"sourceUnit": 1818,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1044,
										"name": "IERC165",
										"nameLocations": [
											"271:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1817,
										"src": "271:7:2"
									},
									"id": 1045,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1043,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1155,
							"linearizedBaseContracts": [
								1155,
								1817
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1054,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1063,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1072,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1080,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 1155,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 1155,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1843:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1835:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1857:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1849:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1869:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1861:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1878:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:2"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:2"
									},
									"scope": 1155,
									"src": "1809:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "1914:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2615:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2640:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "2632:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2654:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "2646:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2666:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "2658:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:43:2"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:2"
									},
									"scope": 1155,
									"src": "2606:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "2690:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3436:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3457:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "3449:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3471:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "3463:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3483:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "3475:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:43:2"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:2"
									},
									"scope": 1155,
									"src": "3427:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "3507:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3973:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "3981:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4001:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "3993:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:29:2"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:2"
									},
									"scope": 1155,
									"src": "3964:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "4025:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4348:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "4366:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4389:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "4384:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:33:2"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:2"
									},
									"scope": 1155,
									"src": "4339:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "4414:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4567:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4587:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "4579:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:17:2"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4627:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "4619:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:18:2"
									},
									"scope": 1155,
									"src": "4558:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "4643:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4795:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4820:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4812:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4835:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4827:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:33:2"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4868:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:6:2"
									},
									"scope": 1155,
									"src": "4786:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1156,
							"src": "250:4626:2",
							"usedErrors": []
						}
					],
					"src": "108:4769:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1173
						]
					},
					"id": 1174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1157,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1158,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1173,
							"linearizedBaseContracts": [
								1173
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1169,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 1173,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1174,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1817
						],
						"IERC721": [
							1155
						],
						"IERC721Metadata": [
							1200
						]
					},
					"id": 1201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1201,
							"sourceUnit": 1156,
							"src": "137:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1178,
										"name": "IERC721",
										"nameLocations": [
											"326:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1155,
										"src": "326:7:4"
									},
									"id": 1179,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1177,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1200,
							"linearizedBaseContracts": [
								1200,
								1155,
								1817
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:4"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "442:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:4"
									},
									"scope": 1200,
									"src": "403:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:4"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "569:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:4"
									},
									"scope": 1200,
									"src": "528:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:4"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "743:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1196,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:4"
									},
									"scope": 1200,
									"src": "685:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1201,
							"src": "297:463:4",
							"usedErrors": []
						}
					],
					"src": "112:649:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1530
						]
					},
					"id": 1531,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1203,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1530,
							"linearizedBaseContracts": [
								1530
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "1478:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1211,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "1702:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1210,
												"id": 1216,
												"nodeType": "Return",
												"src": "1695:30:5"
											}
										]
									},
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "1432:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:5"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "1472:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:5"
									},
									"scope": 1530,
									"src": "1412:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "2718:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1229,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1530",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1530",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1227,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1232,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "2761:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:5"
											},
											{
												"assignments": [
													1238,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1238,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "2813:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1237,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1245,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1239,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "2831:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1241,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "2853:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1247,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "2882:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:5"
											}
										]
									},
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "2666:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "2693:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:5"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:5"
									},
									"scope": 1530,
									"src": "2647:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "3790:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1263,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "3829:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1264,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "3837:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1262,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1310,
															1354
														],
														"referencedDeclaration": 1354,
														"src": "3807:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1261,
												"id": 1268,
												"nodeType": "Return",
												"src": "3800:79:5"
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3723:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3739:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:5"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3776:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:5"
									},
									"scope": 1530,
									"src": "3701:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "4255:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1283,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "4294:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "4302:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1286,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "4311:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1282,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1310,
															1354
														],
														"referencedDeclaration": 1354,
														"src": "4272:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1281,
												"id": 1288,
												"nodeType": "Return",
												"src": "4265:59:5"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "4139:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "4163:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "4190:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1276,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:5"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "4241:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:5"
									},
									"scope": 1530,
									"src": "4108:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "4806:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1303,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "4845:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "4853:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1305,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "4859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1302,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1310,
															1354
														],
														"referencedDeclaration": 1354,
														"src": "4823:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1301,
												"id": 1308,
												"nodeType": "Return",
												"src": "4816:94:5"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4724:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4740:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4759:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:5"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "4792:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:5"
									},
									"scope": 1530,
									"src": "4693:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "5344:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1327,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1530",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1530",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1325,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1330,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1317,
																"src": "5387:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:5"
											},
											{
												"assignments": [
													1336,
													1338
												],
												"declarations": [
													{
														"constant": false,
														"id": 1336,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "5446:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1335,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1338,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "5460:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1337,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1345,
												"initialValue": {
													"arguments": [
														{
															"id": 1343,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "5513:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1339,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "5487:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1341,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1317,
																"src": "5506:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1347,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "5562:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "5570:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1349,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "5579:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1350,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "5591:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1346,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "5535:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1323,
												"id": 1352,
												"nodeType": "Return",
												"src": "5528:76:5"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "5205:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "5229:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "5256:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "5279:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:5"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "5330:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:5"
									},
									"scope": 1530,
									"src": "5165:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "5888:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1365,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "5924:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "5932:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1364,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1371,
															1400
														],
														"referencedDeclaration": 1400,
														"src": "5905:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1369,
												"nodeType": "Return",
												"src": "5898:80:5"
											}
										]
									},
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "5816:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "5832:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:5"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "5874:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:5"
									},
									"scope": 1530,
									"src": "5788:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "6327:168:5",
										"statements": [
											{
												"assignments": [
													1384,
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1399,
														"src": "6338:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1383,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1399,
														"src": "6352:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1385,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1391,
												"initialValue": {
													"arguments": [
														{
															"id": 1389,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "6397:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1387,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "6379:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1393,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "6446:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1394,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "6454:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1395,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "6463:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1396,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "6475:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1392,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "6419:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1382,
												"id": 1398,
												"nodeType": "Return",
												"src": "6412:76:5"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "6206:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "6230:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "6257:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1377,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:5"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "6313:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:5"
									},
									"scope": 1530,
									"src": "6169:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "6771:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1411,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "6809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1412,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "6817:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1410,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1417,
															1446
														],
														"referencedDeclaration": 1446,
														"src": "6788:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1409,
												"id": 1415,
												"nodeType": "Return",
												"src": "6781:84:5"
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "6704:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "6720:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1404,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:5"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "6757:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:5"
									},
									"scope": 1530,
									"src": "6674:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "7213:170:5",
										"statements": [
											{
												"assignments": [
													1430,
													1432
												],
												"declarations": [
													{
														"constant": false,
														"id": 1430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1445,
														"src": "7224:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1445,
														"src": "7238:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"arguments": [
														{
															"id": 1435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "7285:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "7265:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1439,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "7334:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1440,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "7342:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1441,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "7351:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1442,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "7363:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1438,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "7307:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1428,
												"id": 1444,
												"nodeType": "Return",
												"src": "7300:76:5"
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "7097:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "7121:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "7148:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1423,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:5"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "7199:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:5"
									},
									"scope": 1530,
									"src": "7058:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "7865:434:5",
										"statements": [
											{
												"condition": {
													"id": 1460,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1451,
													"src": "7879:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1482,
													"nodeType": "Block",
													"src": "8235:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1478,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1453,
																		"src": "8257:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1479,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "8269:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1477,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "8249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1481,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:5"
														}
													]
												},
												"id": 1483,
												"nodeType": "IfStatement",
												"src": "7875:418:5",
												"trueBody": {
													"id": 1476,
													"nodeType": "Block",
													"src": "7888:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1453,
																		"src": "7906:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1473,
															"nodeType": "IfStatement",
															"src": "7902:286:5",
															"trueBody": {
																"id": 1472,
																"nodeType": "Block",
																"src": "7930:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1467,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1449,
																							"src": "8132:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1466,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1218,
																						"src": "8121:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1468,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1465,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1471,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1474,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1453,
																"src": "8208:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1459,
															"id": 1475,
															"nodeType": "Return",
															"src": "8201:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "7716:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "7740:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "7762:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "7795:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:5"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "7851:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:5"
									},
									"scope": 1530,
									"src": "7671:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "8680:135:5",
										"statements": [
											{
												"condition": {
													"id": 1497,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1488,
													"src": "8694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1506,
													"nodeType": "Block",
													"src": "8751:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1502,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "8773:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1503,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "8785:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1501,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "8765:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1505,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:5"
														}
													]
												},
												"id": 1507,
												"nodeType": "IfStatement",
												"src": "8690:119:5",
												"trueBody": {
													"id": 1500,
													"nodeType": "Block",
													"src": "8703:42:5",
													"statements": [
														{
															"expression": {
																"id": 1498,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "8724:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1496,
															"id": 1499,
															"nodeType": "Return",
															"src": "8717:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "8555:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "8577:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "8610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:5"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "8666:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:5"
									},
									"scope": 1530,
									"src": "8520:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "8904:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1516,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "8980:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1526,
													"nodeType": "Block",
													"src": "9310:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1523,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "9331:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1522,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1525,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:5"
														}
													]
												},
												"id": 1527,
												"nodeType": "IfStatement",
												"src": "8976:379:5",
												"trueBody": {
													"id": 1521,
													"nodeType": "Block",
													"src": "9003:301:5",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1511,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1511,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:5",
																	"valueSize": 1
																}
															],
															"id": 1520,
															"nodeType": "InlineAssembly",
															"src": "9152:142:5"
														}
													]
												}
											}
										]
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "8838:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "8863:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:5"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:5"
									},
									"scope": 1530,
									"src": "8821:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1531,
							"src": "194:9169:5",
							"usedErrors": []
						}
					],
					"src": "101:9263:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1552
						]
					},
					"id": 1553,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1532,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1533,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1552,
							"linearizedBaseContracts": [
								1552
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1538,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1537,
												"id": 1540,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1552,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1547,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1546,
												"id": 1549,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1552,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1553,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2683
						],
						"SignedMath": [
							2788
						],
						"Strings": [
							1781
						]
					},
					"id": 1782,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1554,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1555,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1782,
							"sourceUnit": 2684,
							"src": "126:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1556,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1782,
							"sourceUnit": 2789,
							"src": "152:31:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1557,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1781,
							"linearizedBaseContracts": [
								1781
							],
							"name": "Strings",
							"nameLocation": "228:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1560,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1781,
									"src": "242:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1558,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1559,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1563,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1781,
									"src": "302:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1561,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1562,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "518:625:7",
										"statements": [
											{
												"id": 1609,
												"nodeType": "UncheckedBlock",
												"src": "528:609:7",
												"statements": [
													{
														"assignments": [
															1572
														],
														"declarations": [
															{
																"constant": false,
																"id": 1572,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1609,
																"src": "552:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1571,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1579,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1575,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "580:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1573,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2683,
																		"src": "569:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2683_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2520,
																	"src": "569:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:7"
													},
													{
														"assignments": [
															1581
														],
														"declarations": [
															{
																"constant": false,
																"id": 1581,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1609,
																"src": "604:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1580,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1586,
														"initialValue": {
															"arguments": [
																{
																	"id": 1584,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "638:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1582,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:7"
													},
													{
														"assignments": [
															1588
														],
														"declarations": [
															{
																"constant": false,
																"id": 1588,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1609,
																"src": "659:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1587,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1589,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1581,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1588,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:7",
																"valueSize": 1
															}
														],
														"id": 1590,
														"nodeType": "InlineAssembly",
														"src": "731:76:7"
													},
													{
														"body": {
															"id": 1605,
															"nodeType": "Block",
															"src": "833:267:7",
															"statements": [
																{
																	"expression": {
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:7",
																		"subExpression": {
																			"id": 1592,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "851:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1594,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:7"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:7"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1560,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1588,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1566,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1595,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:7"
																},
																{
																	"expression": {
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1596,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "1035:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1599,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "1068:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1604,
																	"nodeType": "IfStatement",
																	"src": "1064:21:7",
																	"trueBody": {
																		"id": 1603,
																		"nodeType": "Break",
																		"src": "1080:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1606,
														"nodeType": "WhileStatement",
														"src": "820:280:7"
													},
													{
														"expression": {
															"id": 1607,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "1120:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1570,
														"id": 1608,
														"nodeType": "Return",
														"src": "1113:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "465:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:7"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "503:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1568,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:7"
									},
									"scope": 1781,
									"src": "447:696:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "1313:103:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1623,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1614,
																			"src": "1354:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:7",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1614,
																					"src": "1400:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1630,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2788,
																					"src": "1385:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2788_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1631,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:7",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2787,
																				"src": "1385:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1629,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1611,
																			1639
																		],
																		"referencedDeclaration": 1611,
																		"src": "1376:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1621,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1619,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1618,
												"id": 1637,
												"nodeType": "Return",
												"src": "1323:86:7"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "1261:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1613,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:7"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "1298:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:7"
									},
									"scope": 1781,
									"src": "1243:173:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "1595:100:7",
										"statements": [
											{
												"id": 1657,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "1648:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1651,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1642,
																				"src": "1667:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1649,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2683,
																				"src": "1655:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2683_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2643,
																			"src": "1655:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1647,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1659,
																	1735,
																	1755
																],
																"referencedDeclaration": 1735,
																"src": "1636:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1646,
														"id": 1656,
														"nodeType": "Return",
														"src": "1629:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "1542:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:7"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "1580:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:7"
									},
									"scope": 1781,
									"src": "1521:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "1908:347:7",
										"statements": [
											{
												"assignments": [
													1670
												],
												"declarations": [
													{
														"constant": false,
														"id": 1670,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1734,
														"src": "1918:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1669,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1679,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1674,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "1954:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1671,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:7"
											},
											{
												"expression": {
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1680,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "1975:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1682,
														"indexExpression": {
															"hexValue": "30",
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:7"
											},
											{
												"expression": {
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1686,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "2000:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1688,
														"indexExpression": {
															"hexValue": "31",
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:7"
											},
											{
												"body": {
													"id": 1720,
													"nodeType": "Block",
													"src": "2070:83:7",
													"statements": [
														{
															"expression": {
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1706,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1670,
																		"src": "2084:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1708,
																	"indexExpression": {
																		"id": 1707,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "2091:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1709,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "2096:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1713,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1710,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1662,
																			"src": "2105:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1715,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:7"
														},
														{
															"expression": {
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1716,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "2131:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1719,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1700,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "2058:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1721,
												"initializationExpression": {
													"assignments": [
														1693
													],
													"declarations": [
														{
															"constant": false,
															"id": 1693,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1721,
															"src": "2030:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1692,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1699,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1695,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "2046:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:7",
														"subExpression": {
															"id": 1703,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "2067:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1705,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1723,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "2170:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1731,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "2241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1729,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1668,
												"id": 1733,
												"nodeType": "Return",
												"src": "2227:21:7"
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1839:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1854:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:7"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1893:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1666,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:7"
									},
									"scope": 1781,
									"src": "1818:437:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "2480:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1748,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1738,
																			"src": "2525:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1746,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1744,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1751,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "2533:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1743,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1659,
															1735,
															1755
														],
														"referencedDeclaration": 1735,
														"src": "2497:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1742,
												"id": 1753,
												"nodeType": "Return",
												"src": "2490:59:7"
											}
										]
									},
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2428:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:7"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2465:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1740,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:7"
									},
									"scope": 1781,
									"src": "2407:149:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "2711:66:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1768,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1758,
																		"src": "2744:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1766,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1765,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1774,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "2767:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1772,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1771,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1778,
												"nodeType": "Return",
												"src": "2721:49:7"
											}
										]
									},
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "2648:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1757,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "2665:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1759,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:7"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "2705:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1762,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:7"
									},
									"scope": 1781,
									"src": "2633:144:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1782,
							"src": "220:2559:7",
							"usedErrors": []
						}
					],
					"src": "101:2679:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1805
						],
						"IERC165": [
							1817
						]
					},
					"id": 1806,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1783,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1784,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1806,
							"sourceUnit": 1818,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1786,
										"name": "IERC165",
										"nameLocations": [
											"754:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1817,
										"src": "754:7:8"
									},
									"id": 1787,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1785,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1805,
							"linearizedBaseContracts": [
								1805,
								1817
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1816
									],
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1796,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1798,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1817_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1817_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1797,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1817",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1795,
												"id": 1802,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1792,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1789,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 1805,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1806,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1817
						]
					},
					"id": 1818,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1807,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1808,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1817,
							"linearizedBaseContracts": [
								1817
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1810,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 1817,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1818,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2683
						]
					},
					"id": 2684,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1819,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1820,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2683,
							"linearizedBaseContracts": [
								2683
							],
							"name": "Math",
							"nameLocation": "210:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1824,
									"members": [
										{
											"id": 1821,
											"name": "Down",
											"nameLocation": "245:4:10",
											"nodeType": "EnumValue",
											"src": "245:4:10"
										},
										{
											"id": 1822,
											"name": "Up",
											"nameLocation": "287:2:10",
											"nodeType": "EnumValue",
											"src": "287:2:10"
										},
										{
											"id": 1823,
											"name": "Zero",
											"nameLocation": "318:4:10",
											"nodeType": "EnumValue",
											"src": "318:4:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:10",
									"nodeType": "EnumDefinition",
									"src": "221:122:10"
								},
								{
									"body": {
										"id": 1841,
										"nodeType": "Block",
										"src": "480:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1834,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "497:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1835,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "501:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1838,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "509:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:10",
													"trueExpression": {
														"id": 1837,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "505:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1840,
												"nodeType": "Return",
												"src": "490:20:10"
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "426:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "437:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:10"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "471:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:10"
									},
									"scope": 2683,
									"src": "413:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "655:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1852,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "672:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1853,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "676:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1856,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "684:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:10",
													"trueExpression": {
														"id": 1855,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "680:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1851,
												"id": 1858,
												"nodeType": "Return",
												"src": "665:20:10"
											}
										]
									},
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "646:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:10"
									},
									"scope": 2683,
									"src": "588:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "876:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1870,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1871,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "935:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1873,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1874,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "941:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1875,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1865,
																		"src": "945:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1877,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1869,
												"id": 1881,
												"nodeType": "Return",
												"src": "923:28:10"
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "822:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "833:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:10"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "867:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:10"
									},
									"scope": 2683,
									"src": "805:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1907,
										"nodeType": "Block",
										"src": "1228:123:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1893,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "1316:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1897,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1886,
																			"src": "1330:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1900,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "1339:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1892,
												"id": 1906,
												"nodeType": "Return",
												"src": "1309:35:10"
											}
										]
									},
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "1174:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "1185:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:10"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "1219:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:10"
									},
									"scope": 2683,
									"src": "1157:194:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "1765:4115:10",
										"statements": [
											{
												"id": 2029,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:10",
												"statements": [
													{
														"assignments": [
															1921
														],
														"declarations": [
															{
																"constant": false,
																"id": 1921,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2029,
																"src": "2096:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1920,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1922,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:10"
													},
													{
														"assignments": [
															1924
														],
														"declarations": [
															{
																"constant": false,
																"id": 1924,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2029,
																"src": "2168:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1923,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1925,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1921,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1921,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1921,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1924,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1911,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1911,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1913,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1913,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:10",
																"valueSize": 1
															}
														],
														"id": 1926,
														"nodeType": "InlineAssembly",
														"src": "2239:166:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1927,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "2486:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1935,
														"nodeType": "IfStatement",
														"src": "2482:368:10",
														"trueBody": {
															"id": 1934,
															"nodeType": "Block",
															"src": "2498:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1930,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "2816:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1931,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "2824:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1919,
																	"id": 1933,
																	"nodeType": "Return",
																	"src": "2809:26:10"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1937,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "2960:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1938,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1924,
																		"src": "2974:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1936,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1942,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:10"
													},
													{
														"assignments": [
															1944
														],
														"declarations": [
															{
																"constant": false,
																"id": 1944,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2029,
																"src": "3261:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1943,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1945,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:10"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:10"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1915,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1921,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1921,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1921,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1924,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1924,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1944,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1944,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1944,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1911,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1913,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:10",
																"valueSize": 1
															}
														],
														"id": 1946,
														"nodeType": "InlineAssembly",
														"src": "3292:300:10"
													},
													{
														"assignments": [
															1948
														],
														"declarations": [
															{
																"constant": false,
																"id": 1948,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2029,
																"src": "3899:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1947,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1956,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1949,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "3914:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:10",
																			"subExpression": {
																				"id": 1950,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1915,
																				"src": "3930:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1954,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:10"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1915,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1915,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1921,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1921,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1948,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1948,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1948,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1948,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1948,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:10",
																"valueSize": 1
															}
														],
														"id": 1957,
														"nodeType": "InlineAssembly",
														"src": "3960:371:10"
													},
													{
														"expression": {
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1958,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "4397:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1959,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "4406:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1960,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1948,
																	"src": "4414:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1963,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:10"
													},
													{
														"assignments": [
															1965
														],
														"declarations": [
															{
																"constant": false,
																"id": 1965,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2029,
																"src": "4736:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1964,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1972,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1967,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "4759:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1969,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:10"
													},
													{
														"expression": {
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1973,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "4992:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1975,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "5007:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1976,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1965,
																		"src": "5021:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1980,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:10"
													},
													{
														"expression": {
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1981,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "5061:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1983,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "5076:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1984,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1965,
																		"src": "5090:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1988,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:10"
													},
													{
														"expression": {
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1989,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "5131:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1991,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "5146:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1992,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1965,
																		"src": "5160:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1996,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:10"
													},
													{
														"expression": {
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1997,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "5201:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1999,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "5216:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2000,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1965,
																		"src": "5230:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2004,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:10"
													},
													{
														"expression": {
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2005,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "5271:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2007,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "5286:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2008,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1965,
																		"src": "5300:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2012,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:10"
													},
													{
														"expression": {
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2013,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "5342:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2015,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "5357:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2016,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1965,
																		"src": "5371:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2020,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:10"
													},
													{
														"expression": {
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2021,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "5812:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2022,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "5821:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2023,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1965,
																	"src": "5829:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2026,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:10"
													},
													{
														"expression": {
															"id": 2027,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "5857:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1919,
														"id": 2028,
														"nodeType": "Return",
														"src": "5850:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1683:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1694:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1705:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:10"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1749:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:10"
									},
									"scope": 2683,
									"src": "1667:4213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "6122:189:10",
										"statements": [
											{
												"assignments": [
													2047
												],
												"declarations": [
													{
														"constant": false,
														"id": 2047,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2074,
														"src": "6132:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2046,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2053,
												"initialValue": {
													"arguments": [
														{
															"id": 2049,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "6156:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2050,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "6159:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2051,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "6162:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2048,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2031,
															2075
														],
														"referencedDeclaration": 2031,
														"src": "6149:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1824",
															"typeString": "enum Math.Rounding"
														},
														"id": 2057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2054,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "6188:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1824",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2055,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "6200:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1824_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:10",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1822,
															"src": "6200:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1824",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2059,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "6222:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2060,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2036,
																	"src": "6225:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2061,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2038,
																	"src": "6228:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2058,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2071,
												"nodeType": "IfStatement",
												"src": "6184:98:10",
												"trueBody": {
													"id": 2070,
													"nodeType": "Block",
													"src": "6246:36:10",
													"statements": [
														{
															"expression": {
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2066,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "6260:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2069,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2072,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2047,
													"src": "6298:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2045,
												"id": 2073,
												"nodeType": "Return",
												"src": "6291:13:10"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "6028:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "6039:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "6050:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "6071:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1824",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2040,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2039,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1824,
														"src": "6071:8:10"
													},
													"referencedDeclaration": 1824,
													"src": "6071:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1824",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:10"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "6113:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:10"
									},
									"scope": 2683,
									"src": "6012:299:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2186,
										"nodeType": "Block",
										"src": "6587:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2083,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "6601:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2089,
												"nodeType": "IfStatement",
												"src": "6597:45:10",
												"trueBody": {
													"id": 2088,
													"nodeType": "Block",
													"src": "6609:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2082,
															"id": 2087,
															"nodeType": "Return",
															"src": "6623:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2091
												],
												"declarations": [
													{
														"constant": false,
														"id": 2091,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2186,
														"src": "7321:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2090,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2100,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2094,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2078,
																			"src": "7349:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2093,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2355,
																			2391
																		],
																		"referencedDeclaration": 2355,
																		"src": "7344:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2098,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:10"
											},
											{
												"id": 2185,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:10",
												"statements": [
													{
														"expression": {
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2101,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "7782:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2102,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2091,
																				"src": "7792:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2103,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2078,
																					"src": "7801:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2104,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2091,
																					"src": "7805:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2107,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2111,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:10"
													},
													{
														"expression": {
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2112,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "7831:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2113,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2091,
																				"src": "7841:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2114,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2078,
																					"src": "7850:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2115,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2091,
																					"src": "7854:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2118,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2122,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:10"
													},
													{
														"expression": {
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2123,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "7880:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2124,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2091,
																				"src": "7890:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2125,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2078,
																					"src": "7899:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2126,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2091,
																					"src": "7903:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2129,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2133,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:10"
													},
													{
														"expression": {
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2134,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "7929:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2135,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2091,
																				"src": "7939:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2136,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2078,
																					"src": "7948:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2137,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2091,
																					"src": "7952:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2140,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2144,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:10"
													},
													{
														"expression": {
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2145,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "7978:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2146,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2091,
																				"src": "7988:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2147,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2078,
																					"src": "7997:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2148,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2091,
																					"src": "8001:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2151,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2155,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:10"
													},
													{
														"expression": {
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2156,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "8027:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2157,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2091,
																				"src": "8037:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2160,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2158,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2078,
																					"src": "8046:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2159,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2091,
																					"src": "8050:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2162,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2166,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:10"
													},
													{
														"expression": {
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2167,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "8076:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2168,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2091,
																				"src": "8086:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2169,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2078,
																					"src": "8095:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2170,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2091,
																					"src": "8099:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2173,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2177,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2179,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2091,
																	"src": "8136:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2180,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2078,
																		"src": "8144:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2181,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "8148:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2178,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "8132:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2082,
														"id": 2184,
														"nodeType": "Return",
														"src": "8125:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "6544:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:10"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "6578:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:10"
									},
									"scope": 2683,
									"src": "6530:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2222,
										"nodeType": "Block",
										"src": "8348:161:10",
										"statements": [
											{
												"id": 2221,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:10",
												"statements": [
													{
														"assignments": [
															2199
														],
														"declarations": [
															{
																"constant": false,
																"id": 2199,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2221,
																"src": "8382:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2198,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2203,
														"initialValue": {
															"arguments": [
																{
																	"id": 2201,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "8404:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2200,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2187,
																	2223
																],
																"referencedDeclaration": 2187,
																"src": "8399:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2204,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "8427:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1824",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2205,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2193,
																					"src": "8437:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1824",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2206,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1824,
																						"src": "8449:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1824_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2207,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1822,
																					"src": "8449:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1824",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2209,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2199,
																						"src": "8464:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2210,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2199,
																						"src": "8473:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2212,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2190,
																					"src": "8482:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2218,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2197,
														"id": 2220,
														"nodeType": "Return",
														"src": "8420:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2188,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "8286:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "8297:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1824",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2192,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2191,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1824,
														"src": "8297:8:10"
													},
													"referencedDeclaration": 1824,
													"src": "8297:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1824",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:10"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "8339:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:10"
									},
									"scope": 2683,
									"src": "8272:237:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "8694:922:10",
										"statements": [
											{
												"assignments": [
													2232
												],
												"declarations": [
													{
														"constant": false,
														"id": 2232,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2354,
														"src": "8704:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2231,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2234,
												"initialValue": {
													"hexValue": "30",
													"id": 2233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:10"
											},
											{
												"id": 2351,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2235,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "8760:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2249,
														"nodeType": "IfStatement",
														"src": "8756:99:10",
														"trueBody": {
															"id": 2248,
															"nodeType": "Block",
															"src": "8778:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2240,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "8796:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2243,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:10"
																},
																{
																	"expression": {
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2244,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2232,
																			"src": "8827:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2247,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2250,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "8872:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2264,
														"nodeType": "IfStatement",
														"src": "8868:96:10",
														"trueBody": {
															"id": 2263,
															"nodeType": "Block",
															"src": "8889:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2255,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "8907:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2258,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:10"
																},
																{
																	"expression": {
																		"id": 2261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2259,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2232,
																			"src": "8937:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2262,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "8981:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2279,
														"nodeType": "IfStatement",
														"src": "8977:96:10",
														"trueBody": {
															"id": 2278,
															"nodeType": "Block",
															"src": "8998:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2270,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "9016:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2273,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:10"
																},
																{
																	"expression": {
																		"id": 2276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2274,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2232,
																			"src": "9046:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2277,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2280,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "9090:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2294,
														"nodeType": "IfStatement",
														"src": "9086:96:10",
														"trueBody": {
															"id": 2293,
															"nodeType": "Block",
															"src": "9107:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2285,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "9125:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2288,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:10"
																},
																{
																	"expression": {
																		"id": 2291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2289,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2232,
																			"src": "9155:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2292,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2295,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "9199:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2309,
														"nodeType": "IfStatement",
														"src": "9195:93:10",
														"trueBody": {
															"id": 2308,
															"nodeType": "Block",
															"src": "9215:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2300,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "9233:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2303,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:10"
																},
																{
																	"expression": {
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2304,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2232,
																			"src": "9262:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2307,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2310,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "9305:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2324,
														"nodeType": "IfStatement",
														"src": "9301:93:10",
														"trueBody": {
															"id": 2323,
															"nodeType": "Block",
															"src": "9321:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2315,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "9339:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2318,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:10"
																},
																{
																	"expression": {
																		"id": 2321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2319,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2232,
																			"src": "9368:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2322,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2325,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "9411:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2339,
														"nodeType": "IfStatement",
														"src": "9407:93:10",
														"trueBody": {
															"id": 2338,
															"nodeType": "Block",
															"src": "9427:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "9445:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2333,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:10"
																},
																{
																	"expression": {
																		"id": 2336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2334,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2232,
																			"src": "9474:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2337,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2340,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "9517:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2350,
														"nodeType": "IfStatement",
														"src": "9513:64:10",
														"trueBody": {
															"id": 2349,
															"nodeType": "Block",
															"src": "9533:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2345,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2232,
																			"src": "9551:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2348,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2352,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2232,
													"src": "9603:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2230,
												"id": 2353,
												"nodeType": "Return",
												"src": "9596:13:10"
											}
										]
									},
									"documentation": {
										"id": 2224,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:10",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "8647:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:10"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "8685:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:10"
									},
									"scope": 2683,
									"src": "8633:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2390,
										"nodeType": "Block",
										"src": "9849:165:10",
										"statements": [
											{
												"id": 2389,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:10",
												"statements": [
													{
														"assignments": [
															2367
														],
														"declarations": [
															{
																"constant": false,
																"id": 2367,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2389,
																"src": "9883:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2366,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2371,
														"initialValue": {
															"arguments": [
																{
																	"id": 2369,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "9905:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2368,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2355,
																	2391
																],
																"referencedDeclaration": 2355,
																"src": "9900:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2372,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "9932:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1824",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2373,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2361,
																					"src": "9942:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1824",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2374,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1824,
																						"src": "9954:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1824_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2375,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1822,
																					"src": "9954:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1824",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2379,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2377,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2378,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2367,
																						"src": "9974:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2380,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2358,
																					"src": "9983:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2386,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2365,
														"id": 2388,
														"nodeType": "Return",
														"src": "9925:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "9783:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "9798:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1824",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2360,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2359,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1824,
														"src": "9798:8:10"
													},
													"referencedDeclaration": 1824,
													"src": "9798:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1824",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:10"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "9840:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:10"
									},
									"scope": 2683,
									"src": "9769:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2519,
										"nodeType": "Block",
										"src": "10201:854:10",
										"statements": [
											{
												"assignments": [
													2400
												],
												"declarations": [
													{
														"constant": false,
														"id": 2400,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2519,
														"src": "10211:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2399,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2402,
												"initialValue": {
													"hexValue": "30",
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:10"
											},
											{
												"id": 2516,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2403,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "10267:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2419,
														"nodeType": "IfStatement",
														"src": "10263:103:10",
														"trueBody": {
															"id": 2418,
															"nodeType": "Block",
															"src": "10286:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2408,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "10304:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2413,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:10"
																},
																{
																	"expression": {
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2414,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "10339:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2417,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2420,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "10383:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2436,
														"nodeType": "IfStatement",
														"src": "10379:103:10",
														"trueBody": {
															"id": 2435,
															"nodeType": "Block",
															"src": "10402:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2425,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "10420:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2430,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:10"
																},
																{
																	"expression": {
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2431,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "10455:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2434,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2437,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "10499:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2453,
														"nodeType": "IfStatement",
														"src": "10495:103:10",
														"trueBody": {
															"id": 2452,
															"nodeType": "Block",
															"src": "10518:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2442,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "10536:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2447,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:10"
																},
																{
																	"expression": {
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2448,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "10571:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2451,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2454,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "10615:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2470,
														"nodeType": "IfStatement",
														"src": "10611:100:10",
														"trueBody": {
															"id": 2469,
															"nodeType": "Block",
															"src": "10633:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2459,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "10651:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2464,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:10"
																},
																{
																	"expression": {
																		"id": 2467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2465,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "10685:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2468,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2471,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "10728:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2487,
														"nodeType": "IfStatement",
														"src": "10724:100:10",
														"trueBody": {
															"id": 2486,
															"nodeType": "Block",
															"src": "10746:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "10764:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2481,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:10"
																},
																{
																	"expression": {
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2482,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "10798:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2485,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2488,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "10841:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2504,
														"nodeType": "IfStatement",
														"src": "10837:100:10",
														"trueBody": {
															"id": 2503,
															"nodeType": "Block",
															"src": "10859:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2493,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "10877:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2498,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:10"
																},
																{
																	"expression": {
																		"id": 2501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2499,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "10911:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2502,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2505,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "10954:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2515,
														"nodeType": "IfStatement",
														"src": "10950:66:10",
														"trueBody": {
															"id": 2514,
															"nodeType": "Block",
															"src": "10972:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2510,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "10990:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2513,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2517,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2400,
													"src": "11042:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2398,
												"id": 2518,
												"nodeType": "Return",
												"src": "11035:13:10"
											}
										]
									},
									"documentation": {
										"id": 2392,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:10",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "10154:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:10"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "10192:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:10"
									},
									"scope": 2683,
									"src": "10139:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2555,
										"nodeType": "Block",
										"src": "11290:167:10",
										"statements": [
											{
												"id": 2554,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:10",
												"statements": [
													{
														"assignments": [
															2532
														],
														"declarations": [
															{
																"constant": false,
																"id": 2532,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2554,
																"src": "11324:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2531,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2536,
														"initialValue": {
															"arguments": [
																{
																	"id": 2534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "11347:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2533,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2520,
																	2556
																],
																"referencedDeclaration": 2520,
																"src": "11341:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2537,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2532,
																"src": "11374:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1824",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2538,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2526,
																					"src": "11384:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1824",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2539,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1824,
																						"src": "11396:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1824_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2540,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1822,
																					"src": "11396:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1824",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2544,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2542,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2543,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2532,
																						"src": "11417:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2545,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2523,
																					"src": "11426:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2530,
														"id": 2553,
														"nodeType": "Return",
														"src": "11367:73:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2521,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "11224:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "11239:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1824",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2524,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1824,
														"src": "11239:8:10"
													},
													"referencedDeclaration": 1824,
													"src": "11239:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1824",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:10"
									},
									"returnParameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "11281:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:10"
									},
									"scope": 2683,
									"src": "11209:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2642,
										"nodeType": "Block",
										"src": "11771:600:10",
										"statements": [
											{
												"assignments": [
													2565
												],
												"declarations": [
													{
														"constant": false,
														"id": 2565,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2642,
														"src": "11781:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2564,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2567,
												"initialValue": {
													"hexValue": "30",
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:10"
											},
											{
												"id": 2639,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2568,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2559,
																	"src": "11837:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2582,
														"nodeType": "IfStatement",
														"src": "11833:98:10",
														"trueBody": {
															"id": 2581,
															"nodeType": "Block",
															"src": "11855:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2573,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2559,
																			"src": "11873:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2576,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:10"
																},
																{
																	"expression": {
																		"id": 2579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2577,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2565,
																			"src": "11904:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2580,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2583,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2559,
																	"src": "11948:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2597,
														"nodeType": "IfStatement",
														"src": "11944:95:10",
														"trueBody": {
															"id": 2596,
															"nodeType": "Block",
															"src": "11965:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2588,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2559,
																			"src": "11983:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2591,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:10"
																},
																{
																	"expression": {
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2592,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2565,
																			"src": "12013:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2595,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2559,
																	"src": "12056:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2612,
														"nodeType": "IfStatement",
														"src": "12052:95:10",
														"trueBody": {
															"id": 2611,
															"nodeType": "Block",
															"src": "12073:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2603,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2559,
																			"src": "12091:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2606,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:10"
																},
																{
																	"expression": {
																		"id": 2609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2607,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2565,
																			"src": "12121:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2610,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2613,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2559,
																	"src": "12164:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2627,
														"nodeType": "IfStatement",
														"src": "12160:95:10",
														"trueBody": {
															"id": 2626,
															"nodeType": "Block",
															"src": "12181:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2618,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2559,
																			"src": "12199:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2621,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:10"
																},
																{
																	"expression": {
																		"id": 2624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2622,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2565,
																			"src": "12229:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2625,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2628,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2559,
																	"src": "12272:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2638,
														"nodeType": "IfStatement",
														"src": "12268:64:10",
														"trueBody": {
															"id": 2637,
															"nodeType": "Block",
															"src": "12288:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2633,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2565,
																			"src": "12306:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2636,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2640,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2565,
													"src": "12358:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2563,
												"id": 2641,
												"nodeType": "Return",
												"src": "12351:13:10"
											}
										]
									},
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:10",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "11724:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:10"
									},
									"returnParameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "11762:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:10"
									},
									"scope": 2683,
									"src": "11708:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2681,
										"nodeType": "Block",
										"src": "12608:174:10",
										"statements": [
											{
												"id": 2680,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:10",
												"statements": [
													{
														"assignments": [
															2655
														],
														"declarations": [
															{
																"constant": false,
																"id": 2655,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2680,
																"src": "12642:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2654,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2659,
														"initialValue": {
															"arguments": [
																{
																	"id": 2657,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2646,
																	"src": "12666:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2656,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2643,
																	2682
																],
																"referencedDeclaration": 2643,
																"src": "12659:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2660,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2655,
																"src": "12693:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1824",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2661,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2649,
																					"src": "12703:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1824",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2662,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1824,
																						"src": "12715:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1824_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1822,
																					"src": "12715:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1824",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2670,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2665,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2668,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2666,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2655,
																									"src": "12736:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2667,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2669,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2671,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2646,
																					"src": "12751:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2677,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2653,
														"id": 2679,
														"nodeType": "Return",
														"src": "12686:79:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2644,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "12542:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "12557:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1824",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2648,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2647,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1824,
														"src": "12557:8:10"
													},
													"referencedDeclaration": 1824,
													"src": "12557:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1824",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:10"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "12599:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:10"
									},
									"scope": 2683,
									"src": "12526:256:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2684,
							"src": "202:12582:10",
							"usedErrors": []
						}
					],
					"src": "103:12682:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2788
						]
					},
					"id": 2789,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2685,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2686,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2788,
							"linearizedBaseContracts": [
								2788
							],
							"name": "SignedMath",
							"nameLocation": "223:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "375:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2696,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "392:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2697,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2691,
															"src": "396:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2700,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2691,
														"src": "404:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:11",
													"trueExpression": {
														"id": 2699,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2689,
														"src": "400:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2695,
												"id": 2702,
												"nodeType": "Return",
												"src": "385:20:11"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "324:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2688,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "334:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2690,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:11"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "367:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2693,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:11"
									},
									"scope": 2788,
									"src": "311:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2721,
										"nodeType": "Block",
										"src": "554:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2714,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "571:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2715,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2709,
															"src": "575:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2718,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2709,
														"src": "583:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:11",
													"trueExpression": {
														"id": 2717,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2707,
														"src": "579:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2713,
												"id": 2720,
												"nodeType": "Return",
												"src": "564:20:11"
											}
										]
									},
									"documentation": {
										"id": 2705,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "503:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2706,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "513:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2708,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:11"
									},
									"returnParameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "546:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2711,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:11"
									},
									"scope": 2788,
									"src": "490:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2765,
										"nodeType": "Block",
										"src": "796:162:11",
										"statements": [
											{
												"assignments": [
													2733
												],
												"declarations": [
													{
														"constant": false,
														"id": 2733,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "858:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2732,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2746,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2734,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2725,
																	"src": "870:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2735,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2727,
																	"src": "874:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2737,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2738,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2725,
																				"src": "881:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2739,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2727,
																				"src": "885:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2741,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2744,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2747,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "910:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2752,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2733,
																						"src": "930:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2750,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2748,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2757,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2725,
																				"src": "944:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2758,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2727,
																				"src": "948:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2760,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2762,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2731,
												"id": 2764,
												"nodeType": "Return",
												"src": "903:48:11"
											}
										]
									},
									"documentation": {
										"id": 2723,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "745:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2724,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "755:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2726,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:11"
									},
									"returnParameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "788:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2729,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:11"
									},
									"scope": 2788,
									"src": "728:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2786,
										"nodeType": "Block",
										"src": "1102:158:11",
										"statements": [
											{
												"id": 2785,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2776,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "1227:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:11",
																		"subExpression": {
																			"id": 2780,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "1241:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:11",
																	"trueExpression": {
																		"id": 2779,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2769,
																		"src": "1236:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2774,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2773,
														"id": 2784,
														"nodeType": "Return",
														"src": "1212:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2767,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "1060:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2768,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:11"
									},
									"returnParameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "1093:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:11"
									},
									"scope": 2788,
									"src": "1047:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2789,
							"src": "215:1047:11",
							"usedErrors": []
						}
					],
					"src": "109:1154:11"
				},
				"id": 11
			},
			"contracts/NFTMinter.sol": {
				"ast": {
					"absolutePath": "contracts/NFTMinter.sol",
					"exportedSymbols": {
						"Address": [
							1530
						],
						"Context": [
							1552
						],
						"ERC165": [
							1805
						],
						"ERC721": [
							1039
						],
						"IERC165": [
							1817
						],
						"IERC721": [
							1155
						],
						"IERC721Metadata": [
							1200
						],
						"IERC721Receiver": [
							1173
						],
						"Math": [
							2683
						],
						"NFTMinter": [
							2915
						],
						"Ownable": [
							112
						],
						"SignedMath": [
							2788
						],
						"Strings": [
							1781
						]
					},
					"id": 2916,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2790,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2791,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2916,
							"sourceUnit": 1040,
							"src": "60:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2792,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2916,
							"sourceUnit": 113,
							"src": "119:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2793,
										"name": "ERC721",
										"nameLocations": [
											"197:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1039,
										"src": "197:6:12"
									},
									"id": 2794,
									"nodeType": "InheritanceSpecifier",
									"src": "197:6:12"
								},
								{
									"baseName": {
										"id": 2795,
										"name": "Ownable",
										"nameLocations": [
											"205:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "205:7:12"
									},
									"id": 2796,
									"nodeType": "InheritanceSpecifier",
									"src": "205:7:12"
								}
							],
							"canonicalName": "NFTMinter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2915,
							"linearizedBaseContracts": [
								2915,
								112,
								1039,
								1200,
								1155,
								1805,
								1817,
								1552
							],
							"name": "NFTMinter",
							"nameLocation": "184:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "009a9b7b",
									"id": 2798,
									"mutability": "mutable",
									"name": "currentTokenId",
									"nameLocation": "235:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2915,
									"src": "220:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2797,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "220:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMinter.NFT",
									"id": 2807,
									"members": [
										{
											"constant": false,
											"id": 2800,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "287:4:12",
											"nodeType": "VariableDeclaration",
											"scope": 2807,
											"src": "280:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2799,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "280:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2802,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "309:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 2807,
											"src": "302:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2801,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "302:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2804,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "336:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2807,
											"src": "328:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2803,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "328:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2806,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "360:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2807,
											"src": "352:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2805,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "352:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFT",
									"nameLocation": "265:3:12",
									"nodeType": "StructDefinition",
									"scope": 2915,
									"src": "258:117:12",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "265aa621",
									"id": 2812,
									"mutability": "mutable",
									"name": "nfts",
									"nameLocation": "414:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 2915,
									"src": "383:35:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2807_storage_$",
										"typeString": "mapping(uint256 => struct NFTMinter.NFT)"
									},
									"typeName": {
										"id": 2811,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2808,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "391:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "383:23:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2807_storage_$",
											"typeString": "mapping(uint256 => struct NFTMinter.NFT)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2810,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2809,
												"name": "NFT",
												"nameLocations": [
													"402:3:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2807,
												"src": "402:3:12"
											},
											"referencedDeclaration": 2807,
											"src": "402:3:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFT_$2807_storage_ptr",
												"typeString": "struct NFTMinter.NFT"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4698016",
									"id": 2814,
									"mutability": "mutable",
									"name": "liquidityWallet",
									"nameLocation": "442:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2915,
									"src": "427:30:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2813,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "427:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4626402b",
									"id": 2816,
									"mutability": "mutable",
									"name": "treasuryWallet",
									"nameLocation": "479:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2915,
									"src": "464:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2815,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2835,
										"nodeType": "Block",
										"src": "589:96:12",
										"statements": [
											{
												"expression": {
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2827,
														"name": "liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2814,
														"src": "600:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2828,
														"name": "_liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2818,
														"src": "618:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "600:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2830,
												"nodeType": "ExpressionStatement",
												"src": "600:34:12"
											},
											{
												"expression": {
													"id": 2833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2831,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2816,
														"src": "645:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2832,
														"name": "_treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2820,
														"src": "662:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "645:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2834,
												"nodeType": "ExpressionStatement",
												"src": "645:32:12"
											}
										]
									},
									"id": 2836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d794e4654",
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "572:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_468b3d6a0127f01800703f6eaab73eb44c5dc1ea91cbcbbd87cb1a42f1460bb9",
														"typeString": "literal_string \"MyNFT\""
													},
													"value": "MyNFT"
												},
												{
													"hexValue": "4d4e4654",
													"id": 2824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "581:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_38f99777330a23b7254d6d34302160815d5489450b05e18c9e8ef3b4d4ed66f5",
														"typeString": "literal_string \"MNFT\""
													},
													"value": "MNFT"
												}
											],
											"id": 2825,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2822,
												"name": "ERC721",
												"nameLocations": [
													"565:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1039,
												"src": "565:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "565:23:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "_liquidityWallet",
												"nameLocation": "522:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "514:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "_treasuryWallet",
												"nameLocation": "548:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "540:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:51:12"
									},
									"returnParameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:0:12"
									},
									"scope": 2915,
									"src": "502:183:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2913,
										"nodeType": "Block",
										"src": "781:708:12",
										"statements": [
											{
												"expression": {
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "792:16:12",
													"subExpression": {
														"id": 2845,
														"name": "currentTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "792:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2847,
												"nodeType": "ExpressionStatement",
												"src": "792:16:12"
											},
											{
												"assignments": [
													2849
												],
												"declarations": [
													{
														"constant": false,
														"id": 2849,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "827:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2913,
														"src": "819:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2848,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "819:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2851,
												"initialValue": {
													"id": 2850,
													"name": "currentTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2798,
													"src": "837:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "819:32:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2853,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "870:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "874:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "870:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2849,
															"src": "882:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2852,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "864:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "864:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2857,
												"nodeType": "ExpressionStatement",
												"src": "864:26:12"
											},
											{
												"expression": {
													"id": 2868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2858,
															"name": "nfts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2812,
															"src": "903:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2807_storage_$",
																"typeString": "mapping(uint256 => struct NFTMinter.NFT storage ref)"
															}
														},
														"id": 2860,
														"indexExpression": {
															"id": 2859,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2849,
															"src": "908:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "903:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2807_storage",
															"typeString": "struct NFTMinter.NFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2862,
																"name": "_name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "944:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 2863,
																"name": "_metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2840,
																"src": "974:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 2864,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "1005:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2865,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1035:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1039:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1035:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2861,
															"name": "NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2807,
															"src": "919:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NFT_$2807_storage_ptr_$",
																"typeString": "type(struct NFTMinter.NFT storage pointer)"
															}
														},
														"id": 2867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"938:4:12",
															"964:8:12",
															"998:5:12",
															"1026:7:12"
														],
														"names": [
															"name",
															"metadata",
															"price",
															"creator"
														],
														"nodeType": "FunctionCall",
														"src": "919:138:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2807_memory_ptr",
															"typeString": "struct NFTMinter.NFT memory"
														}
													},
													"src": "903:154:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$2807_storage",
														"typeString": "struct NFTMinter.NFT storage ref"
													}
												},
												"id": 2869,
												"nodeType": "ExpressionStatement",
												"src": "903:154:12"
											},
											{
												"assignments": [
													2871
												],
												"declarations": [
													{
														"constant": false,
														"id": 2871,
														"mutability": "mutable",
														"name": "royaltyFee",
														"nameLocation": "1078:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2913,
														"src": "1070:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2870,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1070:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2878,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2872,
																	"name": "_price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2842,
																	"src": "1092:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 2873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1101:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1092:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2875,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1091:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1107:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1091:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1070:40:12"
											},
											{
												"assignments": [
													2880
												],
												"declarations": [
													{
														"constant": false,
														"id": 2880,
														"mutability": "mutable",
														"name": "treasuryFee",
														"nameLocation": "1148:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2913,
														"src": "1140:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2879,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1140:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2887,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2881,
																	"name": "royaltyFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2871,
																	"src": "1163:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "36",
																	"id": 2882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1176:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_6_by_1",
																		"typeString": "int_const 6"
																	},
																	"value": "6"
																},
																"src": "1163:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2884,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1162:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 2885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1181:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1162:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1140:43:12"
											},
											{
												"assignments": [
													2889
												],
												"declarations": [
													{
														"constant": false,
														"id": 2889,
														"mutability": "mutable",
														"name": "liquidityFee",
														"nameLocation": "1243:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 2913,
														"src": "1235:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2888,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1235:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2896,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2890,
																	"name": "royaltyFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2871,
																	"src": "1259:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1272:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1259:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2893,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1258:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 2894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1277:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1258:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1235:44:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2902,
															"name": "treasuryFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2880,
															"src": "1411:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2899,
																	"name": "treasuryWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2816,
																	"src": "1386:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1378:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2897,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1378:8:12",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1378:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1402:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1378:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1378:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2904,
												"nodeType": "ExpressionStatement",
												"src": "1378:45:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2910,
															"name": "liquidityFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2889,
															"src": "1468:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2907,
																	"name": "liquidityWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2814,
																	"src": "1442:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1434:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1434:8:12",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1434:24:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1459:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1434:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1434:47:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2912,
												"nodeType": "ExpressionStatement",
												"src": "1434:47:12"
											}
										]
									},
									"functionSelector": "64b30907",
									"id": 2914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNFT",
									"nameLocation": "702:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "724:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "710:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2837,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "710:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "745:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "731:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "731:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "764:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "756:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:62:12"
									},
									"returnParameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "781:0:12"
									},
									"scope": 2915,
									"src": "693:796:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2916,
							"src": "175:1317:12",
							"usedErrors": []
						}
					],
					"src": "33:1459:12"
				},
				"id": 12
			}
		}
	}
}